;DBKAH
                                                                                                                           SEQ 0001






				IDENTIFICATION
				--------------

	PRODUCT CODE:		AH-F388C-DD

	DIAGNOSTIC CODE:	DBKAH

	PRODUCT NAME:		DBKAHC0 DECSYSTEM-10 KI10 BASIC INSTRUCTION TEST
				TEST # 8, (PI, INTERRUPTS, LUUO'S, I/O)

	VERSION:		0.3

	DATE RELEASED:		JANUARY 1979

	MAINTAINED BY:		DIAGNOSTIC ENGINEERING

	AUTHOR:			BILL SCORZELLI

		        COPYRIGHT (C) 1972, 1979

	        DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.

	THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR  USE  ONLY  ON  A
	SINGLE COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLUSION
	OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR  ANY  OTHER
	COPIES  THEREOF, MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE
	TO ANY OTHER PERSON EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO
	AGREES  TO  THESE  LICENSE TERMS.  TITLE TO AND OWNERSHIP OF THE
	SOFTWARE  SHALL  AT   ALL  TIMES  REMAIN  IN  DIGITAL  EQUIPMENT
	CORPORATION.

	THE INFORMATION IN THIS DOCUMENT IS SUBJECT  TO  CHANGE  WITHOUT
	NOTICE  AND  SHOULD  NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
	EQUIPMENT CORPORATION.

	DIGITAL EQUIPMENT CORPORATION ASSUMES NO  RESPONSIBILITY FOR THE
	USE  OR  RELIABILITY  OF  ITS SOFTWARE IN EQUIPMENT WHICH IS NOT
	SUPPLIED BY DIGITAL EQUIPMENT CORPORATION.
							MAINDEC-10-DBKAH.TXT
							PAGE 2                                                             SEQ 0002


			TABLE OF CONTENTS
			-----------------

1.0	ABSTRACT

2.0	REQUIREMENTS

2.1	EQUIPMENT

2.2	STORAGE

2.3	PRELIMINARY PROGRAMS

3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

3.2	STARTING PROCEDURE

3.3	OPERATING PROCEDURE

4.0	ERRORS

5.0	ITERATION COUNTER

6.0	CYCLE TIME

7.0	OPERATIONAL VARIATIONS

8.0	MISCELLANEOUS

9.0	LISTING
							MAINDEC-10-DBKAH.TXT
							PAGE 3                                                             SEQ 0003


1.0	ABSTRACT

	THIS PDP-10 KI10 BASIC INSTRUCTION DIAGNOSTIC IS THE
	EIGHTH IN A SERIES OF PDP-10 KI10 PROCESSOR DIAGNOSTICS.
	THE DIAGNOSTIC TESTS THE PI SYSTEM, INTERRUPTS, LUUO'S
	AND INPUT/OUTPUT.

2.0	REQUIREMENTS

2.1	EQUIPMENT

	A PDP-10 KI10 WITH A MINIMUM OF 32K OF MEMORY

	PAPER TAPE READER (KI10)
	DECTAPE (OPTIONAL)
	CONSOLE TELETYPE

2.2	STORAGE

	THE PROGRAM RUNS WITHIN 32K OF MEMORY.

2.3	PRELIMINARY PROGRAMS

	CONSOLE FUNCTIONS WORKING PROPERLY
	PAPER TAPE READ-IN WORKING PROPERLY (KI10)
	PREVIOUS PROCESSOR DIAGNOSTICS
							MAINDEC-10-DBKAH.TXT
							PAGE 4                                                             SEQ 0004


3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

	PAPER TAPE - HARDWARE READ-IN (READER DEVICE CODE 104)
	DECTAPE - LOAD WITH DIAMON (DECTAPE DEVICE CODE 320)

3.2	STARTING PROCEDURE

	STAND-ALONE STARTING ADDRESS IS 30000.

	IF THE DIAGNOSTIC FAILS TO START CORRECTLY TRY STARTING AT THE
	FIRST TEST INSTEAD OF AT THE BEGINNING OF THE CONTROL SEQUENCE.
	(SEE LISTING).

3.3	OPERATING PROCEDURE

	ONCE STARTED THE PROGRAM WILL CYCLE CONTINUALLY UNTIL STOPPED
	OR AN ERROR OCCURS.

4.0	ERRORS

	ERRORS ARE IN THE FORM OF HALT INSTRUCTIONS.  THE LISTING
	SHOULD BE CONSULTED TO DETERMINE THE CAUSE OF THE ERROR.  A
	NO OPERATION (JUMP) INSTRUCTION FOLLOWS EACH HALT.  THIS
	MAY BE USEFUL IN CONSTRUCTING A SCOPE LOOP TO CYCLE ON THE
	FAILING INSTRUCTION.

5.0	ITERATION COUNTER

	THE ITERATION COUNT OF THE PROGRAM IS DISPLAYED IN THE MEM-
	ORY INDICATORS (MI).  THIS COUNT IS A DECREMENTING COUNT AND
	INITIALLY STARTS AT -1 IN STAND-ALONE OPERATION.

6.0	CYCLE TIME

	THE CYCLE TIME OF THE PROGRAM IS IN THE MILLISECOND RANGE AND
	IS THEREFORE SUITABLE FOR TAKING MARGINS, VIBRATION TESTS, ETC.

							MAINDEC-10-DBKAH.TXT
							PAGE 5                                                             SEQ 0005


7.0	OPERATIONAL VARIATIONS

	A.  DIAGNOSTIC MONITOR

	    THE PROGRAM IS USABLE WITH THE DIAGNOSTIC MONITOR TO PRO-
	    VIDE RELIABILITY TESTS, ACCEPTANCE TESTS, AND/OR TO PRO-
	    VIDE A QUICK METHOD OF ISOLATION OF A FAULT TO A PARTICULAR
	    AREA OF THE PROCESSOR.  CERTAIN PROCEDURES ARE USED WHEN
	    THE PROGRAM IS USED IN THIS MANNER.  THEY ARE:

	    1.  THE DIAGNOSTIC MONITOR TRANSFERS CONTROL TO THE PRO-
		GRAM AND STARTS IT AT LOCATION 30002.

	    2.  MONCTL - LOCATION 30043 IS USED AS THE DIAGNOSTIC MON-
		ITOR CONTROL FLAG WORD.

	B.  USER MODE

	    THE PROGRAM WILL OPERATE IN USER MODE AND AS SUCH PROVIDES
	    ASSURANCE THAT THE PROCESSOR IS PERFORMING ALL FUNCTIONS
	    CORRECTLY.  USER MODE STARTING ADDRESS IS 30000.

	C.  SYSTEM EXERCISER

	    STARTING ADDRESS IS 30003.  NO DATA SWITCHES ARE USED BY
	    THIS PROGRAM.

8.0	MISCELLANEOUS

	NONE

9.0	LISTING
	THIS IS A HISTORY OF THE DEVELOPMENT OF MAINDEC-10-DBKAH
                                                                                                                           SEQ 0006
************************************************************************

PRODUCT CODE:		MAINDEC-10-DBKAH

PRODUCT NAME:		BASIC INSTRUCTION DIAGNOSTIC #8

DATE RELEASED:		JANUARY, 1979

VERSION:		0.3

UPDATE AUTHOR:		BILL SCORZELLI

CHANGES MADE:

	1. THERE WAS A BUG IN THE PROGRAM AT LOCATION 31271 (DATAO APR,0)
	   WHICH WAS SUPPOSE TO SEND ZERO'S BUT INSTEAD TRANSFERED
	   WHAT WAS IN LOCATION 0. ADDED A "SETZ" TO CLEAR LOCATION 0.

************************************************************************

PRODUCT CODE:		MAINDEC-10-DBKAH

PRODUCT NAME:		BASIC INSTRUCTION DIAGNOSTIC #8

DATE RELEASED:		AUGUST,1976

VERSION:		0.2

UPDATE AUTHOR:		EDWARD G. PRENTICE

CHANGES MADE:

	1. UPGRADE TO ALLOW COMPATABILITY WITH THE SUBROUTINE PACKAGE.

	2. DIAGNOSTIC DEFICIENCY REPORT ON FLOATING "PI DISMISS" HAS
		BEEN CLOSED OUT BECAUSE PROBLEM IS NOT RECREATABLE.
		DIAGNOSTIC FINDS PROBLEM WHEN SIGNAL IS TIED HIGH,
		TIED LOW, OR FLOATING.

************************************************************************

ORIGINAL VERSION:	0.1

ORIGINAL AUTHOR:	RICHARD MALISKA

ORIGINAL RELEASE:	16-MAR-72

************************************************************************
DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 1             
                                                                                                                           SEQ 0007




















				   DOCUMENT
				**************
				  DBKAH  LST
				**************

















		    COPYRIGHT 1979
		    DIGITAL EQUIPMENT CORPORATION
		    MAYNARD, MASS. 01754

DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 2             
                                                                                                                           SEQ 0008

				 TABLE OF CONTENTS
				*******************


	22	

	55	*PARAM*	CONSOLE DATA SWITCH ASSIGNMENTS, AUG 1,1977

	90	*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976

	296	ERROR HANDLING UUO DEFINITIONS, JAN 5,1976

	334	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977

	662	*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76

	818	MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS

	1174	IOT TESTING

	1367	TEST APR FLAGS

	1620	TEST PI FLAGS

	1661	BASIC PI SYSTEM TESTING

	3911	INTERRUPT TESTING WITH REAL INTERRUPTS

	4065	INTERNAL INTERRUPT REQUEST TESTING

	4207	PRIORITY TESTING

	4357	DUAL REQUEST TESTING

	5142	BASIC NO-SKIP TESTING

	5630	TEST THE ABILITY TO DISMISS INTERRUPTS

	5895	TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK

	6104	TEST VARIOUS RESETS

	6465	INTERRUPT OUT OF INDIRECT LOOP

	6746	LOCAL UUO TESTING (LUUO)

	8027	TEST UUO STORING CORRECTLY
DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 3             
                                                                                                                           SEQ 0009

				 TABLE OF CONTENTS
				*******************


	8674	TEST CLEARING OF INDEX AND INDIRECT BITS ON UUO

	8724	TEST UUOS OUT OF FAST MEMORY

	8981	SIMPLE MUUO TEST

	9032	TEST THE USER IOT BIT

	9066	DBKAH SUBROUTINES

	9157	DBKAH TRAPS

	9205	BASIC CONSOLE TTY TEST

	9332	DBKAH STORAGE

	9342	*STOR* RESERVED STORAGE, JULY 19,1977
DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 4             
                                                                                                                           SEQ 0010
		*****************************************************************
	22	PROGRAM PARAMETERS
		*****************************************************************

		*****************************************************************
	55	*PARAM*	CONSOLE DATA SWITCH ASSIGNMENTS, AUG 1,1977
		*****************************************************************

		60	DATA SWITCHES (READ FROM CONSOLE IN EXEC MODE OR TYPED IN IN USER MODE)
			LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
			AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS

		*****************************************************************
	90	*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976
		*****************************************************************

		93	SPECIAL SUBPROGRAM LINKAGES

		104	SPECIAL SUBROUTINE FATAL HALTS
			USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE

		136	SUBROUTINE INITIALIZATION CALL

		142	HALTING UUO'S (A MORE GRACEFUL HALT THAN SIMPLY USING THE HALT INSTRUCTION).

		149	TERMINAL INPUT UUO'S
			ALWAYS COME FROM THE CONSOLE TERMINAL IN EXEC MODE OR THE
			CONTROLLING TERMINAL (REAL TERMINAL OR PTY) IN USER MODE.

		165	TERMINAL OUTPUT UUO'S.

		231	SIXBTZ -- MACRO TO GENERATE SIXBIT DATA FOR PRINTING
				CONSERVES CORE OVER ASCIZ

		236	CONSOLE SWITCH INPUT UUO.
			READS CONSOLE SWITCHES IF IN EXEC MODE OR ASKS FOR THEM IF
			 USER MODE.

		242	CLOCK INITIALIZATION UUO - TO SET DESIRED CLOCK OPERATION
			EITHER IGNORE CLOCK, ONLY LET IT TICK OR CAUSE INTERRUPT TO OCCUR.

		248	KL10 ONLY CACHE OPERATION UUO'S

		253	END OF PASS/PROGRAM UUOS

		256	DECREMENT ITERATION COUNT, CHECK IF FINISHED WITH THIS PROGRAM ETC.

		261	MEMORY MANAGEMENT UUO'S
			UUO'S TO PERFORM VARIOUS MEMORY FUNCTIONS. MAPPING, ZEROING, PAGING,
			ADDRESS CONVERSION, ETC...

DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 5             
                                                                                                                           SEQ 0011
		273	DEVICE CODE MODIFICATION UUO
			ALLOWS THE MODIFICATION OF IOT'S TO ONE DEVICE TO BE CHANGED TO
			IOT'S TO A DIFFERENT DEVICE CODE.

		283	"DIAMON" FILE SELECTION AND READ UUOS

		290	KI10 ONLY UUO FOR PRINTING MARGIN VALUES

		*****************************************************************
	296	ERROR HANDLING UUO DEFINITIONS, JAN 5,1976
		*****************************************************************

		299	ERROR HANDLER PARAMETERS

		308	THE ERROR HANDLER MACROS

		310	A MACRO TO REPORT AN ERROR AND LOOP

		321	A MACRO TO REPORT AN ERROR AND NOT LOOP

		*****************************************************************
	334	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977
		*****************************************************************

		339	PROGRAM STARTING ADDRESSES
			THESE ADDRESSES CALL VARIOUS SPECIAL START ROUTINES AND OR OPTIONS
			NORMAL START ADDRESS IS 30000 ALL OTHERS ARE SPECIAL. INVOKED BECAUSE
			OF END OF PASS, POWER FAILURE, DDT START, RE-ENTERING(TYPICALLY USER
			MODE), OR ANY NUMBER OF SPECIAL FEATURE TESTS.

		372	PROGRAM FIXED PARAMETER AREA

		392	PROGRAM VARIABLE PARAMETER AREA

		412	SPECIAL PROGRAM DISPATCH ADDRESSES

		443	PROCESSOR CONTROL STORAGE

		463	UUO DISPATCH TABLE

		483	MEMORY MANAGMENT STORAGE

		493	PRINT CONTROL STORAGE

		516	THE FOLLOWING MISCELLANEOUS PRINT CHARACTERS ARE INCLUDED
			TO FACILITATE PRINTING AND ARE CALLED AS FOLLOWS:
				MOVEI	NAME
				PNTA		;OR PNTAF

DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 6             
                                                                                                                           SEQ 0012
		547	USER MODE OUTPUT FILE INFORMATION

		556	DISK UPDATE MODE FILE INFORMATION

		564	PUSHDOWN LIST CONTROL INFORMATION

		572	POWER LINE CLOCK FREQUENCY FLAG

		578	KL10 CACHE CONTROL FLAGS

		585	NUMBER INPUT DIGIT FLAG

		591	KL10 & KI10 "INHPAG" SWITCH PAGING PREVENTION

		597	ERROR REPORTING ROUTINE ADDITIONAL USERS CONTROL INSTRUCTIONS

		605	SPECIAL USERS UUO INTERCEPT INSTRUCTION

		610	USER MODE MONITOR TYPE FLAG

		616	SPECIAL USERS MUUO INTERCEPT INSTRUCTION

		622	SPECIAL USERS USER MODE OUTPUT ERROR INTERCEPT INSTUCTION

		628	"SWITCH" CALL USAGE CONTROL

		634	SPECIAL USERS ALTMODE SWITCH CALL INTERCEPT INSTRUCTIONS

		641	SM10 (KS-10) PROCESSOR TYPE FLAG

		647	RIGHT HALF SWITCHES PROMPT TABLE ADDRESS

		653	SPECIAL FUTURE EXPANSION ROOM

		657	END OF FIXED STORAGE

		*****************************************************************
	662	*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76
		*****************************************************************

DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 7             
                                                                                                                           SEQ 0013
		*****************************************************************
	818	MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS
		*****************************************************************

		*****************************************************************
	1174	IOT TESTING
		*****************************************************************

		*****************************************************************
	1367	TEST APR FLAGS
		*****************************************************************

		*****************************************************************
	1620	TEST PI FLAGS
		*****************************************************************

		*****************************************************************
	1661	BASIC PI SYSTEM TESTING
		*****************************************************************

		*****************************************************************
	3911	INTERRUPT TESTING WITH REAL INTERRUPTS
		*****************************************************************

		*****************************************************************
	4065	INTERNAL INTERRUPT REQUEST TESTING
		*****************************************************************

		*****************************************************************
	4207	PRIORITY TESTING
		*****************************************************************

		*****************************************************************
	4357	DUAL REQUEST TESTING
		*****************************************************************

		*****************************************************************
	5142	BASIC NO-SKIP TESTING
		*****************************************************************

DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 8             
                                                                                                                           SEQ 0014
		*****************************************************************
	5630	TEST THE ABILITY TO DISMISS INTERRUPTS
		*****************************************************************

		*****************************************************************
	5895	TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK
		*****************************************************************

		*****************************************************************
	6104	TEST VARIOUS RESETS
		*****************************************************************

		*****************************************************************
	6465	INTERRUPT OUT OF INDIRECT LOOP
		*****************************************************************

		*****************************************************************
	6746	LOCAL UUO TESTING (LUUO)
		*****************************************************************

		*****************************************************************
	8027	TEST UUO STORING CORRECTLY
		*****************************************************************

		*****************************************************************
	8674	TEST CLEARING OF INDEX AND INDIRECT BITS ON UUO
		*****************************************************************

		*****************************************************************
	8724	TEST UUOS OUT OF FAST MEMORY
		*****************************************************************

		*****************************************************************
	8981	SIMPLE MUUO TEST
		*****************************************************************

		*****************************************************************
	9032	TEST THE USER IOT BIT
		*****************************************************************

DBKAH  LST                                                              DECDOC VER  00.24   18-JAN-79 11:25:08   PAGE 9             
                                                                                                                           SEQ 0015
		*****************************************************************
	9066	DBKAH SUBROUTINES
		*****************************************************************

		*****************************************************************
	9157	DBKAH TRAPS
		*****************************************************************

		*****************************************************************
	9205	BASIC CONSOLE TTY TEST
		*****************************************************************

		*****************************************************************
	9332	DBKAH STORAGE
		*****************************************************************

		*****************************************************************
	9342	*STOR* RESERVED STORAGE, JULY 19,1977
		*****************************************************************
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1
DBKAHT	MAC	18-Jan-79 11:21		*PARAM*	CONSOLE DATA SWITCH ASSIGNMENTS, AUG 1,1977                                SEQ 0016

     1					;MAINDEC-T6-DBKAH
     2
     3
     4
     5
     6
     7
     8
     9
    10						XLIST
    11						LIST
    12						NAME	\MCNVER,\DECVER^
    13	000137					LOC	137
    14	000137	000000	000003			MCNVER,DECVER
    15					;COPYRIGHT 1972
    16					;DIGITAL EQUIPMENT CORP.
    17					;MAYNARD MASS 01754
    18					;R.P. MALISKA
    19
    20
    21					;ASSEMBLE AS DBKAHT,PARAM,BEGIN,DBKAHM,STOR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 2
DBKAHT	MAC	18-Jan-79 11:21		PROGRAM PARAMETERS                                                                 SEQ 0017

    22					SUBTTL	PROGRAM PARAMETERS
    23
    24						LALL
    25			000001		KI10==1					;KI10 PARAMETERS
    26			000001		EXCASB==1				;EXEC MODE ASSEMBLY
    27			000001		PGMEND==1				;ASSEMBLE END STATEMENT
    28
    29					;PROGRAM SPECIAL FEATURE PARAMETERS
    30
    31			041254		SADR1=TTYBEG				;BEGINING OF THE TTY TEST
    32			030000		SADR2=BEGIN
    33			030000		SADR3=BEGIN
    34			030000		SADR4=BEGIN
    35		254000	030000		SADR5=JRST BEGIN
    36		254000	030000		SADR6=JRST BEGIN
    37		254000	030000		SADR7=JRST BEGIN
    38		254000	030000		SADR8=JRST BEGIN
    39		254000	030000		SADR9=JRST BEGIN
    40		254000	030000		SADR10=JRST BEGIN
    41		254000	030000		SADR11=JRST BEGIN
    42
    43			000000		PAREA0=0
    44			000000		PAREA1=0
    45			000000		PAREA2=0
    46		444253	415000		PAREA3=SIXBIT/DBKAH/
    47		605664	000000		PAREA4=SIXBIT/PNT/
    48			000000		PAREA5=0
    49			000000		PAREA6=0
    50
    51			030674		START=IOTXXX				;INITIAL START (PDP6,KA10 CHECK)
    52			030705		STARTA=IOT0				;RETURN START
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3
DBKAHT	MAC	18-Jan-79 11:21		PROGRAM PARAMETERS                                                                 SEQ 0018

    53			000001		PGMEND==1
    54						NOSYM
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1
PARAM	KLM	 1-Aug-77 08:33		*PARAM*	CONSOLE DATA SWITCH ASSIGNMENTS, AUG 1,1977                                SEQ 0019

    55					SUBTTL	*PARAM*	CONSOLE DATA SWITCH ASSIGNMENTS, AUG 1,1977
    56
    57					DEFINE	S,<;*********************************************************************>
    58
    59					S^;*********************************************************************^
    60					;*DATA SWITCHES (READ FROM CONSOLE IN EXEC MODE OR TYPED IN IN USER MODE)
    61					;*LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
    62					;*AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS
    63					S^;*********************************************************************^
    64
    65			400000		ABORT==	400000			;ABORT PROGRAM ON PASS COMPLETION
    66			200000		RSTART==200000			;RESTART TEST, PRINT TOTALS
    67			100000		TOTALS==100000			;PRINT TOTALS, CONTINUE
    68
    69			040000		NOPNT==	040000			;INHIBIT ALL PRINT/TYPE OUT (EXCEPT FORCED)
    70			020000		PNTLPT==020000			;PRINT ALL DATA ON LPT (LOGICAL DEVICE, USER MODE)
    71			010000		DING==	010000			;RING BELL ON ERROR
    72
    73			004000		LOOPER==004000			;ENTER EXERCISE/CHECK LOOP ON ERROR
    74			002000		ERSTOP==002000			;HALT ON TEST ERROR
    75			001000		PALERS==001000			;PRINT ALL ERRORS
    76
    77			000400		RELIAB==000400			;RELIABILITY MODE
    78			000200		TXTINH==000200			;INHIBIT ERROR TEXT
    79			000100		INHPAG==000100			;INHIBIT PAGING
    80
    81			000040		MODDVC==000040			;MODIFY DEVICE CODE
    82			000020		INHCSH==000020			;INHIBIT CACHE
    83			000010		OPRSEL==000010			;OPERATOR SELECTION
    84
    85			000004		CHAIN==	000004			;CHAIN CONTROL SWITCH
    86
    87			000002		KAHZ50==000002			;KA10 50 HERTZ POWER
    88
    89									;SWITCH 17 RESERVED !!!
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 2
PARAM	KLM	 1-Aug-77 08:33		*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976                                 SEQ 0020

    90					SUBTTL	*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976
    91
    92					S^;*********************************************************************^
    93					;*SPECIAL SUBPROGRAM LINKAGES
    94					S^;*********************************************************************^
    95
    96			027772		FSELNK=	27772	;FILE SELECT LINK
    97			027773		FRDLNK=	27773	;FILE READ LINK
    98			027774		LDLNK=	27774	;LOAD LINKAGE ADDRESS
    99			027775		DDTLNK=	27775	;DDT LINKAGE ADDRESS
   100			027776		MODLNK=	27776	;OPERATIONAL MODE CHECK LINKAGE ADDRESS
   101			027777		SUBLNK=	27777	;SUBROUTINE LINKAGE ADDRESS
   102
   103					S^;*********************************************************************^
   104					;*SPECIAL SUBROUTINE FATAL HALTS
   105					;*USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE
   106					S^;*********************************************************************^
   107
   108					;ADDRESS   TAG	REASON
   109					;---------------------
   110
   111					; 1010 	NOEXEC	;PROGRAM NOT CODED FOR EXEC MODE OPERATION
   112					; 1011  PLERR	;FATAL PUSH LIST POINTER ERROR
   113					; 1012  PLERR1	;INITIAL PUSH LIST POINTER ERROR
   114					; 1013  MUOERR	;MUUO WITH LUUO HANDLER WIPED OUT
   115					; 1014  DTEBER	;DTE20 INTERRUPT WITHOUT DOORBELL
   116					; 1015  DTECER	;DTE20 CLOCK INTERRUPT WITHOUT FLAG SET
   117					; 1016  CPIERR	;CPU INITIALIZATION ERROR
   118					; 1017  EOPERR	;END OF PROGRAM ERROR
   119					; 1020  LUOERR	;INTERRUPT WITH LUUO HANDLER WIPED OUT
   120
   121					S^;*********************************************************************^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3
PARAM	KLM	 1-Aug-77 08:33		*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976                                 SEQ 0021

   122					S^;*********************************************************************^
   123					;OPERATOR DEFINITIONS (NON-UUO'S)
   124					S^;*********************************************************************^
   125
   126		260740	000000		OPDEF	GO	[PUSHJ	P,]	;SUBROUTINE CALL
   127		263740	000000		OPDEF	RTN	[POPJ	P,]	;SUBROUTINE RETURN 
   128		261740	000000		OPDEF	PUT	[PUSH	P,]	;PUT DATA ON PUSH LIST
   129		262740	000000		OPDEF	GET	[POP	P,]	;GET DATA FROM PUSH LIST 
   130		254000	000000		OPDEF	PJRST	[JRST	]	;JRST TO ROUTINE THAT RTN'S
   131		254200	000000		OPDEF	HALT	[JRST	4,]	;DEFINITION FOR DDT
   132		254100	000000		OPDEF	JRSTF	[JRST	2,]	;DEFINITION FOR DDT
   133		254500	000000		OPDEF	JEN	[JRST	12,]	;DEFINITION FOR DDT
   134
   135					S^;*********************************************************************^
   136					;*SUBROUTINE INITIALIZATION CALL
   137					S^;*********************************************************************^
   138
   139		265000	030011		OPDEF	PGMINT	[JSP	0,SBINIT]	;SUBROUTINE INITIALIZATION
   140
   141					S^;*********************************************************************^
   142					;*HALTING UUO'S (A MORE GRACEFUL HALT THAN SIMPLY USING THE HALT INSTRUCTION).
   143					S^;*********************************************************************^
   144
   145		037640	000004		OPDEF	FATAL	[37B8!15B12!4]	;FATAL PROGRAMMING HALT
   146		037600	000004		OPDEF	ERRHLT	[37B8!14B12!4]	;PROGRAM ERROR HALT
   147
   148					S^;*********************************************************************^
   149					;*TERMINAL INPUT UUO'S
   150					;*ALWAYS COME FROM THE CONSOLE TERMINAL IN EXEC MODE OR THE
   151					;*CONTROLLING TERMINAL (REAL TERMINAL OR PTY) IN USER MODE.
   152					S^;*********************************************************************^
   153
   154		037000	000003		OPDEF	TTICHR 	[37B8!0B12!3]	;TTY, INPUT ANY CHARACTER
   155		037040	000003		OPDEF	TTIYES	[37B8!1B12!3]	;TTY, NORMAL RETURN Y
   156		037100	000003		OPDEF	TTINO	[37B8!2B12!3]	;TTY, NORMAL RETURN N
   157		037140	000003		OPDEF	TTIOCT	[37B8!3B12!3]	;TTY, INPUT OCTAL WORD
   158		037200	000003		OPDEF	TTIDEC	[37B8!4B12!3]	;TTY, INPUT DECIMAL WORD
   159		037240	000003		OPDEF	TTICNV	[37B8!5B12!3]	;TTY, INPUT CONVERTABLE WORD
   160		037300	000003		OPDEF	TTLOOK	[37B8!6B12!3]	;TTY, KEYBOARD CHECK
   161		037340	000003		OPDEF	TTALTM	[37B8!7B12!3]	;TTY, ALT-MODE CHECK
   162		037400	000003		OPDEF	TTSIXB	[37B8!10B12!3]	;TTY, INPUT SIXBIT WORD
   163		037440	000003		OPDEF	TTYINP	[37B8!11B12!3]	;TTY, IMAGE MODE INPUT
   164		037500	000003		OPDEF	TTICLR	[37B8!12B12!3]	;TTY, CLEAR INPUT
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 4
PARAM	KLM	 1-Aug-77 08:33		*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976                                 SEQ 0022

   165					;*TERMINAL OUTPUT UUO'S.
   166
   167		037000	000000		OPDEF	PNTA	[37B8!0B12!0]	;PRINT ASCII WORD
   168		037000	000001		OPDEF	PNTAF	[37B8!0B12!1]	;PRINT ASCII WORD FORCED
   169		037740	000000		OPDEF	PNTAL	[37B8!17B12!0]	;PRINT ASCIZ LINE
   170		037740	000001		OPDEF	PNTALF	[37B8!17B12!1]	;PRINT ASCIZ LINE FORCED
   171		037600	000003		OPDEF	PSIXL	[37B8!14B12!3]	;PRINT SIXBIT'Z LINE
   172		037640	000003		OPDEF	PSIXLF	[37B8!15B12!3]	;PRINT SIXBIT'Z LINE FORCED
   173		037000	000000		OPDEF	PNTMSG	[37B8!0B12!0]	;PRINT MESSAGE IMMEDIATE
   174		037040	000000		OPDEF	PNTMSF	[37B8!1B12!0]	;PRINT MESSAGE IMMEDIATE FORCED
   175		037100	000000		OPDEF	PSIXM	[37B8!2B12!0]	;PRINT SIXBIT'Z MSG IMMEDIATE
   176		037200	000000		OPDEF	PSIXMF	[37B8!4B12!0]	;PRINT SIXBIT'Z MSG IMM FORCED
   177		037000	000000		OPDEF	PNTCI	[37B8!0B12!0]	;PRINT CHARACTER IMMEDIATE
   178		037040	000000		OPDEF	PNTCIF	[37B8!1B12!0]	;PRINT CHARACTER IMMEDIATE FORCED
   179		037500	000000		OPDEF	PNTCHR	[37B8!12B12!0]	;PRINT CHARACTER
   180		037500	000001		OPDEF	PNTCHF	[37B8!12B12!1]	;PRINT CHARACTER FORCED
   181		037040	000000		OPDEF	PNT1	[37B8!1B12!0]	;PRINT ONE OCTAL DIGIT
   182		037040	000001		OPDEF	PNT1F	[37B8!1B12!1]	;PRINT 1 OCTAL DIGIT FORCED	
   183		037100	000000		OPDEF	PNT2	[37B8!2B12!0]	;PRINT TWO OCTAL DIGITS
   184		037100	000001		OPDEF	PNT2F	[37B8!2B12!1]	;PRINT 2 OCTAL DIGITS FORCED	
   185		037140	000000		OPDEF	PNT3	[37B8!3B12!0]	;PRINT THREE OCTAL DIGITS
   186		037140	000001		OPDEF	PNT3F	[37B8!3B12!1]	;PRINT THREE OCTAL DIGITS FORCED	
   187		037200	000000		OPDEF	PNT4	[37B8!4B12!0]	;PRINT FOUR OCTAL DIGITS
   188		037200	000001		OPDEF	PNT4F	[37B8!4B12!1]	;PRINT FOUR OCTAL DIGITS FORCED
   189		037240	000000		OPDEF	PNT5	[37B8!5B12!0]	;PRINT FIVE OCTAL DIGITS
   190		037240	000001		OPDEF	PNT5F	[37B8!5B12!1]	;PRINT FIVE OCTAL DIGITS FORCED
   191		037300	000000		OPDEF	PNT6	[37B8!6B12!0]	;PRINT SIX OCTAL DIGITS
   192		037300	000001		OPDEF	PNT6F	[37B8!6B12!1]	;PRINT SIX OCTAL DIGITS FORCED
   193		037340	000000		OPDEF	PNT7	[37B8!7B12!0]	;PRINT 7 OCTAL DIGITS
   194		037340	000001		OPDEF	PNT7F	[37B8!7B12!1]	;PRINT 7 OCTAL DIGITS FORCED
   195		037440	000000		OPDEF	PNT11	[37B8!11B12!0]	;PRINT 11 OCTAL DIGITS
   196		037440	000001		OPDEF	PNT11F	[37B8!11B12!1]	;PRINT 11 OCTAL DIGITS FORCED.
   197		037400	000000		OPDEF	PNTADR	[37B8!10B12!0]	;PRINT PHYSICAL ADDRESS
   198		037400	000001		OPDEF	PNTADF	[37B8!10B12!1]	;PRINT PHYSICAL ADDRESS FORCED
   199		037600	000000		OPDEF	PNTOCT  [37B8!14B12!0]	;PRINT FULL WORD OCTAL
   200		037600	000001		OPDEF	PNTOTF	[37B8!14B12!1]	;PRINT FULL WORD OCTAL FORCED
   201		037540	000000		OPDEF	PNTHW	[37B8!13B12!0]	;PRINT OCTAL HALF WORDS, 6 SP 6
   202		037540	000001		OPDEF	PNTHWF	[37B8!13B12!1]	;PRINT OCTAL HALF WORDS, 6 SP 6 FORCED
   203		037700	000003		OPDEF	PNTOCS	[37B8!16B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S
   204		037740	000003		OPDEF	PNTOCF	[37B8!17B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S FORCED
   205		037640	000000		OPDEF	PNTDEC	[37B8!15B12!0]	;PRINT DECIMAL, SUPRESS LEADING 0'S
   206		037640	000001		OPDEF	PNTDCF	[37B8!15B12!1]	;PRINT DECIMAL, SUPRESS LEADING 0'S FORCED
   207		037700	000000		OPDEF	PNTDS	[37B8!16B12!0]	;PRINT DECIMAL, SPACES FOR LD 0'S
   208		037700	000001		OPDEF	PNTDSF	[37B8!16B12!1]	;PRINT DECIMAL, SPACES FOR LD 0'S FORCED
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 5
PARAM	KLM	 1-Aug-77 08:33		*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976                                 SEQ 0023

   209		037200	000002		OPDEF	PNTNM	[37B8!4B12!2]	;PRINT PROGRAM NAME
   210		037000	000002		OPDEF	PNTSIX	[37B8!0B12!2]	;PRINT SIXBIT WORD
   211		037040	000002		OPDEF	PNTSXF	[37B8!1B12!2]	;PRINT SIXBIT WORD FORCED
   212		037240	000002		OPDEF	DROPDV	[37B8!5B12!2]	;CLOSE LOGICAL FILE, USER MODE
   213		037100	000002		OPDEF	PNTCW	[37B8!2B12!2]	;PRINT DF10 CONTROL WORD
   214		037140	000002		OPDEF	PNTCWF	[37B8!3B12!2]	;PRINT DF10 CONTROL WORD FORCED
   215		037000	030242		OPDEF	PCRL	[37B8!0B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED
   216		037040	030242		OPDEF	PCRLF	[37B8!1B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED FORCED
   217		037000	000040		OPDEF	PSP	[37B8!0B12!40]	;PRINT SPACE
   218		037040	000040		OPDEF	PSPF	[37B8!1B12!40]	;PRINT SPACE FORCED
   219		037000	030243		OPDEF	PCRL2	[37B8!0B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE)
   220		037040	030243		OPDEF	PCRL2F	[37B8!1B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE) FORCED
   221		037040	000007		OPDEF	PBELL	[37B8!1B12!7]	;PRINT TTY BELL
   222
   223		037040	000026		OPDEF	PFORCE	[37B8!1B12!26]	;PRINT FORCE, CONTROL O OVERRIDE
   224
   225					DEFINE	PMSG	(ARG),<
   226						PSIXM	[SIXBIT\ARG'_\]>
   227
   228					DEFINE	PMSGF	(ARG),<
   229						PSIXMF	[SIXBIT\ARG'_\]>
   230
   231					;*SIXBTZ -- MACRO TO GENERATE SIXBIT DATA FOR PRINTING
   232					;*	CONSERVES CORE OVER ASCIZ
   233
   234					DEFINE	SIXBTZ	(ARG),<	[SIXBIT\ARG'_\]>
   235
   236					;*CONSOLE SWITCH INPUT UUO.
   237					;*READS CONSOLE SWITCHES IF IN EXEC MODE OR ASKS FOR THEM IF
   238					;* USER MODE.
   239
   240		037400	000002		OPDEF	SWITCH	[37B8!10B12!2]	;INPUT CONSOLE SWITCHES
   241
   242					;*CLOCK INITIALIZATION UUO - TO SET DESIRED CLOCK OPERATION
   243					;*EITHER IGNORE CLOCK, ONLY LET IT TICK OR CAUSE INTERRUPT TO OCCUR.
   244
   245		037540	000004		OPDEF	CLOKOP	[37B8!13B12!4]	;CLOCK OPERATION UUO - PDP-11 CLOCK
   246		037200	000004		OPDEF	MTROP	[37B8!4B12!4]	;CLOCK OPERATION UUO - DK20 METER
   247
   248					;*KL10 ONLY CACHE OPERATION UUO'S
   249
   250		037040	000004		OPDEF	CINVAL	[37B8!1B12!4]	;CACHE INVALIDATE
   251		037100	000004		OPDEF	CFLUSH	[37B8!2B12!4]	;CACHE FLUSH
   252		037140	000004		OPDEF	CWRTBI	[37B8!3B12!4]	;CACHE WRITE-BACK & INVALIDATE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 6
PARAM	KLM	 1-Aug-77 08:33		*PARAM* PROGRAM/SUBROUTINE PARAMETERS, FEB 26,1976                                 SEQ 0024

   253					;*END OF PASS/PROGRAM UUOS
   254
   255					;PERFORMS THE END OF PASS FUNCTIONS. INCREMENT PASS COUNT,
   256					;*DECREMENT ITERATION COUNT, CHECK IF FINISHED WITH THIS PROGRAM ETC.
   257
   258		037500	000004		OPDEF	ENDUUO	[37B8!12B12!4]	;UUO TO DISPLAY LIGHTS
   259		037700	000004		OPDEF	EOPUUO	[37B8!16B12!4]	;END OF PROGRAM UUO
   260
   261					;*MEMORY MANAGEMENT UUO'S
   262					;*UUO'S TO PERFORM VARIOUS MEMORY FUNCTIONS. MAPPING, ZEROING, PAGING,
   263					;*ADDRESS CONVERSION, ETC...
   264
   265		037000	000004		OPDEF	MAPMEM	[37B8!0B12!4]	;MAP MEMORY
   266		037500	000002		OPDEF	MEMZRO	[37B8!12B12!2]	;ZERO MEMORY
   267		037440	000002		OPDEF	MEMSEG	[37B8!11B12!2]	;SETUP MEMORY SEGMENT
   268		037540	000002		OPDEF	MAPADR	[37B8!13B12!2]	;VIRTUAL TO PHYSICAL ADR CONVERT
   269		037640	000002		OPDEF	MAPCNK	[37B8!15B12!2]	;MAP MEMORY CHUNK
   270		037600	000002		OPDEF	MAPSET	[37B8!14B12!2]	;SET KI10 EXEC PAGE MAP
   271		037740	000002		OPDEF	MAPPNT	[37B8!17B12!2]	;PRINT MEMORY MAP
   272
   273					;*DEVICE CODE MODIFICATION UUO
   274					;*ALLOWS THE MODIFICATION OF IOT'S TO ONE DEVICE TO BE CHANGED TO
   275					;*IOT'S TO A DIFFERENT DEVICE CODE.
   276
   277		037340	000002		OPDEF	MODPCU	[37B8!7B12!2]	;MODIFY PERHIPERAL CODE, USER
   278		037300	000002		OPDEF	MODPCP	[37B8!6B12!2]	;MODIFY PERHIPERAL CODE, PROGRAM
   279
   280			030000			IFNDEF	MODDVL,<MODDVL==BEGIN>
   281			030000			IFNDEF	MODDVU,<MODDVU==BEGIN>
   282
   283					;*"DIAMON" FILE SELECTION AND READ UUOS
   284
   285		037240	000004		OPDEF	FSELECT	[37B8!5B12!4]	;FILE SELECTION
   286		037300	000004		OPDEF	FREAD	[37B8!6B12!4]	;FILE READ - ASCII DATA
   287		037340	000004		OPDEF	FRD36	[37B8!7B12!4]	;FILE READ - 36 BIT DATA
   288		037400	000004		OPDEF	FRD8	[37B8!10B12!4]	;FILE READ - 8 BIT DATA
   289
   290					;*KI10 ONLY UUO FOR PRINTING MARGIN VALUES
   291
   292		037700	000002		OPDEF	PNTMGN	[37B8!16B12!2]	;PRINT MARGIN VALUE
   293
   294						XLIST
   295					IFNDEF	KLOLD,<LIST
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 7
PARAM	KLM	 1-Aug-77 08:33		ERROR HANDLING UUO DEFINITIONS, JAN 5,1976                                         SEQ 0025

   296					SUBTTL	ERROR HANDLING UUO DEFINITIONS, JAN 5,1976
   297
   298					S^;*********************************************************************^
   299					;*ERROR HANDLER PARAMETERS
   300					S^;*********************************************************************^
   301
   302		036000	000000		OPDEF	ERUUO	[36B8]		;ERROR CALL UUO
   303		035000	000000		OPDEF	ERLOOP	[35B8]		;ERROR LOOP, CHECKS PC,REPT,REPT1,ERROR
   304		035040	000000		OPDEF	ERLP1	[35B8!1B12]	;ERROR LOOP IF PC'S MATCH
   305		035100	000000		OPDEF	ERLP2	[35B8!2B12]	;ERROR LOOP IF ANY ERROR
   306		034000	000000		OPDEF	REPTUO	[34B8]		;REPEAT LOOP UUO
   307
   308					;*THE ERROR HANDLER MACROS
   309
   310					;*A MACRO TO REPORT AN ERROR AND LOOP
   311
   312						DEFINE	ERROR	(ADR,FORMAT,CORECT,ACTUAL,F,D,ERR)<
   313												SALL
   314						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   315							   CORECT,,ACTUAL
   316							   [SIXBIT\D'_\],,ERR]
   317												XALL
   318						ERLOOP	ADR		;IF ERROR, LOOP TO ADR
   319					>
   320
   321					;*A MACRO TO REPORT AN ERROR AND NOT LOOP
   322
   323						DEFINE	ERROR1	(FORMAT,CORECT,ACTUAL,F,D,ERR)<
   324												SALL
   325						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   326							   CORECT,,ACTUAL
   327							   [SIXBIT\D'_\],,ERR]
   328												XALL>
   329
   330					>;END OF KLOLD CONDITIONAL
   331
   332						XLIST
   333						LIST
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0026

   334					SUBTTL	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977
   335
   336	030000					LOC	30000
   337
   338					S^;*********************************************************************^
   339					;*PROGRAM STARTING ADDRESSES
   340					;*THESE ADDRESSES CALL VARIOUS SPECIAL START ROUTINES AND OR OPTIONS
   341					;*NORMAL START ADDRESS IS 30000 ALL OTHERS ARE SPECIAL. INVOKED BECAUSE
   342					;*OF END OF PASS, POWER FAILURE, DDT START, RE-ENTERING(TYPICALLY USER
   343					;*MODE), OR ANY NUMBER OF SPECIAL FEATURE TESTS.
   344					S^;*********************************************************************^
   345
   346	030000	254 00 1 00 027776 	BEGIN:	JRST	@MODLNK		;STAND-ALONE START
   347	030001	254 00 0 00 030674 	$START:	JRST	START		;MODE CHECK STARTING ADDRESS
   348
   349	030002	254 00 1 00 027774 	DIAGMN:	JRST	@LDLNK		;DIAGNOSTIC MONITOR START
   350
   351	030003	254 00 1 00 027774 	SYSEXR:	JRST	@LDLNK		;SYSTEM EXERCISER START
   352
   353	030004	254 00 0 00 041254 	SFSTRT:	JRST	SADR1		;SPECIAL FEATURE START
   354
   355	030005	254 00 0 00 030000 	PFSTRT:	JRST	SADR2		;POWER FAIL RESTART
   356
   357	030006	254 00 0 00 030000 	REENTR:	JRST	SADR3		;REENTER START(USUALLY USER MODE ONLY)
   358
   359	030007				SRTDDT:				;COMMONLY MISTAKEN NAME FOR "DDTSRT"
   360	030007	254 00 1 00 027775 	DDTSRT:	JRST	@DDTLNK		;DDT START
   361
   362	030010	254 00 0 00 030705 	BEGIN1:	JRST	STARTA		;LOOP START(END OF PASS COMES HERE)
   363	030011	254 00 1 00 027777 	SBINIT:	JRST	@SUBLNK		;PMGINT LINKAGE
   364	030012	000000	000000		RETURN:	0			;RETURN ADDRESS STORAGE
   365
   366	030013	254000	030000		START1:	SADR7			;OPTIONAL STARTING ADR/INSTRUCTIONS
   367	030014	254000	030000		START2:	SADR8			; "
   368	030015	254000	030000		START3:	SADR9			; "
   369	030016	254000	030000		START4:	SADR10			; "
   370	030017	254000	030000		START5:	SADR11			; "
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 2
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0027

   371					S^;*********************************************************************^
   372					;*PROGRAM FIXED PARAMETER AREA
   373					S^;*********************************************************************^
   374
   375	030020	444253	415000		PNTNAM:	PAREA3		;SIXBIT PROGRAM NAME
   376	030021	605664	000000		PNTEXT:	PAREA4		;SIXBIT PROGRAM EXTENSION
   377	030022	000000	000000		RANDBS:	PAREA1		;RANDOM BASE NUMBER
   378	030023	000000	000000		SWTEXR:	PAREA2		;SYSTEM EXERCISER SWITCHES
   379	030024	000000	041741		ITRCNT:	ITERAT		;PROGRAM ITERATIONS
   380	030025	000000	041437		$PNAME:	PGMNAM		;POINTER TO PROGRAMS NAME
   381	030026	000000	000003		$PVER:	MCNVER,,DECVER	;MCN & DEC VERSION LEVEL
   382	030027	000000	030000		$MODVL:	MODDVL		;DEVICE CODE CHANGE LOWER LIMIT
   383	030030	000000	030000		$MODVU:	MODDVU		;DEVICE CODE CHANGE UPPER LIMIT
   384	030031	777777	777777		$EMODE:	IFNDEF EXCASB,<0> IFDEF EXCASB,<-1>	;EXEC ALLOWED
   385	030032	000000	000000		$UMODE:	IFNDEF USRASB,<0> IFDEF USRASB,<-1>	;USER ALLOWED
   386	030033	000000	000000		$DSKUP:	IFNDEF DSKUPD,<0> IFDEF DSKUPD,<-1>	;DISK UPDATE MODE
   387	030034	000000	000000		$MMAP:	IFNDEF MEMMAP,<0> IFDEF MEMMAP,<-1>	;ALLOW MEMORY RTNS
   388	030035	000000	000000		PAREA7:	PAREA5		;OPTIONAL PARAMETER
   389	030036	000000	000000		PAREA8:	PAREA6		;OPTIONAL PARAMETER
   390
   391					S^;*********************************************************************^
   392					;*PROGRAM VARIABLE PARAMETER AREA
   393					S^;*********************************************************************^
   394
   395	030037	000000	000000		USER:	0		; 0 = EXEC, -1 = USER MODE FLAG
   396	030040	000000	000000		KAIFLG:	0		;PROCESSOR TYPE, 0 = KA10, -1 = KI10
   397	030041	000000	000000		KLFLG:	0		;PROCESSOR TYPE, 0 = KA/KI, -1 = KL10
   398	030042	777777	777777		MONFLG:	-1		;DIAG MONITOR SPECIAL USER FLAG
   399	030043	000000	000000		MONCTL:	0		;DIAG MON/SYS EXR FLAG
   400	030044	000000	000000		MONTEN:	0		;-1= LOADED BY 10
   401	030045	000000	000000		CLOCKF:	0		;CLOCK TICKED FLAG
   402	030046	000000	000000		CONSW:	0		;CONSOLE SWITCH SETTINGS
   403	030047	000000	000000		PASCNT:	0		;PROGRAM PASS COUNT
   404	030050	000000	000000		RUNFLG:	0		;PROGRAM RUN FLAG
   405	030051	000000	000000		TESTPC:	0		;SUBTEST PC
   406	030052	000000	000000		ERRPC:	0		;ERROR PC
   407	030053	000000	000000		ERRTLS:	0		;ERROR TOTALS
   408	030054	000000	000000		TICKS:	0		;PROGRAM RUNNING TIME
   409	030055	000000	000000		MARGIN:	0		;KI10 MARGIN WORD VALUE
   410	030056	000000	000000		$ONETM:	0		;SUBROUTINE INITIALIZATION FLAG
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0028

   411					S^;*********************************************************************^
   412					;*SPECIAL PROGRAM DISPATCH ADDRESSES
   413					S^;*********************************************************************^
   414
   415	030057	037 12 0 00 000004 	BEGEND:	ENDUUO		;END OF PASS
   416	030060	254 00 0 00 030010 	$BEND1:	JRST	BEGIN1	;KEEP RUNNING PROGRAM
   417	030061	037 16 0 00 000004 	$BEND2:	EOPUUO		;END OF PROGRAM - NO RETURN
   418	030062	254000	030000		CNTLC:	SADR5		;CONTROL C XFER ADDRESS
   419	030063	254000	030000		ALTMGO:	SADR6		;ALTMODE XFER ADDRESS
   420	030064				CPOPJ1:			;SKIP RETURN
   421	030064	350 00 0 17 000000 	UUOSKP:	AOS	(P)	;SKIP RETURN FROM UUO
   422	030065				CPOPJ:			;NON-SKIP REGULAR RETURN
   423	030065	263 17 0 00 000000 	UUOEXT:	RTN		;UUO RETURN
   424	030066	255 00 0 00 000000 	UUORTN:	JFCL		;ADDITIONAL USERS UUO ROUTINE
   425	030067	255 00 0 00 000000 	$UORTX:	JFCL		;ADDITIONAL UUO LINKAGE
   426	030070	255 00 0 00 000000 	$UUOER:	JFCL		;INITED AS (JRST $UOERX)
   427	030071	255 00 0 00 000000 	$ITRHL:	JFCL		;ADDITIONAL INTERRUPT LINKAGE
   428	030072	255 00 0 00 000000 	$ITRX1:	JFCL		; "
   429	030073	255 00 0 00 000000 	$USRHL:	JFCL		; "
   430	030074	255 00 0 00 000000 	$RSRTX:	JFCL		;ADDITIONAL POWER FAIL LINKAGE
   431	030075	255 00 0 00 000000 	$RSRTY:	JFCL		; "
   432	030076	255 00 0 00 000000 	RESRT1:	JFCL		; INITED AS (JRST RESRTX)
   433	030077	255 00 0 00 000000 	RESRT2:	JFCL		; "
   434	030100	255 00 0 00 000000 	$PARER:	JFCL		;ADDITIONAL PARITY ERROR LINKAGE
   435	030101	255 00 0 00 000000 	ERMORE:	JFCL		;ADDITIONAL ERROR HANDLER LINKAGE
   436	030102	254 04 0 00 030102 		HALT	.	;IMPROPER TRANSFER HALT
   437
   438	030103	000000	000000		$PSHER:	0		;INITED AS (JRST PSHERR)
   439	030104	000000	000000		ITRCH1:	0		;PC & FLAGS OF CURRENT INTERRUPT
   440	030105	000000	000000			0		;INITED AS (JRST $ITRC1)
   441
   442					S^;*********************************************************************^
   443					;*PROCESSOR CONTROL STORAGE
   444					S^;*********************************************************************^
   445
   446	030106	000000	000000		$ACC0:	0		;INTERRUPT SAVED AC0
   447	030107	000000	000000		$SVPI:	0		;INTERRUPT SAVED PI
   448	030110	000000	000000		$SVAPR:	0		;INTERRUPT SAVED APR
   449	030111	000000	000000		$SVPAG:	0		;INTERRUPT SAVED PAG (DATAI)
   450	030112	000000	000000		$SPAG1:	0		;INTERRUPT SAVED PAG (CONI)
   451
   452	030113	000000	000000		$SVUUO:	0		;CURRENT USERS UUO
   453	030114	000000	000000		$SVUPC:	0		;PC OF CURRENT USERS UUO
   454
   455	030115	000000	000000		REPTU:	0		;REPEAT UUO ITERATIONS
   456	030116	000000	000000		SCOPE:	0		;ERROR HANDLER SCOPE LOOP FLAG
   457	030117	000000	000000		%CORFLG:0		; " CORRECT FLAG
   458	030120	000000	000000		%COREC:	0		; " CORRECT DATA
   459	030121	000000	000000		%ACTFL:	0		; " ACTUAL FLAG
   460	030122	000000	000000		%ACTUL:	0		; " ACTUAL DATA
   461	030123	000000	000000		%DISCR:	0		; " DISCREPENCY DATA
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 4
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0029

   462					S^;*********************************************************************^
   463					;*UUO DISPATCH TABLE
   464					S^;*********************************************************************^
   465						XLIST
   466						LIST
   467	030124	030070	030070		UUODIS:	LUUO1,,$UUOER
   468	030125	030070	030070			LUUO3,,LUUO2
   469	030126	030070	030070			LUUO5,,LUUO4
   470	030127	030070	030070			LUUO7,,LUUO6
   471	030130	030070	030070			LUUO11,,LUUO10
   472	030131	030070	030070			LUUO13,,LUUO12
   473	030132	030070	030070			LUUO15,,LUUO14
   474	030133	030070	030070			LUUO17,,LUUO16
   475	030134	030070	030070			LUUO21,,LUUO20
   476	030135	030070	030070			LUUO23,,LUUO22
   477	030136	030070	030070			LUUO25,,LUUO24
   478	030137	030070	030070			LUUO27,,LUUO26
   479	030140	030070	030070			LUUO31,,LUUO30
   480	030141	030070	030070			LUUO33,,LUUO32
   481
   482					S^;*********************************************************************^
   483					;*MEMORY MANAGMENT STORAGE
   484					S^;*********************************************************************^
   485
   486	030142	000000	000000		DF22F:	0		;DF10 CONTROL FLAG, 0 = 18, -1 = 22 BIT
   487	030143	000000	000000		MAPNEW:	0		;MEMORY MAPPING CONTROL FLAG, -1 = 4096K MAPPING
   488	030144	000000	000000		MEMTOT:	0		;TOTAL MEMORY SIZE IN K (1024.)
   489	030145	000000	000000		MEMLOW:	0		;LOWEST USABLE MEMORY
   490	030146				MEMSIZ:	BLOCK ^D41	;MEMORY SEGMENT POINTER TABLE
   491
   492					S^;*********************************************************************^
   493					;*PRINT CONTROL STORAGE
   494					S^;*********************************************************************^
   495
   496	030217	000000	000000		PNTFLG:	0		;PRINT FLAG, -1 WHILE IN PRINT ROUTINE
   497	030220	000000	000000		PNTENB:	0		;PRINT ENABLE
   498	030221	000000	000000		PDISF:	0		;PRINT DISABLED FLAG
   499	030222	000000	000000		PNTINH:	0		;INHIBIT PRINT INPUT CHECKS
   500	030223	000000	000000		PNTSPC:	0		;PRINT SPACE CONTROL
   501	030224	000000	000000		OPTIME:	0		;TYPE-IN WAIT TIME
   502	030225	000000	000000		$TWCNT:	0		;TIME WAITED
   503	030226	000000	000000		$DVOFF:	0		;LOGICAL DEVICE INITED FLAG
   504	030227	000000	000000		TTYFIL:	0		;TTY EXEC FILLERS FLAG
   505	030230	000000	000000		TTYSPD:	0		;TTY EXEC BAUD RATE
   506	030231	000000	000000		$TTCHR:	0		;ACTUAL TYPED IN CHAR
   507	030232	000000	000000		$CHRIN:	0		;UPPER CASED & PARITY STRIPPED CHAR
   508	030233	000000	000000		$TYPNB:	0		;TYPED IN NUMBER
   509	030234	000000	000000		$CRLF:	0		;FREE CR/LF FLAG
   510	030235	000000	000000		$TABF:	0		;TAB CONVERSION FLAG
   511	030236	000000	000000		$FFF:	0		;FORM FEED CONVERSION FLAG
   512	030237	000000	000000		$VTF:	0		;VERTICAL TAB CONVERSION FLAG
   513	030240	000000	000000		USRLFF:	0		;USER LF FILLERS
   514	030241	000000	000000		USRCRF:	0		;USER CR FILLERS
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 5
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0030

   515					S^;*********************************************************************^
   516					;*THE FOLLOWING MISCELLANEOUS PRINT CHARACTERS ARE INCLUDED
   517					;*TO FACILITATE PRINTING AND ARE CALLED AS FOLLOWS:
   518					;*	MOVEI	NAME
   519					;*	PNTA		;OR PNTAF
   520					S^;*********************************************************************^
   521
   522	030242				CRLF:	ASCII/
   523	030242	015 012 000 000 000 	/
   524	030243				CRLF2:	ASCII/
   525
   526	030243	015 012 015 012 000 	/
   527	030244	054 000 000 000 000 	COMMA:	ASCII/,/
   528	030245	056 000 000 000 000 	PERIOD:	ASCII/./
   529	030246	040 000 000 000 000 	SPACE:	ASCII/ /
   530	030247	011 000 000 000 000 	TAB:	ASCII/	/
   531	030250				MINUS:
   532	030250	055 000 000 000 000 	HYPEN:	ASCII/-/
   533	030251	053 000 000 000 000 	PLUS:	ASCII/+/
   534	030252	052 000 000 000 000 	AST:	ASCII/*/
   535	030253	100 000 000 000 000 	ATSIN:	ASCII/@/
   536	030254	050 000 000 000 000 	LFP:	ASCII/(/
   537	030255	051 000 000 000 000 	RTP:	ASCII/)/
   538	030256	007 0000000000 		BELL:	BYTE (7) 007
   539	030257	077 000 000 000 000 	QUEST:	ASCII/?/
   540	030260	057 000 000 000 000 	SLASH:	ASCII!/!
   541	030261	044 000 000 000 000 	DOLLAR:	ASCII/$/
   542	030262	000000	000012		RADIX:	^D10			;DECIMAL PRINT RADIX
   543	030263	000000	000040		RADLSP:	40			;DECIMAL PRINT LEADING CHAR
   544	030264	000000	000012		RADLSC:	^D10			;DECIMAL PRINT LEADING CHAR COUNT
   545
   546					S^;*********************************************************************^
   547					;*USER MODE OUTPUT FILE INFORMATION
   548					S^;*********************************************************************^
   549
   550	030265				$OBUF:	BLOCK	3		;LOGICAL FILE OUTPUT BUFFER HEADER
   551	030270	60 62 51 56 64 00 	$OUTNM:	SIXBIT	/PRINT/		;FILE NAME
   552	030271	60 56 64 00 00 00 	$OUTEX:	SIXBIT	/PNT/		;FILE NAME EXTENSION
   553	030272					BLOCK	2
   554
   555					S^;*********************************************************************^
   556					;*DISK UPDATE MODE FILE INFORMATION
   557					S^;*********************************************************************^
   558
   559	030274				$IBUF:	BLOCK	3
   560	030277	60 62 51 56 64 00 	$INNM:	SIXBIT	/PRINT/
   561	030300	60 56 64 00 00 00 	$INEXT:	SIXBIT	/PNT/
   562	030301					BLOCK	2
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 6
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0031

   563					S^;*********************************************************************^
   564					;*PUSHDOWN LIST CONTROL INFORMATION
   565					S^;*********************************************************************^
   566
   567	030303	777577	030303		PLIST:	PLIST-PLISTE,,PLIST
   568	030304				PLISTS:	BLOCK	200
   569	030504	000000	000000		PLISTE:	0		;END OF PUSHDOWN LIST
   570
   571					S^;*********************************************************************^
   572					;*POWER LINE CLOCK FREQUENCY FLAG
   573					S^;*********************************************************************^
   574
   575	030505	000000	000000		CYCL60:	0	;0 = 60, -1 = 50 CYCLE
   576
   577					S^;*********************************************************************^
   578					;*KL10 CACHE CONTROL FLAGS
   579					S^;*********************************************************************^
   580
   581	030506	000000	000000		CSHFLG:	0	;ALLOW CACHE IF 0
   582	030507	000000	000000		CSHMEM:	0	;CACHE MEMORY SEGMENTS IF 0
   583
   584					S^;*********************************************************************^
   585					;*NUMBER INPUT DIGIT FLAG
   586					S^;*********************************************************************^
   587
   588	030510	000000	000000		TTNBRF:	0	;-1 IF ANY DIGIT TYPED
   589
   590					S^;*********************************************************************^
   591					;*KL10 & KI10 "INHPAG" SWITCH PAGING PREVENTION
   592					S^;*********************************************************************^
   593
   594	030511	000000	000000		PVPAGI:	0	;IF NON-ZERO, OVERRIDE "INHPAG" SWITCH ACTION
   595
   596					S^;*********************************************************************^
   597					;*ERROR REPORTING ROUTINE ADDITIONAL USERS CONTROL INSTRUCTIONS
   598					S^;*********************************************************************^
   599
   600	030512	000000	000000		%ERHI1:	0	;IF NON-ZERO, XCT'D AT START OF %ERUUO
   601	030513	000000	000000		%ERHI2:	0	;IF NON-ZERO, XCT'D AT END OF %ERUUO
   602	030514	000000	000000		%ERHI3:	0	;IF NON-ZERO, XCT'D AFTER "PC" OF %ERUUO
   603
   604					S^;*********************************************************************^
   605					;*SPECIAL USERS UUO INTERCEPT INSTRUCTION
   606					S^;*********************************************************************^
   607
   608	030515	000000	000000		$$UUO:	0	;IF NON-ZERO, XCT'D AT START OF $UORTN
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 7
FIXED	KLM	19-Jul-77 16:36		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, JULY 19,1977                           SEQ 0032

   609					S^;*********************************************************************^
   610					;*USER MODE MONITOR TYPE FLAG
   611					S^;*********************************************************************^
   612
   613	030516	000000	000000		MONTYP:	0	;0 = TOPS10, -1 = TOPS20
   614
   615					S^;*********************************************************************^
   616					;*SPECIAL USERS MUUO INTERCEPT INSTRUCTION
   617					S^;*********************************************************************^
   618
   619	030517	000000	000000		$$MUUO:	0	;IF NON-ZERO, XCT'D AT START OF MUUOER
   620
   621					S^;*********************************************************************^
   622					;*SPECIAL USERS USER MODE OUTPUT ERROR INTERCEPT INSTUCTION
   623					S^;*********************************************************************^
   624
   625	030520	000000	000000		$$OUTER:0	;IF NON-ZERO, XCT'D AT END OF USER MODE ERROR
   626
   627					S^;*********************************************************************^
   628					;*"SWITCH" CALL USAGE CONTROL
   629					S^;*********************************************************************^
   630
   631	030521	000000	000000		$$TOGGLE:0	;IF NON-ZERO, USE C(CONSW) FOR SWITCHES
   632
   633					S^;*********************************************************************^
   634					;*SPECIAL USERS ALTMODE SWITCH CALL INTERCEPT INSTRUCTIONS
   635					S^;*********************************************************************^
   636
   637	030522	000000	000000		$$TAX1:	0	;IF NON-ZERO, XCT'D AT START OF ALTMODE SWITCH CALL
   638	030523	000000	000000		$$TAX2:	0	;IF NON-ZERO, XCT'D AT END OF ALTMODE SWITCH CALL
   639
   640					S^;*********************************************************************^
   641					;*SM10 (KS-10) PROCESSOR TYPE FLAG
   642					S^;*********************************************************************^
   643
   644	030524	000000	000000		SM10:	0	;IF -1 THIS IS A KS-10
   645
   646					S^;*********************************************************************^
   647					;*RIGHT HALF SWITCHES PROMPT TABLE ADDRESS
   648					S^;*********************************************************************^
   649
   650	030525	000000	000000		SWPTAB:	0	;0 = NO PROMPT, ADR = ADR OF SIXBIT PROMPT TABLE
   651
   652					S^;*********************************************************************^
   653					;*SPECIAL FUTURE EXPANSION ROOM
   654					S^;*********************************************************************^
   655
   656					S^;*********************************************************************^
   657					;*END OF FIXED STORAGE
   658					S^;*********************************************************************^
   659
   660	030577					LOC	30577
   661	030577	000000	000000		ENDFIX:	0		;END OF FIXED STORAGE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1
SPCCPU	KLM	24-Oct-78 08:57		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76                            SEQ 0033

   662					SUBTTL	*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76
   663
   664					;NEW DEFINITIONS USED BY THE KL10 SUBROUTINE PACKAGE
   665
   666			000000		AC0=	0
   667			030000		DIAGNOS=30000		;PDP-10 DIAGNOSTIC START ADDRESS
   668			010000		DDT=	10000		;PDP-10 DDT START ADDRESS
   669			020000		DIAMON=	20000		;PDP-10 DIAMON LOADER START ADDRESS
   670			020000		DONG11=	1B22		;11 DOORBELL (FROM THE 10)
   671
   672					;DTE20 DEVICE CODES
   673
   674			000200		DTE==	200		;DTE0
   675			000204		DTE0==	204
   676			000204		DTE1==	204
   677			000210		DTE2==	210
   678			000214		DTE3==	214
   679
   680					;KL10 EPT COMMUNICATION AREA
   681
   682			000440		$STD=	440		;PDP-10 DIAGNOSTIC START ADDRESS
   683			000441		$DDT=	441		;PDP-10 DDT START ADDRESS
   684			000442		$STL=	442		;PDP-10 LOADER START ADDRESS
   685			000443		$STM=	443		;PDP-10 MONITOR START ADDRESS
   686
   687			000444		$DTFLG=	444		;DTE20 OPERATION COMPLETE FLAG
   688			000445		$DTCLK=	445		;DTE20 CLOCK INTERRUPT FLAG
   689			000446		$DTCI=	446		;DTE20 CLOCK INTERRUPT INSTRUCTION
   690			000447		$DTT11=	447		;DTE20 10 TO 11 ARGUMENT
   691			000450		$DTF11=	450		;DTE20 11 TO 10 ARGUMENT
   692			000451		$DTCMD=	451		;DTE20 TO 11 COMMAND WORD
   693			000452		$DTSEQ=	452		;DTE20 OPERATION SEQUENCE NUMBER
   694			000453		$DTOPR=	453		;DTE20 OPERATIONAL DTE #
   695			000454		$DTCHR=	454		;DTE20 LAST TYPED CHARACTER
   696			000455		$DTMTD=	455		;DTE20 MONITOR TTY OUTPUT COMPLETE FLAG
   697			000456		$DTMTI=	456		;DTE20 MONITOR TTY INPUT FLAG
   698
   699			000457		$DTSWR=	457		;DTE20 CONSOLE SWITCH REGISTER
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 2
SPCCPU	KLM	24-Oct-78 08:57		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76                            SEQ 0034

   700					;SPECIAL "FIXED" REASSIGNMENTS
   701
   702			030600			$$LOC=.			;SAVE CURRENT LOCATION
   703
   704	030000					LOC	30000
   705	030000	254 00 0 00 030600 	$$BEGIN:JRST	$$START		;SETUP SPECIAL START
   706	030001	254 00 0 00 030600 		JRST	$$START		;"DIAMON" CHAIN START ADDRESS
   707
   708	000440					LOC	440
   709	000440	254 00 0 00 030000 	$STD:	JRST	BEGIN		;SETUP FOR "STD"
   710	000443					LOC	443
   711	000443	254 00 0 00 030626 	$STM:	JRST	$SPEC		;SIMPLE RUN CONTROL
   712
   713	030057					LOC	30057
   714	030057	254 00 0 00 030631 	$BEGEND:JRST	$SPBEND		;SETUP SPECIAL "BEGEND"
   715
   716					;SPECIAL MUUO, TRAP & PAGE FAIL SETUP
   717
   718	000420					LOC	420
   719	000420	254 04 0 00 000420 	$$420:	HALT	.		;KI10 PAGE FAIL
   720	000421	255 00 0 00 000000 	$$421:	JFCL			;OVERFLOW
   721	000422	254 04 0 00 000422 	$$422:	HALT	.		;PUSHDOWN OVERFLOW
   722	000423	254 04 0 00 000423 	$$423:	HALT	.		;TRAP 3
   723	000424	000000	000000		$$424:	0			;MMUO
   724	000425	000000	000000		$$425:	0			;MMUO PC
   725	000426	000000	000000		$$426:	0			;KI10-PAGE FAIL, KL10-PROCESS CONTEXT
   726	000427	254 04 0 00 000427 	$$427:	HALT	.
   727	000430	000000	000427		$$430:	427			;MMUO NEW PC'S
   728	000431	000000	000427		$$431:	427
   729	000432	000000	000427		$$432:	427
   730	000433	000000	000427		$$433:	427
   731	000434	000000	000427		$$434:	427
   732	000435	000000	000427		$$435:	427
   733	000436	000000	000427		$$436:	427
   734	000437	000000	000427		$$437:	427
   735
   736	000500					LOC	500
   737	000500	000000	000000		$$500:	0			;KL10 PAGE FAIL WORD
   738	000501	000000	000000		$$501:	0			;KL10 PAGE FAIL PC
   739	000502	000000	000503		$$502:	503			;KL10 PAGE FAIL NEW PC
   740	000503	254 04 0 00 000503 	$$503:	HALT	.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3
SPCCPU	KLM	24-Oct-78 08:57		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76                            SEQ 0035

   741	030600					LOC	$$LOC		;RESET CURRENT LOCATION
   742
   743					;SPECIAL STARTUP SEQUENCE
   744
   745	030600	402 00 0 00 030037 	$$START:SETZM	USER
   746	030601	265 00 0 00 030602 		JSP	0,.+1		;IN USER MODE ?
   747	030602	603 00 0 00 010000 		TLNE	0,USERF
   748	030603	476 00 0 00 030037 		SETOM	USER		;YES, SET CONTROL WORD
   749	030604	336 00 0 00 030042 		SKIPN	MONFLG		;SPECIAL USER MODE ?
   750	030605	402 00 0 00 030037 		SETZM	USER		;YES, RUN AS EXEC
   751	030606	332 00 0 00 030037 		SKIPE	USER
   752	030607	254 00 0 00 030674 		JRST	START		;USER MODE, DON'T NEED CPU TYPE
   753
   754	030610	336 00 0 00 030044 	$STKIL:	SKIPN	MONTEN		;LOADED BY "DIAMON" ?
   755	030611	476 00 0 00 030024 		SETOM	ITRCNT		;NO, RUN FOREVER
   756	030612	402 00 0 00 030041 		SETZM	KLFLG		;ASSUME KI10
   757	030613	200 01 0 00 041445 		MOVE	1,[1,,1]
   758	030614	251 01 0 00 000001 		BLT	1,1		;HOPE THIS WORKS
   759	030615	316 01 0 00 041445 		CAMN	1,[1,,1]	;IF AC NE 1,,1 AFTER BLT, KL10
   760	030616	254 00 0 00 030674 		JRST	START		;KI10, NO ADDITIONAL SETUP
   761
   762	030617	402 00 0 00 000444 	$STKL:	SETZM	$DTFLG
   763	030620	402 00 0 00 000445 		SETZM	$DTCLK
   764	030621	200 00 0 00 000453 		MOVE	$DTOPR		;GET DTE #
   765	030622	436 00 0 00 030657 		ORM	$$DTE0		;INSERT IN DTE I/O INSTS
   766	030623	436 00 0 00 030670 		ORM	$$DTE2
   767	030624	476 00 0 00 030041 		SETOM	KLFLG		;SET KL10 CONTROL FLAG
   768	030625	254 00 0 00 030674 		JRST	START
   769
   770	030626	200 00 0 00 041446 	$SPEC:	MOVE	[JRST STARTA]	;SIMPLE RUN CONTROL
   771	030627	202 00 0 00 030633 		MOVEM	$SPB1
   772	030630	254 00 0 00 030674 		JRST	START
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 4
SPCCPU	KLM	24-Oct-78 08:57		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, 26-FEB-76                            SEQ 0036

   773					;SPECIAL "BEGEND" ROUTINE
   774
   775	030631	350 00 0 00 030047 	$SPBEND:AOS	PASCNT		;INCREMENT PASS COUNT
   776	030632	370 00 0 00 030024 		SOS	ITRCNT		;DECREMENT ITERATION COUNT
   777	030633	336 00 0 00 030037 	$SPB1:	SKIPN	USER
   778	030634	254 00 0 00 030642 		JRST	$SPBEX		;EXEC MODE
   779
   780	030635	332 00 0 00 030024 	$SPBUS:	SKIPE	ITRCNT		;USER MODE, COMPLETED ?
   781	030636	254 00 0 00 030705 		JRST	STARTA		;NO, KEEP RUNNING
   782	030637	336 00 0 00 030044 		SKIPN	MONTEN		;DONE, LOADED BY "DIAMON" ?
   783	030640	047 00 0 00 000012 		EXIT			;NO, RETURN TO MONITOR
   784	030641	254 00 1 00 030012 		JRST	@RETURN		;YES, RETURN TO "DIAMON"
   785
   786	030642	332 00 0 00 030041 	$SPBEX:	SKIPE	KLFLG
   787	030643	254 00 0 00 030650 		JRST	$SPBKL		;KL10 & EXEC
   788	030644	7 004 14 0 00 030024 		DATAO	PI,ITRCNT	;KI10 & EXEC, DISPLAY ITER COUNT
   789	030645	332 00 0 00 030024 		SKIPE	ITRCNT
   790	030646	254 00 0 00 030705 		JRST	STARTA		;NOT COMPLETED YET
   791	030647	254 00 1 00 030012 		JRST	@RETURN		;DONE
   792
   793	030650	336 00 0 00 030024 	$SPBKL:	SKIPN	ITRCNT
   794	030651	254 00 0 00 030663 		JRST	$SPKLD		;KL10, EXEC & COMPLETED
   795
   796	030652	335 00 0 00 030043 		SKIPGE	MONCTL
   797	030653	254 00 0 00 030705 		JRST	STARTA		;"DIAMON" CONTROL
   798	030654	201 00 0 00 000404 		MOVEI	0,404		;NOTIFY PDP-11 OF END OF PASS
   799	030655	202 00 0 00 000451 		MOVEM	0,$DTCMD
   800	030656	402 00 0 00 000444 		SETZM	$DTFLG
   801	030657	7 200 20 0 00 020000 	$$DTE0:	CONO	DTE,DONG11
   802	030660	336 00 0 00 000444 		SKIPN	$DTFLG		;WAIT TILL 11 RESPONDS
   803	030661	254 00 0 00 030660 		JRST	.-1
   804	030662	254 00 0 00 030705 		JRST	STARTA		;KEEP RUNNING
   805
   806					;SPECIAL KL10 COMPLETED ROUTINE
   807
   808	030663	332 00 0 00 030044 	$SPKLD:	SKIPE	MONTEN
   809	030664	254 00 1 00 030012 		JRST	@RETURN		;LOADED BY "DIAMON"
   810
   811	030665	201 00 0 00 000403 		MOVEI	0,403		;NOTIFY PDP-11 OF COMPLETION
   812	030666	202 00 0 00 000451 		MOVEM	0,$DTCMD
   813	030667	402 00 0 00 000444 		SETZM	$DTFLG
   814	030670	7 200 20 0 00 020000 	$$DTE2:	CONO	DTE,DONG11
   815	030671	336 00 0 00 000444 		SKIPN	$DTFLG		;SHOULD NEVER HAPPEN
   816	030672	254 00 0 00 030671 		JRST	.-1		;11 NEVER RETURNS ON END OF PROGRAM
   817	030673	254 04 0 00 030000 		HALT	BEGIN		;IF IT DOES, HALT.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0037

   818					SUBTTL	MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS
   819
   820						LALL
   821			000774			LAST=774			;LAST POSSIBLE DEVICE
   822
   823					;OPERATOR DEFINITIONS
   824
   825		264000	041123			OPDEF	TRPPI	[JSR	TRAPPI]	;FILL INTERRUPT LOCATIONS
   826		264000	041106			OPDEF	HALTPI	[JSR	HALTPI]	;FILL INT. LOC. WITH HALTS
   827		264000	041075			OPDEF	CLRTRP	[JSR	TRPCLR]	;CLEAR TRAPS
   828					;MACROS
   829						DEFINE	BLURB	<
   830					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
   831					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
   832					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
   833					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
   834					>
   835						DEFINE	BLURB1	<
   836					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
   837					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
   838					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
   839					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
   840					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
   841					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
   842					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
   843					>
   844						DEFINE	CLRAPR	<CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR>
   845						DEFINE	CLRAP1	<CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR>
   846						DEFINE	CLRPI	<CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177>
   847
   848						DEFINE	WATINT	<
   849						MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
   850						SOJG	13,.			;AND WAIT>
   851
   852						DEFINE	STOP2<
   853						HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
   854						JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.>
   855
   856						DEFINE	TSET<
   857						%X=.				;DEFINE %X TO SAVE
   858						MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
   859						MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT>
   860
   861						DEFINE	TGET<
   862						MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
   863						CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
   864						STOP2>
   865
   866						DEFINE	TBOTH<
   867						TGET
   868					
   869						TSET>
   870
   871						DEFINE	PINO	(A,%NO)<
   872					
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-1
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0038

   873					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
   874					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
   875					
   876						TSET
   877					%NO:	CLRBTH
   878						CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
   879						WATINT
   880						CONSZ	PI,A			;CHECK WHY INT. IN PROGRESS IS SET.
   881						STOP
   882						TGET
   883					>
   884						DEFINE	PIYES	(A,B,%YES)<
   885					
   886					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
   887					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
   888					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
   889					
   890						TSET
   891					%YES:	CLRBTH
   892						CONO	PI,REQSET+A		;SET CHANNEL REQUEST BUT NOT ACTIVE
   893						WATINT
   894						CONSZ	PI,B			;CHECK WHY INT. IN PROGRESS IS SET.
   895						STOP
   896						TGET
   897					>
   898						DEFINE	PIHCLR	(A,B,%HCLR)<
   899					
   900					;CHECK THAT PICLR CLEARS THE HOLD FLOP
   901					
   902						TSET
   903					%HCLR:	CLRBTH
   904						CONO	PI,REQSET+PION+A	;CAUSE INT. TO SET HOLD
   905						WATINT
   906						CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
   907						CONSZ	PI,B			;HOLD FLOP FAILED TO CLEAR.
   908						STOP
   909						TGET
   910					>
   911						DEFINE	PIONOF	(A,%ONOF)<
   912					
   913					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
   914					;AND THAT AN INTERUPT DOES NOT OCCUR
   915					
   916					BLURB1
   917					
   918						TSET
   919					%ONOF:	CLRBTH
   920						CONO	PI,REQSET+A		;SET REQ. BUT NOT ACTIVE
   921						SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
   922						CONO	PI,PICLR+A		;PI RESET FAILED TO CLEAR PIR FLAG.
   923						WATINT
   924						SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
   925						STOP
   926						TGET
   927					>
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-2
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0039

   928						DEFINE	PIDIS	(A,B,%PICHK)<
   929					
   930					;CHECK THAT A JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
   931					
   932						TSET
   933					%PICHK:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
   934						MOVEM	A			;INTO A
   935						CONO	PI,CHNON+PION+REQSET+B	;TURN ON PI AND REQEST ON CH B
   936						WATINT
   937						JRST	.+3
   938						CONO	PI,CHNON+PION+IRQCLR+B	;TURN OF INTERRUPT REQUEST
   939						JEN	@1			;DISMISS THE INTERRUPT
   940						CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
   941						STOP
   942						TGET
   943						CLRBTH
   944					>
   945						DEFINE	PITEST	(A,%PITST)<
   946					
   947					;TEST SETTING OF CHANNEL FLOP
   948					
   949						TSET
   950					%PITST:	CLRBTH
   951						CONO	PI,CHNON+A		;PION FAILED TO SET
   952						CONSO	PI,A
   953						STOP
   954						TBOTH
   955						CLRBTH
   956					;TEST CLEARING OF CHANNEL FLOP
   957						CONO	PI,CHNON+A		;CHECK PIO CLR
   958						CONO	PI,CHNOFF+A		;TURN OFF CHANNELS
   959						CONSZ	PI,A			;CHECK WHY FLOP NOT CLEAR
   960						STOP
   961						TBOTH
   962						CLRBTH
   963					;CHECK RESETING OF PI SYSTEM
   964						CONO	PI,CHNON+A		;CHECK THAT PI RESET CLEARS
   965						CONO	PI,PICLR		;PI SYSTEM
   966						CONSZ	PI,A
   967						STOP
   968						TBOTH
   969						CLRBTH
   970					;TEST THAT CONO ONLY SETS PION
   971						CONO	PI,CHNON		;TEST PIO SET
   972						CONSZ	PI,A			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
   973						STOP
   974						TBOTH
   975						CLRBTH
   976					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
   977						CONO	PI,CHNON+A		;TEST PIO CLR
   978						CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
   979						CONSO	PI,A			;BE SET
   980						STOP
   981						TGET
   982					>
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-3
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0040

   983						DEFINE	EXECUT<
   984					;FILL THE INTERRUPT LOCATIONS WITH "MOVEI'S"
   985						MOVE	1,[MOVEI 42]		;STORE A MOVEI IN
   986						MOVEM	1,(1)			;INTO 42-60
   987						CAME	1,[MOVEI 57]
   988						AOJA	1,.-2			;LOOP>
   989
   990						DEFINE	STOP<
   991						HALT	.+1			;INSTRUCTION FAILED REPLACE
   992						JRST	.+1			;WITH JRST BACK>
   993
   994						DEFINE	STOP1<
   995						HALT	.+1			;UUO FAILED TO STORE MA BITS
   996						JRST	.+1			;INTO RIGHT HALF OF 40>
   997
   998						DEFINE	XUUO	(X,Y,%XUO)<
   999					
  1000					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  1001					;ARE CORRECT.
  1002					
  1003						MLUUO==X			;THE UUO TO BE EXECUTED
  1004						TSET
  1005					%XUO:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  1006						MOVEM	0,41			;IN TO 41
  1007						X				;EXECUTE A UUO
  1008						HALT	.+1			;UUO DID NOT TRAP TO FORTY
  1009						MOVEI	2,.-1			;GET UUO PC
  1010						ANDI	1,-1			;MASK FLAGS OUT
  1011						CAME	1,2			;PC CORRECT ?
  1012						HALT	.+1			;PC OF UUO NOT = TO PC STORED
  1013						MOVE	0,40			;GET UUO !
  1014						CAME	0,[X!0]			;CORRECT UUO STORED IN 40?
  1015						SKIPA				;NO
  1016						JRST	Y			;TESTS OK !
  1017						STOP1
  1018						TGET
  1019					>
  1020
  1021						DEFINE	XUUOA	(X,%UUPC,%XUPC0,%XUPC1)<
  1022					
  1023					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  1024					
  1025						EFIELD==X			;"E" WE ARE TESTING FOR
  1026						TSET
  1027					%UUPC:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  1028						MOVEM	41			;INTO 41
  1029						1B8!X				;EXECUTE A UUO
  1030					%XUPC0:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  1031						MOVE	0,40			;GET UUO
  1032						ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  1033						CAIE	X			;MA BITS CORRECT?
  1034					%XUPC1:	STOP1
  1035						TGET
  1036					>
  1037
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-4
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0041

  1038						DEFINE	CLRBTH<
  1039						CLRAPR
  1040						CLRPI>
  1041
  1042						DEFINE	CLRBT1<
  1043						CLRAP1
  1044						CLRPI>
  1045
  1046						DEFINE	TRAP	(A,B)<
  1047						MOVE	[A]			;SET TRAP INSTRUCTION
  1048						MOVEM	B			;INTO TRAP LOCATION>
  1049
  1050						DEFINE	STUCK<
  1051						WATINT
  1052						JRST	.			;LOOOP ON SELF>
  1053
  1054						DEFINE	CLKWT	(A,%CLKUP)<
  1055					%CLKUP:	CONSO	CLK			;WAIT FOR CLOCK
  1056						JRST	.-1			;NOT READY!
  1057						CONO	CLKENB+A		;SET CLOCK ENABLE AND PI CHANNEL
  1058						STUCK>
  1059
  1060						DEFINE	TRPCHK	(%TPC)<
  1061					%TPC:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  1062						JRST	.+3			;DONT IF STAND ALONE
  1063						JRSTF	@.+1			;AND RESTORE THEM
  1064						USERF,.+1			;NEW PC AND FLAGS>
  1065
  1066						DEFINE	XCHN2	(A,B,C)<
  1067					
  1068					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  1069					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  1070					;IF ERROR OCCURS CHECK "PIN" PRINT
  1071					
  1072						TRPCHK
  1073						CLRBTH
  1074						HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  1075						MOVE	[JSP A]			;SET UP FOR CORRECT
  1076						MOVEM	B			;INTERRUPT TRAP
  1077						CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  1078						CONO	PI,REQSET!C		;REQUEST INTERRUPT ON TWO CHANNELS
  1079						STUCK
  1080					>
  1081						DEFINE	PSKPA	(A,B,%X)<
  1082					
  1083					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  1084					;AN INTERRUPT INSTRUCTION.
  1085					
  1086						CLRBTH
  1087						HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  1088						MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  1089						MOVEM	A			;INTO TRAP LOCATION
  1090						MOVE	[JSP 1,%X]		;SECOND TRAP INSTRUCTION
  1091						MOVEM	A+1			;INTO SECOND PI INSTRUCTION
  1092						MOVEI	1			;SET AC TO NON ZERO
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-5
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0042

  1093						CONO	PI,REQSET!PION!CHNON!B ;REQUEST INTERRUPT ON CH B
  1094					
  1095					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  1096					
  1097						WATINT
  1098						STOP
  1099					%X:	CLRBTH
  1100						CAIE	2			;ONLY ONE AOSE PREFORMED?
  1101						STOP
  1102					>
  1103
  1104						DEFINE	PSKPB	(A,B,%X)<
  1105					
  1106					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  1107					;THE INTERRUPT.
  1108					
  1109						CLRBTH
  1110						HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  1111						MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  1112						MOVEM	A			;INTO TRAP LOCATION
  1113						MOVE	[JSP 1,%X]		;SECOND TRAP INSTRUCTION
  1114						MOVEM	A+1			;INTO SECOND PI INSTRUCTION
  1115						MOVEI	1			;SET AC TO NON ZERO
  1116						CONO	PI,REQSET!PION!CHNON!B ;REQUEST INTERRUPT ON CH B
  1117					
  1118					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  1119					
  1120						WATINT
  1121						STOP
  1122					%X:	CLRBTH
  1123						CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  1124						STOP
  1125					>
  1126
  1127						DEFINE	FMUUO	(A,%FMTST,%NOFM),<
  1128					
  1129					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  1130					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  1131					;CORRECT PC.
  1132					
  1133						AC=A				;TESTED AC
  1134					
  1135						TSET
  1136						MOVE	A,[XWD 1000,0]		;SET UP UUO INTO AC A TO EXECUTE
  1137						MOVE	13,[JSP 11,%FMTST] ;SET UP UUO TRAP INSTRUCTION
  1138						MOVEM	13,41			;INTO LOCATION 41
  1139						MOVE	A+1,[JRST %NOFM] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  1140						JRST	A			;GO EXECUTE  UUO
  1141					%NOFM:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  1142						JRST	.+1			;LOOP TO %FMUUO IF ERROR
  1143					%FMTST:	ANDI	11,-1			;MASK FLAGS
  1144						CAIE	11,A+1			;PC STORED SHOULD = A +1
  1145						STOP
  1146						TGET
  1147					>
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-6
DBKAHM	MAC	18-Jan-79 11:21		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0043

  1148
  1149						DEFINE	INDPI	(A,B,%XX),<
  1150					
  1151					;GET OURSELVES INTO A TIGHT INDIRECT LOOP.
  1152					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  1153					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  1154					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  1155					
  1156						TSET
  1157						MOVEI	10,^D10			;TIMES TO DO THIS TEST
  1158						MOVEM	10,COUNTX#		;STORE IT
  1159						MOVE	10,[JSP 1,%XX]		;INTERRUPT TRAP INSTRUCTION
  1160						MOVEM	10,A			;STORE FOR INTERRUPT REQUEST
  1161						CLRBT1
  1162						CONO	PI,2377			;TURN ON PI AND CHANNELS
  1163						CONO	APR,CLKENB+B		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH B
  1164						JRST	@.			;LOOP
  1165						HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  1166					%XX:	TGET
  1167						ANDI	1,-1			;MASK PC BITS
  1168						CAIE	1,%XX-2			;WAS CORRECT PC STORED?
  1169						STOP
  1170						SOSE	COUNTX			;LOOP TEST
  1171						JEN	@1			;DISMISS INTERRUPT
  1172						CLRBTH
  1173					>
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3
DBKAHM	MAC	18-Jan-79 11:21		IOT TESTING                                                                        SEQ 0044

  1174					SUBTTL	IOT TESTING
  1175					;THIS ROUTINE CHECKS THE CPU FOR BEING A KI10
  1176					;IF THE CPU IS A 166(PDP-6) OR A KA10 THE PROGRAM WILL
  1177					;HALT OTHERWISE IT WILL CONTINUE.
  1178	030674	476 00 0 00 041741 	IOTXXX:	SETOM	ITERAT#			;INITIAL ITERATION COUNTER [-1]
  1179	030675	255 17 0 00 030676 		JFCL	17,.+1			;CLEAR ALL FLAGS
  1180	030676	254 00 0 00 030677 		JRST	.+1			;TRY TO SET PC CHANGE(PDP-6)
  1181	030677	255 01 0 00 030704 		JFCL	1,PDP6			;IS IT THERE?(GO TO A HALT)
  1182	030700	211 00 0 00 000001 		MOVNI	1			;SET UP FOR AOBJN
  1183	030701	253 00 0 00 030702 		AOBJN	.+1			;IF AC=0 THEN KI-10
  1184	030702	322 00 0 00 030705 		JUMPE	IOTXX			;IF BIT 17 SET THEN KA-10
  1185	030703	254 04 0 00 030703 	KA10:	HALT	.			;THIS IS A KA10
  1186	030704	254 04 0 00 030704 	PDP6:	HALT	.			;THIS IS A PDP-6 (166)
  1187
  1188					;IF IOT HANGS - CHECK ARRT AND ARLT CLR
  1189					;AND OR AR SIGN SMEAR..
  1190
  1191					;TEST THE IOT'S
  1192
  1193	030705				IOTXX:
  1194	030705	264 00 0 00 041234 	IOT0:	JSR	TRPSET			;FILL THE TRAP LOCATIONS
  1195	030706	474 01 0 00 000000 		SETO	1,			;THE IOTS FAIL
  1196	030707	7 000 04 0 00 000001 		DATAI	1			;TO STORE C(E)
  1197	030710	7 000 24 0 00 000001 		CONI	1			;CHECK IR DECODE
  1198	030711	316 01 0 00 041447 		CAMN	1,[-1]			;IR IOT ,IOT0-T9 ,ET2
  1199						STOP^
  1200	030712	254 04 0 00 030713 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1201	030713	254 00 0 00 030714 		JRST	.+1			;WITH JRST BACK^
  1202
  1203	030714	200 01 0 00 041450 	IOT1:	MOVE	1,[123456654321]	;CHECK DATAI STORING C(E)
  1204	030715	7 000 04 0 00 000001 		DATAI	1			;CONTENTS OF LOC 1
  1205	030716	316 01 0 00 041450 		CAMN	1,[123456654321]	;NOT MODIFIED
  1206						STOP^
  1207	030717	254 04 0 00 030720 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1208	030720	254 00 0 00 030721 		JRST	.+1			;WITH JRST BACK^
  1209
  1210	030721	200 01 0 00 041450 	IOT2:	MOVE	1,[123456654321]	;CHECK CONI STOR THE CONTENTS OF "E" NOT SET OR
  1211	030722	7 000 24 0 00 000001 		CONI	1			;SAC INH NOT SET - CONTENTS OF LOC 1
  1212	030723	316 01 0 00 041450 		CAMN	1,[123456654321]	;NOT MODIFIED
  1213						STOP^
  1214	030724	254 04 0 00 030725 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1215	030725	254 00 0 00 030726 		JRST	.+1			;WITH JRST BACK^
  1216
  1217	030726	474 00 0 00 000000 	IOT3:	SETO				;CHECK SAC INH FOR
  1218	030727	7 000 24 0 00 000001 		CONI	1			;CONI LOC 0
  1219	030730	312 00 0 00 041447 		CAME	[-1]			;MODIFIED
  1220						STOP^
  1221	030731	254 04 0 00 030732 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1222	030732	254 00 0 00 030733 		JRST	.+1			;WITH JRST BACK^
  1223
  1224	030733	7 774 20 0 00 000000 	IOT4:	CONO	LAST,0			;CLEAR LAST DEV (774)
  1225	030734	7 774 24 0 00 000002 		CONI	LAST,2
  1226	030735	306 02 0 00 000002 		CAIN	2,2			;IOT GOT E OF LAST INST.
  1227						STOP^
  1228	030736	254 04 0 00 030737 		HALT	.+1			;INSTRUCTION FAILED REPLACE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-1
DBKAHM	MAC	18-Jan-79 11:21		IOT TESTING                                                                        SEQ 0045

  1229	030737	254 00 0 00 030740 		JRST	.+1			;WITH JRST BACK^
  1230
  1231	030740	7 774 14 0 00 041451 	IOT5:	DATAO	LAST,[0]		;AR CLR FAILED ON
  1232	030741	7 774 04 0 00 000003 		DATAI	LAST,3			;DATAI
  1233	030742	306 03 0 00 000003 		CAIN	3,3			;GET E AS DATA
  1234						STOP^
  1235	030743	254 04 0 00 030744 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1236	030744	254 00 0 00 030745 		JRST	.+1			;WITH JRST BACK^
  1237
  1238						TSET^
  1239			030745			%X=.				;DEFINE %X TO SAVE
  1240	030745	201 00 0 00 030745 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1241	030746	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1242	030747	400 00 0 00 000000 	IOT6:	SETZ				;CONSZ FAILED TO SKIP
  1243	030750	7 000 30 0 00 000000 		CONSZ				;CHECK PC CLOCK ENABLE AND AD=0 ON IOT CONSZ
  1244						STOP^
  1245	030751	254 04 0 00 030752 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1246	030752	254 00 0 00 030753 		JRST	.+1			;WITH JRST BACK^
  1247
  1248						TBOTH^
  1249						TGET^
  1250	030753	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1251	030754	302 00 0 00 030745 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1252						STOP2^^
  1253	030755	254 04 0 00 030756 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1254	030756	254 00 0 00 030757 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1255
  1256						TSET^^
  1257			030757			%X=.				;DEFINE %X TO SAVE
  1258	030757	201 00 0 00 030757 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1259	030760	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1260	030761	7 774 20 0 00 000000 	IOT7:	CONO	LAST,0			;CONSZ FAILED TO SKIP
  1261	030762	7 774 30 0 00 700000 		CONSZ	LAST,700000		;CHECK PC CLK EN AT ET2 ON IOT CONSZ
  1262						STOP^
  1263	030763	254 04 0 00 030764 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1264	030764	254 00 0 00 030765 		JRST	.+1			;WITH JRST BACK^
  1265
  1266						TBOTH^
  1267						TGET^
  1268	030765	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1269	030766	302 00 0 00 030757 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1270						STOP2^^
  1271	030767	254 04 0 00 030770 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1272	030770	254 00 0 00 030771 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1273
  1274						TSET^^
  1275			030771			%X=.				;DEFINE %X TO SAVE
  1276	030771	201 00 0 00 030771 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1277	030772	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1278	030773	7 774 20 0 00 000000 	IOT8:	CONO	LAST,0			;CONSO SKIPPED CHK PC CLK EN(0)
  1279	030774	7 774 34 0 00 000000 		CONSO	LAST,0			;AD=0, IOT CONSO
  1280	030775	334 00 0 00 000000 		SKIPA				;IOT CONSZ
  1281						STOP^
  1282	030776	254 04 0 00 030777 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1283	030777	254 00 0 00 031000 		JRST	.+1			;WITH JRST BACK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-2
DBKAHM	MAC	18-Jan-79 11:21		IOT TESTING                                                                        SEQ 0046

  1284
  1285						TBOTH^
  1286						TGET^
  1287	031000	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1288	031001	302 00 0 00 030771 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1289						STOP2^^
  1290	031002	254 04 0 00 031003 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1291	031003	254 00 0 00 031004 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1292
  1293						TSET^^
  1294			031004			%X=.				;DEFINE %X TO SAVE
  1295	031004	201 00 0 00 031004 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1296	031005	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1297	031006	400 01 0 00 000000 	IOT9:	SETZ	1,			;CHK AD+1 TO BOTH ON IOT
  1298	031007	7 774 10 0 00 000001 		BLKO	LAST,1			;BLK, IF C(E)=0 THEN AD+1
  1299	031010	334 00 0 00 000000 		SKIPA				;BOTH OR ARFMAD(1) FAILED
  1300	031011	255 00 0 00 000000 		JFCL				;IF IR 12 FAILED TO SET
  1301	031012	312 01 0 00 041445 		CAME	1,[XWD 1,1]		;PROGRAM BLOWS MIND
  1302						STOP^
  1303	031013	254 04 0 00 031014 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1304	031014	254 00 0 00 031015 		JRST	.+1			;WITH JRST BACK^
  1305
  1306						TBOTH^
  1307						TGET^
  1308	031015	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1309	031016	302 00 0 00 031004 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1310						STOP2^^
  1311	031017	254 04 0 00 031020 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1312	031020	254 00 0 00 031021 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1313
  1314						TSET^^
  1315			031021			%X=.				;DEFINE %X TO SAVE
  1316	031021	201 00 0 00 031021 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1317	031022	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1318	031023	255 00 0 00 000000 	IOT10:	JFCL
  1319						TBOTH^
  1320						TGET^
  1321	031024	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1322	031025	302 00 0 00 031021 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1323						STOP2^^
  1324	031026	254 04 0 00 031027 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1325	031027	254 00 0 00 031030 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1326
  1327						TSET^^
  1328			031030			%X=.				;DEFINE %X TO SAVE
  1329	031030	201 00 0 00 031030 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1330	031031	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1331	031032	400 01 0 00 000000 	IOT11:	SETZ	1,			;BLKO PC CLK EN AT ET2 FAILED
  1332	031033	7 774 10 0 00 000001 		BLKO	LAST,1			;BLKO SHOULD SKIP
  1333						STOP^
  1334	031034	254 04 0 00 031035 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1335	031035	254 00 0 00 031036 		JRST	.+1			;WITH JRST BACK^
  1336
  1337						TBOTH^
  1338						TGET^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-3
DBKAHM	MAC	18-Jan-79 11:21		IOT TESTING                                                                        SEQ 0047

  1339	031036	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1340	031037	302 00 0 00 031030 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1341						STOP2^^
  1342	031040	254 04 0 00 031041 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1343	031041	254 00 0 00 031042 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1344
  1345						TSET^^
  1346			031042			%X=.				;DEFINE %X TO SAVE
  1347	031042	201 00 0 00 031042 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1348	031043	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1349	031044	474 01 0 00 000000 	IOT12:	SETO	1,			;BLKO PREFORMED A SKIP
  1350	031045	7 774 10 0 00 000001 		BLKO	LAST,1			;PC CLK EN ASSERTED?
  1351	031046	334 00 0 00 000000 		SKIPA
  1352						STOP^
  1353	031047	254 04 0 00 031050 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1354	031050	254 00 0 00 031051 		JRST	.+1			;WITH JRST BACK^
  1355
  1356	031051	320 00 0 00 031052 	IOT13:	JUMP	.+1			;NEVER DO 13
  1357
  1358	031052	7 004 20 0 00 010000 	IOT14:	CONO	PI,10000		;CLR PI SYSTEM
  1359	031053	7 000 20 0 00 000077 		CONO	77			;SET SOME CPA BITS
  1360	031054	7 000 24 0 00 000000 		CONI	0			;IF FAILED EITHER CONO FAILED
  1361	031055	336 00 0 00 000000 		SKIPN	0			;IO SET OR CONI FAILED READ
  1362						STOP^
  1363	031056	254 04 0 00 031057 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1364	031057	254 00 0 00 031060 		JRST	.+1			;WITH JRST BACK^
  1365										;OR ARRT OR ARLT EN OR AR SIGN
  1366										;SMEAR OR CPA SELECT NOT ASSERTED
  1367					SUBTTL	TEST APR FLAGS
  1368
  1369	031060	7 000 20 0 00 000000 	IOT15:	CONO				;APR CLOCK PIA FAILED EITHER
  1370	031061	7 000 20 0 00 000001 		CONO	1			;TO SET OR BE READ
  1371	031062	7 000 24 0 00 000000 		CONI				;CHECK APR PIA 35 CLOCK
  1372	031063	606 00 0 00 000001 		TRNN	1
  1373						STOP^
  1374	031064	254 04 0 00 031065 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1375	031065	254 00 0 00 031066 		JRST	.+1			;WITH JRST BACK^
  1376
  1377	031066	7 000 20 0 00 000000 	IOT15A:	CONO				;APR CLOCK PIA FAILED EITHER
  1378	031067	7 000 20 0 00 000002 		CONO	2			;TO SET OR BE READ
  1379	031070	7 000 24 0 00 000000 		CONI				;CHECK APR PIA 34 CLOCK
  1380	031071	606 00 0 00 000002 		TRNN	2
  1381						STOP^
  1382	031072	254 04 0 00 031073 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1383	031073	254 00 0 00 031074 		JRST	.+1			;WITH JRST BACK^
  1384
  1385	031074	7 000 20 0 00 000000 	IOT16:	CONO				;APR CLOCK PIA FAILED EITHER
  1386	031075	7 000 20 0 00 000004 		CONO	4			;TO SET OR BE READ
  1387	031076	7 000 24 0 00 000000 		CONI				;CHECK APR PIA 33 CLOCK
  1388	031077	606 00 0 00 000004 		TRNN	4			;
  1389						STOP^
  1390	031100	254 04 0 00 031101 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1391	031101	254 00 0 00 031102 		JRST	.+1			;WITH JRST BACK^
  1392
  1393	031102	7 000 20 0 00 000000 	IOT16A:	CONO				;APR ERROR PIA FAILED EITHER
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-4
DBKAHM	MAC	18-Jan-79 11:21		TEST APR FLAGS                                                                     SEQ 0048

  1394	031103	7 000 20 0 00 000010 		CONO	10			;TO SET OR BE READ
  1395	031104	7 000 24 0 00 000000 		CONI				;CHECK APR PIA 32 ERROR
  1396	031105	606 00 0 00 000010 		TRNN	10
  1397						STOP^
  1398	031106	254 04 0 00 031107 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1399	031107	254 00 0 00 031110 		JRST	.+1			;WITH JRST BACK^
  1400
  1401	031110	7 000 20 0 00 000000 	IOT17:	CONO				;APR ERROR PIA FAILED EITHER
  1402	031111	7 000 20 0 00 000020 		CONO	20			;TO SET OR BE READ
  1403	031112	7 000 24 0 00 000000 		CONI				;CHECK APR PIA 31 ERROR
  1404	031113	606 00 0 00 000020 		TRNN	20
  1405						STOP^
  1406	031114	254 04 0 00 031115 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1407	031115	254 00 0 00 031116 		JRST	.+1			;WITH JRST BACK^
  1408
  1409	031116	7 000 20 0 00 000000 	IOT17A:	CONO				;APR ERROR PIA FAILED EITHER
  1410	031117	7 000 20 0 00 000040 		CONO	40			;TO SET OR BE READ
  1411	031120	7 000 24 0 00 000000 		CONI				;CHECK APR PIA 30 ERROR
  1412	031121	606 00 0 00 000040 		TRNN	40
  1413						STOP^
  1414	031122	254 04 0 00 031123 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1415	031123	254 00 0 00 031124 		JRST	.+1			;WITH JRST BACK^
  1416	031124	7 000 20 0 00 000001 	IOT18:	CONO	1			;APR PIA 35 CLOCK
  1417	031125	7 000 20 0 00 000000 		CONO				;FAILED TO CLEAR
  1418	031126	7 000 24 0 00 000000 		CONI
  1419	031127	602 00 0 00 000001 		TRNE	1
  1420						STOP^
  1421	031130	254 04 0 00 031131 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1422	031131	254 00 0 00 031132 		JRST	.+1			;WITH JRST BACK^
  1423
  1424	031132	7 000 20 0 00 000002 	IOT19:	CONO	2			;APR PIA 34 CLOCK
  1425	031133	7 000 20 0 00 000000 		CONO				;FAILED TO CLEAR
  1426	031134	7 000 24 0 00 000000 		CONI
  1427	031135	602 00 0 00 000002 		TRNE	2
  1428						STOP^
  1429	031136	254 04 0 00 031137 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1430	031137	254 00 0 00 031140 		JRST	.+1			;WITH JRST BACK^
  1431
  1432	031140	7 000 20 0 00 000004 	IOT20:	CONO	4			;APR PIA 33 CLOCK
  1433	031141	7 000 20 0 00 000000 		CONO				;FAILED TO CLEAR
  1434	031142	7 000 24 0 00 000000 		CONI
  1435	031143	602 00 0 00 000004 		TRNE	4
  1436						STOP^
  1437	031144	254 04 0 00 031145 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1438	031145	254 00 0 00 031146 		JRST	.+1			;WITH JRST BACK^
  1439
  1440	031146	7 000 20 0 00 000010 	IOT21:	CONO	10			;APR PIA 32 ERROR
  1441	031147	7 000 20 0 00 000000 		CONO				;FAILED TO CLEAR
  1442	031150	7 000 24 0 00 000000 		CONI
  1443	031151	602 00 0 00 000010 		TRNE	10
  1444						STOP^
  1445	031152	254 04 0 00 031153 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1446	031153	254 00 0 00 031154 		JRST	.+1			;WITH JRST BACK^
  1447
  1448	031154	7 000 20 0 00 000020 	IOT22:	CONO	20			;APR PIA 31 ERROR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-5
DBKAHM	MAC	18-Jan-79 11:21		TEST APR FLAGS                                                                     SEQ 0049

  1449	031155	7 000 20 0 00 000000 		CONO				;FAILED TO CLEAR
  1450	031156	7 000 24 0 00 000000 		CONI
  1451	031157	602 00 0 00 000020 		TRNE	20
  1452						STOP^
  1453	031160	254 04 0 00 031161 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1454	031161	254 00 0 00 031162 		JRST	.+1			;WITH JRST BACK^
  1455
  1456	031162	7 000 20 0 00 000040 	IOT23:	CONO	40			;APR PIA 30 ERROR
  1457	031163	7 000 20 0 00 000000 		CONO				;FAILED TO CLEAR
  1458	031164	7 000 24 0 00 000000 		CONI
  1459	031165	602 00 0 00 000040 		TRNE	40
  1460						STOP^
  1461	031166	254 04 0 00 031167 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1462	031167	254 00 0 00 031170 		JRST	.+1			;WITH JRST BACK^
  1463
  1464						TBOTH^
  1465						TGET^
  1466	031170	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1467	031171	302 00 0 00 031042 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1468						STOP2^^
  1469	031172	254 04 0 00 031173 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1470	031173	254 00 0 00 031174 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1471
  1472						TSET^^
  1473			031174			%X=.				;DEFINE %X TO SAVE
  1474	031174	201 00 0 00 031174 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1475	031175	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1476	031176	7 000 20 0 00 000007 	IOT24:	CONO	7			;SET SOME FLAGS
  1477	031177	7 000 34 0 00 000000 		CONSO				;CONSO FAILED CK PC CLOCK ENABLE
  1478	031200	334 00 0 00 000000 		SKIPA				;INH
  1479						STOP^
  1480	031201	254 04 0 00 031202 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1481	031202	254 00 0 00 031203 		JRST	.+1			;WITH JRST BACK^
  1482
  1483						TBOTH^
  1484						TGET^
  1485	031203	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1486	031204	302 00 0 00 031174 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1487						STOP2^^
  1488	031205	254 04 0 00 031206 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1489	031206	254 00 0 00 031207 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1490
  1491						TSET^^
  1492			031207			%X=.				;DEFINE %X TO SAVE
  1493	031207	201 00 0 00 031207 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1494	031210	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1495	031211	7 000 20 0 00 000007 	IOT25:	CONO	7			;SET SOME FLAGS
  1496	031212	7 000 34 0 00 000007 		CONSO	7			;CONSO FAILED CH PC CLOCK ENABLE
  1497						STOP^
  1498	031213	254 04 0 00 031214 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1499	031214	254 00 0 00 031215 		JRST	.+1			;WITH JRST BACK^
  1500
  1501						TBOTH^
  1502						TGET^
  1503	031215	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-6
DBKAHM	MAC	18-Jan-79 11:21		TEST APR FLAGS                                                                     SEQ 0050

  1504	031216	302 00 0 00 031207 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1505						STOP2^^
  1506	031217	254 04 0 00 031220 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1507	031220	254 00 0 00 031221 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1508
  1509						TSET^^
  1510			031221			%X=.				;DEFINE %X TO SAVE
  1511	031221	201 00 0 00 031221 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1512	031222	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1513	031223	7 000 20 0 00 000007 	IOT26:	CONO	7			;CONSZ FAILED
  1514	031224	7 000 30 0 00 000007 		CONSZ	7			;CK PC CLOCK ENABLE IF AD=0
  1515	031225	334 00 0 00 000000 		SKIPA				;AND IOT TIME
  1516						STOP^
  1517	031226	254 04 0 00 031227 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1518	031227	254 00 0 00 031230 		JRST	.+1			;WITH JRST BACK^
  1519
  1520						TBOTH^
  1521						TGET^
  1522	031230	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1523	031231	302 00 0 00 031221 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1524						STOP2^^
  1525	031232	254 04 0 00 031233 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1526	031233	254 00 0 00 031234 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1527
  1528						TSET^^
  1529			031234			%X=.				;DEFINE %X TO SAVE
  1530	031234	201 00 0 00 031234 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1531	031235	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1532	031236	7 000 20 0 00 004000 	IOT27:	CONO	CLKDIS			;DISABLE CLOCK THEN ENABLE
  1533	031237	7 000 20 0 00 002000 		CONO	CLKENB			;FAILS IF CLOCK ENABLE NOT SET.
  1534	031240	7 000 34 0 00 002000 		CONSO	2000			;SET
  1535						STOP^
  1536	031241	254 04 0 00 031242 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1537	031242	254 00 0 00 031243 		JRST	.+1			;WITH JRST BACK^
  1538
  1539	031243	7 000 20 0 00 002000 	IOT28:	CONO	2000			;CK CLK EN FOR NOT
  1540	031244	7 000 20 0 00 004000 		CONO	4000			;CLEARING
  1541	031245	7 000 30 0 00 002000 		CONSZ	2000
  1542						STOP^
  1543	031246	254 04 0 00 031247 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1544	031247	254 00 0 00 031250 		JRST	.+1			;WITH JRST BACK^
  1545
  1546					;THE NEXT TWO TESTS ARE NOT DONE IF WE ARE DOING
  1547					;MARGINS, BECAUSE THE DATAO IN THE NEXT TEST WILL CLEAR
  1548					;THE MARGIN WORD, AND THE TEST FOLLOWING MAY NOT BE ASSURED
  1549					;THAT THE CONSOLE SWITCHES 30-35 WILL BE = 0
  1550
  1551	031250	332 00 0 00 030055 	IOT29:	SKIPE	MARGIN			;ARE DOING MARGINS?
  1552	031251	254 00 0 00 031265 		JRST	IOT31A			;YEP SKIP THIS
  1553	031252	400 00 0 00 000000 		SETZ				;SO THE "DATAO" SENDS ZERO'S
  1554	031253	7 000 20 0 00 000077 		CONO	APR,77			;SET SOME BITS
  1555	031254	7 000 14 0 00 000000 		DATAO	APR,0			;TRY TO CLEAR VIA DATAO
  1556	031255	7 000 34 0 00 000077 		CONSO	APR,77			;BITS SHOULD STILL BE SET
  1557						STOP^
  1558	031256	254 04 0 00 031257 		HALT	.+1			;INSTRUCTION FAILED REPLACE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-7
DBKAHM	MAC	18-Jan-79 11:21		TEST APR FLAGS                                                                     SEQ 0051

  1559	031257	254 00 0 00 031260 		JRST	.+1			;WITH JRST BACK^
  1560
  1561	031260	7 000 20 0 00 000077 	IOT30:	CONO	APR,77			;SET SOME CPA BITS
  1562	031261	7 000 04 0 00 000000 		DATAI	APR,0			;GET DATA SWITCHES
  1563	031262	602 00 0 00 000077 		TRNE	0,77			;DATAI DECODED AS CONI
  1564						STOP^
  1565	031263	254 04 0 00 031264 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1566	031264	254 00 0 00 031265 		JRST	.+1			;WITH JRST BACK^
  1567
  1568	031265				IOT31A:	TBOTH^
  1569						TGET^
  1570	031265	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1571	031266	302 00 0 00 031234 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1572						STOP2^^
  1573	031267	254 04 0 00 031270 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1574	031270	254 00 0 00 031271 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1575
  1576						TSET^^
  1577			031271			%X=.				;DEFINE %X TO SAVE
  1578	031271	201 00 0 00 031271 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1579	031272	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1580	031273	254 02 1 00 031274 	IOT31:	JRSTF	@.+1			;SET BIS FLAG VIA JRSTF
  1581	031274	000000	031275			BIS,.+1				;BYTF6 AND NEW PC
  1582	031275	7 774 14 0 00 000000 		DATAO	LAST,			;TRY TO CLEAR BIS FLAG VIA DATAO
  1583	031276	265 00 0 00 031277 		JSP	.+1			;GET CPU FLAGS(BIS) SHOULD BE CLEAR
  1584	031277	603 00 0 00 020000 		TLNE	BIS			;AT ET2 OF THE IOT
  1585						STOP^
  1586	031300	254 04 0 00 031301 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1587	031301	254 00 0 00 031302 		JRST	.+1			;WITH JRST BACK^
  1588						TGET^
  1589	031302	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1590	031303	302 00 0 00 031271 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1591						STOP2^^
  1592	031304	254 04 0 00 031305 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1593	031305	254 00 0 00 031306 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1594	031306	255 00 0 00 000000 	IOT32:	JFCL
  1595
  1596	031307	7 000 34 0 00 001000 	IOT33:	CONSO	CLK			;WAIT FOR CLOCK FLAG
  1597	031310	344 00 0 00 031306 		AOJA	.-2
  1598	031311	7 000 24 0 00 000000 		CONI				;CHECK WHY CLOCK
  1599	031312	606 00 0 00 001000 		TRNN	CLK			;FLAG NOT SET
  1600						STOP^
  1601	031313	254 04 0 00 031314 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1602	031314	254 00 0 00 031315 		JRST	.+1			;WITH JRST BACK^
  1603
  1604					;THIS TEST WILL FAIL IF IN MAINTAINENCE MODE OR IF MAINT MODE UN-
  1605					;DETECTABLE VIA APR CONI.. IF MAINT MODE IS SET THE ROUTINE SHOULD BE
  1606					;COMPLETLY BYPASSED IF THE ROUTINE FAILS THEN YOU SHOULD CHECK
  1607					;THAT MAINT MODE IS SET OR THE CLOCK FLAG IS NOT CLEAR
  1608
  1609	031315	7 000 24 0 00 000015 		CONI	APR,15			;GET APR FLAGS
  1610	031316	603 15 0 00 001000 		TLNE	15,IMAINT		;IN MAINT MODE?
  1611	031317	254 00 0 00 031327 		JRST	IOT33B			;SKIP THIS TEST
  1612	031320	7 000 34 0 00 001000 	IOT33A:	CONSO	CLK			;CHECK WHY CLOCK
  1613	031321	254 00 0 00 031320 		JRST	.-1			;FLAG NOT CLEAR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 3-8
DBKAHM	MAC	18-Jan-79 11:21		TEST APR FLAGS                                                                     SEQ 0052

  1614	031322	7 000 20 0 00 001000 		CONO	CLKCLR			;AT CONI TIME
  1615	031323	7 000 24 0 00 000000 		CONI
  1616	031324	602 00 0 00 001000 		TRNE	1000
  1617						STOP^
  1618	031325	254 04 0 00 031326 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1619	031326	254 00 0 00 031327 		JRST	.+1			;WITH JRST BACK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 4
DBKAHM	MAC	18-Jan-79 11:21		TEST PI FLAGS                                                                      SEQ 0053

  1620					SUBTTL	TEST PI FLAGS
  1621
  1622	031327	7 000 20 0 00 000007 	IOT33B:	CONO	7			;CONO PI MODIFIED
  1623	031330	7 004 20 0 00 000000 		CONO	PI,0			;CPU AS A DEVICE
  1624	031331	7 000 34 0 00 000007 		CONSO	7			;CPA SELECT IS CONFUSED
  1625						STOP^
  1626	031332	254 04 0 00 031333 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1627	031333	254 00 0 00 031334 		JRST	.+1			;WITH JRST BACK^
  1628	031334	7 000 20 0 00 000000 		CONO	0			;RESET BITS
  1629
  1630	031335	7 004 20 0 00 000200 	IOT34:	CONO	PI,200			;CHK WHY PI ON
  1631	031336	7 004 24 0 00 000000 		CONI	PI,			;FLOP NOT SET
  1632	031337	606 00 0 00 000200 		TRNN	200
  1633						STOP^
  1634	031340	254 04 0 00 031341 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1635	031341	254 00 0 00 031342 		JRST	.+1			;WITH JRST BACK^
  1636
  1637	031342	7 004 20 0 00 000200 	IOT35:	CONO	PI,200			;CHK WHY PI ON
  1638	031343	7 004 20 0 00 000400 		CONO	PI,400			;NOT CLEARED
  1639	031344	7 004 24 0 00 000000 		CONI	PI,			;
  1640	031345	602 00 0 00 000200 		TRNE	200
  1641						STOP^
  1642	031346	254 04 0 00 031347 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1643	031347	254 00 0 00 031350 		JRST	.+1			;WITH JRST BACK^
  1644
  1645	031350	7 004 20 0 00 040000 	IOT36:	CONO	PI,40000		;CHK WHY APR PAR ERROR
  1646	031351	7 000 24 0 00 000000 		CONI				;ENABLE NOT SET
  1647	031352	606 00 0 00 100000 		TRNN	100000
  1648						STOP^
  1649	031353	254 04 0 00 031354 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1650	031354	254 00 0 00 031355 		JRST	.+1			;WITH JRST BACK^
  1651
  1652	031355	7 004 20 0 00 100000 	IOT37:	CONO	PI,100000		;CHK WHY APR
  1653	031356	7 000 24 0 00 000000 		CONI				;PAR ERR ENABLE
  1654	031357	602 00 0 00 100000 		TRNE	100000			;NOT CLEAR
  1655						STOP^
  1656	031360	254 04 0 00 031361 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1657	031361	254 00 0 00 031362 		JRST	.+1			;WITH JRST BACK^
  1658
  1659	031362	255 00 0 00 000000 		JFCL
  1660
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 5
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0054

  1661					SUBTTL	BASIC PI SYSTEM TESTING
  1662					;BEGIN TESTING THE PI SYSTEM
  1663						BLURB^
  1664					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  1665					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  1666					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  1667					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  1668					^
  1669					;AND THE PROGRAM WILL HALT POINTING TO THE INTERUPTED ADRESS.
  1670	031363	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  1671
  1672
  1673	031364	7 004 20 0 00 002001 	IOT38:	CONO	PI,2001			;PI CHANNEL 7
  1674	031365	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1675	031366	606 00 0 00 000001 		TRNN	1			;
  1676						STOP^
  1677	031367	254 04 0 00 031370 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1678	031370	254 00 0 00 031371 		JRST	.+1			;WITH JRST BACK^
  1679
  1680	031371	7 004 20 0 00 002001 	IOT39:	CONO	PI,2001			;PI CHANNEL 7
  1681	031372	7 004 20 0 00 001001 		CONO	PI,1001			;FAILED TO CLEAR
  1682	031373	7 000 24 0 00 000000 		CONI
  1683	031374	602 00 0 00 000001 		TRNE	1
  1684						STOP^
  1685	031375	254 04 0 00 031376 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1686	031376	254 00 0 00 031377 		JRST	.+1			;WITH JRST BACK^
  1687
  1688	031377	7 004 20 0 00 002002 	IOT40:	CONO	PI,2002			;PI CHANNEL 6
  1689	031400	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1690	031401	606 00 0 00 000002 		TRNN	2
  1691						STOP^
  1692	031402	254 04 0 00 031403 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1693	031403	254 00 0 00 031404 		JRST	.+1			;WITH JRST BACK^
  1694
  1695	031404	7 004 20 0 00 002002 	IOT41:	CONO	PI,2002			;PI CHANNEL 6
  1696	031405	7 004 20 0 00 001002 		CONO	PI,1002			;FAILED TO CLEAR
  1697	031406	7 004 24 0 00 000000 		CONI	PI,
  1698	031407	602 00 0 00 000002 		TRNE	2
  1699						STOP^
  1700	031410	254 04 0 00 031411 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1701	031411	254 00 0 00 031412 		JRST	.+1			;WITH JRST BACK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 6
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0055

  1702	031412	7 004 20 0 00 002004 	IOT42:	CONO	PI,2004			;PI CHANNEL 5
  1703	031413	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1704	031414	606 00 0 00 000004 		TRNN	4
  1705						STOP^
  1706	031415	254 04 0 00 031416 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1707	031416	254 00 0 00 031417 		JRST	.+1			;WITH JRST BACK^
  1708
  1709	031417	7 004 20 0 00 002004 	IOT43:	CONO	PI,2004			;PI CHANNEL 5
  1710	031420	7 004 20 0 00 001004 		CONO	PI,1004			;FAILED TO CLEAR
  1711	031421	7 004 24 0 00 000000 		CONI	PI,
  1712	031422	602 00 0 00 000004 		TRNE	4
  1713						STOP^
  1714	031423	254 04 0 00 031424 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1715	031424	254 00 0 00 031425 		JRST	.+1			;WITH JRST BACK^
  1716
  1717	031425	7 004 20 0 00 002010 	IOT44:	CONO	PI,2010			;PI CHANNEL 4
  1718	031426	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1719	031427	606 00 0 00 000010 		TRNN	10
  1720						STOP^
  1721	031430	254 04 0 00 031431 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1722	031431	254 00 0 00 031432 		JRST	.+1			;WITH JRST BACK^
  1723
  1724	031432	7 004 20 0 00 002010 	IOT45:	CONO	PI,2010			;PI CHAN 4
  1725	031433	7 004 20 0 00 001010 		CONO	PI,1010			;FAILED TO CLEAR
  1726	031434	7 004 24 0 00 000000 		CONI	PI,
  1727	031435	602 00 0 00 000010 		TRNE	10
  1728						STOP^
  1729	031436	254 04 0 00 031437 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1730	031437	254 00 0 00 031440 		JRST	.+1			;WITH JRST BACK^
  1731
  1732	031440	7 004 20 0 00 002020 	IOT46:	CONO	PI,2020			;PI CHAN 3
  1733	031441	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1734	031442	606 00 0 00 000020 		TRNN	20
  1735						STOP^
  1736	031443	254 04 0 00 031444 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1737	031444	254 00 0 00 031445 		JRST	.+1			;WITH JRST BACK^
  1738
  1739	031445	7 004 20 0 00 002020 	IOT47:	CONO	PI,2020			;PI CHAN 3
  1740	031446	7 004 20 0 00 001020 		CONO	PI,1020			;FAILED TO CLEAR
  1741	031447	7 004 24 0 00 000000 		CONI	PI,
  1742	031450	602 00 0 00 000010 		TRNE	10
  1743						STOP^
  1744	031451	254 04 0 00 031452 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1745	031452	254 00 0 00 031453 		JRST	.+1			;WITH JRST BACK^
  1746
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 7
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0056

  1747	031453	7 004 20 0 00 002040 	IOT48:	CONO	PI,2040			;PI CHAN 2
  1748	031454	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1749	031455	606 00 0 00 000040 		TRNN	40
  1750						STOP^
  1751	031456	254 04 0 00 031457 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1752	031457	254 00 0 00 031460 		JRST	.+1			;WITH JRST BACK^
  1753
  1754	031460	7 004 20 0 00 002040 	IOT49:	CONO	PI,2040			;PI CHAN 2
  1755	031461	7 004 20 0 00 001040 		CONO	PI,1040			;FAILED TO CLR
  1756	031462	7 004 24 0 00 000000 		CONI	PI,
  1757	031463	602 00 0 00 000040 		TRNE	40
  1758						STOP^
  1759	031464	254 04 0 00 031465 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1760	031465	254 00 0 00 031466 		JRST	.+1			;WITH JRST BACK^
  1761
  1762	031466	7 004 20 0 00 002100 	IOT50:	CONO	PI,2100			;PI CHAN 1
  1763	031467	7 004 24 0 00 000000 		CONI	PI,			;FAILED TO SET
  1764	031470	606 00 0 00 000100 		TRNN	100
  1765						STOP^
  1766	031471	254 04 0 00 031472 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1767	031472	254 00 0 00 031473 		JRST	.+1			;WITH JRST BACK^
  1768
  1769	031473	7 004 20 0 00 002100 	IOT51:	CONO	PI,2100			;PI CHAN 1
  1770	031474	7 004 20 0 00 001100 		CONO	PI,1100			;FAILED TO CLEAR
  1771	031475	7 004 24 0 00 000000 		CONI	PI,
  1772	031476	602 00 0 00 000100 		TRNE	100
  1773						STOP^
  1774	031477	254 04 0 00 031500 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1775	031500	254 00 0 00 031501 		JRST	.+1			;WITH JRST BACK^
  1776
  1777	031501	255 00 0 00 000000 	IOTXYZ:	JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 8
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0057

  1778			040000			X=40000
  1779						BLURB^
  1780					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  1781					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  1782					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  1783					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  1784					^
  1785	031502	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  1786	031503				PIOT00:
  1787						REPEAT	7,<
  1788						PINO	X
  1789						X=X_-1
  1790					>
  1791
  1792						PINO	X^
  1793
  1794					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1795					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1796
  1797						TSET^
  1798			031503			%X=.				;DEFINE %X TO SAVE
  1799	031503	201 00 0 00 031503 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1800	031504	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1801	031505				..0001:	CLRBTH^
  1802	031505	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  1803	031506	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1804	031507	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1805						WATINT^
  1806	031510	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1807	031511	367 13 0 00 031511 		SOJG	13,.			;AND WAIT^
  1808	031512	7 004 30 0 00 040000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1809						STOP^
  1810	031513	254 04 0 00 031514 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1811	031514	254 00 0 00 031515 		JRST	.+1			;WITH JRST BACK^
  1812						TGET^
  1813	031515	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1814	031516	302 00 0 00 031503 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1815						STOP2^^
  1816	031517	254 04 0 00 031520 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1817	031520	254 00 0 00 031521 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1818					^
  1819			020000			X=X_-1
  1820
  1821
  1822						PINO	X^
  1823
  1824					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1825					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1826
  1827						TSET^
  1828			031521			%X=.				;DEFINE %X TO SAVE
  1829	031521	201 00 0 00 031521 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1830	031522	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1831	031523				..0002:	CLRBTH^
  1832	031523	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 8-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0058

  1833	031524	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1834	031525	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1835						WATINT^
  1836	031526	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1837	031527	367 13 0 00 031527 		SOJG	13,.			;AND WAIT^
  1838	031530	7 004 30 0 00 020000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1839						STOP^
  1840	031531	254 04 0 00 031532 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1841	031532	254 00 0 00 031533 		JRST	.+1			;WITH JRST BACK^
  1842						TGET^
  1843	031533	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1844	031534	302 00 0 00 031521 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1845						STOP2^^
  1846	031535	254 04 0 00 031536 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1847	031536	254 00 0 00 031537 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1848					^
  1849			010000			X=X_-1
  1850
  1851
  1852						PINO	X^
  1853
  1854					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1855					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1856
  1857						TSET^
  1858			031537			%X=.				;DEFINE %X TO SAVE
  1859	031537	201 00 0 00 031537 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1860	031540	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1861	031541				..0003:	CLRBTH^
  1862	031541	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  1863	031542	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1864	031543	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1865						WATINT^
  1866	031544	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1867	031545	367 13 0 00 031545 		SOJG	13,.			;AND WAIT^
  1868	031546	7 004 30 0 00 010000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1869						STOP^
  1870	031547	254 04 0 00 031550 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1871	031550	254 00 0 00 031551 		JRST	.+1			;WITH JRST BACK^
  1872						TGET^
  1873	031551	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1874	031552	302 00 0 00 031537 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1875						STOP2^^
  1876	031553	254 04 0 00 031554 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1877	031554	254 00 0 00 031555 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1878					^
  1879			004000			X=X_-1
  1880
  1881
  1882						PINO	X^
  1883
  1884					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1885					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1886
  1887						TSET^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 8-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0059

  1888			031555			%X=.				;DEFINE %X TO SAVE
  1889	031555	201 00 0 00 031555 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1890	031556	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1891	031557				..0004:	CLRBTH^
  1892	031557	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  1893	031560	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1894	031561	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1895						WATINT^
  1896	031562	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1897	031563	367 13 0 00 031563 		SOJG	13,.			;AND WAIT^
  1898	031564	7 004 30 0 00 004000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1899						STOP^
  1900	031565	254 04 0 00 031566 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1901	031566	254 00 0 00 031567 		JRST	.+1			;WITH JRST BACK^
  1902						TGET^
  1903	031567	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1904	031570	302 00 0 00 031555 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1905						STOP2^^
  1906	031571	254 04 0 00 031572 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1907	031572	254 00 0 00 031573 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1908					^
  1909			002000			X=X_-1
  1910
  1911
  1912						PINO	X^
  1913
  1914					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1915					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1916
  1917						TSET^
  1918			031573			%X=.				;DEFINE %X TO SAVE
  1919	031573	201 00 0 00 031573 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1920	031574	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1921	031575				..0005:	CLRBTH^
  1922	031575	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  1923	031576	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1924	031577	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1925						WATINT^
  1926	031600	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1927	031601	367 13 0 00 031601 		SOJG	13,.			;AND WAIT^
  1928	031602	7 004 30 0 00 002000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1929						STOP^
  1930	031603	254 04 0 00 031604 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1931	031604	254 00 0 00 031605 		JRST	.+1			;WITH JRST BACK^
  1932						TGET^
  1933	031605	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1934	031606	302 00 0 00 031573 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1935						STOP2^^
  1936	031607	254 04 0 00 031610 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1937	031610	254 00 0 00 031611 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1938					^
  1939			001000			X=X_-1
  1940
  1941
  1942						PINO	X^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 8-3
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0060

  1943
  1944					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1945					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1946
  1947						TSET^
  1948			031611			%X=.				;DEFINE %X TO SAVE
  1949	031611	201 00 0 00 031611 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1950	031612	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1951	031613				..0006:	CLRBTH^
  1952	031613	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  1953	031614	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1954	031615	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1955						WATINT^
  1956	031616	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1957	031617	367 13 0 00 031617 		SOJG	13,.			;AND WAIT^
  1958	031620	7 004 30 0 00 001000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1959						STOP^
  1960	031621	254 04 0 00 031622 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1961	031622	254 00 0 00 031623 		JRST	.+1			;WITH JRST BACK^
  1962						TGET^
  1963	031623	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1964	031624	302 00 0 00 031611 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1965						STOP2^^
  1966	031625	254 04 0 00 031626 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1967	031626	254 00 0 00 031627 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  1968					^
  1969			000400			X=X_-1
  1970
  1971
  1972						PINO	X^
  1973
  1974					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1975					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1976
  1977						TSET^
  1978			031627			%X=.				;DEFINE %X TO SAVE
  1979	031627	201 00 0 00 031627 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  1980	031630	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  1981	031631				..0007:	CLRBTH^
  1982	031631	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  1983	031632	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  1984	031633	7 004 20 0 00 000200 		CONO	PI,PION			;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1985						WATINT^
  1986	031634	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  1987	031635	367 13 0 00 031635 		SOJG	13,.			;AND WAIT^
  1988	031636	7 004 30 0 00 000400 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  1989						STOP^
  1990	031637	254 04 0 00 031640 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  1991	031640	254 00 0 00 031641 		JRST	.+1			;WITH JRST BACK^
  1992						TGET^
  1993	031641	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  1994	031642	302 00 0 00 031627 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  1995						STOP2^^
  1996	031643	254 04 0 00 031644 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  1997	031644	254 00 0 00 031645 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 8-4
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0061

  1998					^
  1999			000200			X=X_-1
  2000
  2001	031645	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 9
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0062

  2002						BLURB^
  2003					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  2004					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  2005					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  2006					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  2007					^
  2008
  2009	031646	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  2010			040000			X=40000
  2011			000100			Y=100
  2012	031647				PIOT01:
  2013						REPEAT	7,<
  2014						PIYES	Y,X
  2015						X=X_-1
  2016						Y=Y_-1
  2017					>
  2018
  2019						PIYES	Y,X^
  2020
  2021					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2022					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2023					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2024
  2025						TSET^
  2026			031647			%X=.				;DEFINE %X TO SAVE
  2027	031647	201 00 0 00 031647 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2028	031650	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2029	031651				..0010:	CLRBTH^
  2030	031651	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2031	031652	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2032	031653	7 004 20 0 00 004100 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2033						WATINT^
  2034	031654	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2035	031655	367 13 0 00 031655 		SOJG	13,.			;AND WAIT^
  2036	031656	7 004 30 0 00 040000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2037						STOP^
  2038	031657	254 04 0 00 031660 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2039	031660	254 00 0 00 031661 		JRST	.+1			;WITH JRST BACK^
  2040						TGET^
  2041	031661	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2042	031662	302 00 0 00 031647 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2043						STOP2^^
  2044	031663	254 04 0 00 031664 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2045	031664	254 00 0 00 031665 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2046					^
  2047			020000			X=X_-1
  2048			000040			Y=Y_-1
  2049
  2050
  2051						PIYES	Y,X^
  2052
  2053					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2054					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2055					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2056
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 9-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0063

  2057						TSET^
  2058			031665			%X=.				;DEFINE %X TO SAVE
  2059	031665	201 00 0 00 031665 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2060	031666	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2061	031667				..0011:	CLRBTH^
  2062	031667	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2063	031670	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2064	031671	7 004 20 0 00 004040 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2065						WATINT^
  2066	031672	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2067	031673	367 13 0 00 031673 		SOJG	13,.			;AND WAIT^
  2068	031674	7 004 30 0 00 020000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2069						STOP^
  2070	031675	254 04 0 00 031676 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2071	031676	254 00 0 00 031677 		JRST	.+1			;WITH JRST BACK^
  2072						TGET^
  2073	031677	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2074	031700	302 00 0 00 031665 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2075						STOP2^^
  2076	031701	254 04 0 00 031702 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2077	031702	254 00 0 00 031703 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2078					^
  2079			010000			X=X_-1
  2080			000020			Y=Y_-1
  2081
  2082
  2083						PIYES	Y,X^
  2084
  2085					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2086					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2087					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2088
  2089						TSET^
  2090			031703			%X=.				;DEFINE %X TO SAVE
  2091	031703	201 00 0 00 031703 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2092	031704	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2093	031705				..0012:	CLRBTH^
  2094	031705	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2095	031706	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2096	031707	7 004 20 0 00 004020 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2097						WATINT^
  2098	031710	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2099	031711	367 13 0 00 031711 		SOJG	13,.			;AND WAIT^
  2100	031712	7 004 30 0 00 010000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2101						STOP^
  2102	031713	254 04 0 00 031714 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2103	031714	254 00 0 00 031715 		JRST	.+1			;WITH JRST BACK^
  2104						TGET^
  2105	031715	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2106	031716	302 00 0 00 031703 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2107						STOP2^^
  2108	031717	254 04 0 00 031720 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2109	031720	254 00 0 00 031721 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2110					^
  2111			004000			X=X_-1
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 9-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0064

  2112			000010			Y=Y_-1
  2113
  2114
  2115						PIYES	Y,X^
  2116
  2117					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2118					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2119					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2120
  2121						TSET^
  2122			031721			%X=.				;DEFINE %X TO SAVE
  2123	031721	201 00 0 00 031721 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2124	031722	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2125	031723				..0013:	CLRBTH^
  2126	031723	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2127	031724	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2128	031725	7 004 20 0 00 004010 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2129						WATINT^
  2130	031726	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2131	031727	367 13 0 00 031727 		SOJG	13,.			;AND WAIT^
  2132	031730	7 004 30 0 00 004000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2133						STOP^
  2134	031731	254 04 0 00 031732 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2135	031732	254 00 0 00 031733 		JRST	.+1			;WITH JRST BACK^
  2136						TGET^
  2137	031733	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2138	031734	302 00 0 00 031721 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2139						STOP2^^
  2140	031735	254 04 0 00 031736 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2141	031736	254 00 0 00 031737 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2142					^
  2143			002000			X=X_-1
  2144			000004			Y=Y_-1
  2145
  2146
  2147						PIYES	Y,X^
  2148
  2149					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2150					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2151					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2152
  2153						TSET^
  2154			031737			%X=.				;DEFINE %X TO SAVE
  2155	031737	201 00 0 00 031737 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2156	031740	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2157	031741				..0014:	CLRBTH^
  2158	031741	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2159	031742	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2160	031743	7 004 20 0 00 004004 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2161						WATINT^
  2162	031744	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2163	031745	367 13 0 00 031745 		SOJG	13,.			;AND WAIT^
  2164	031746	7 004 30 0 00 002000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2165						STOP^
  2166	031747	254 04 0 00 031750 		HALT	.+1			;INSTRUCTION FAILED REPLACE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 9-3
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0065

  2167	031750	254 00 0 00 031751 		JRST	.+1			;WITH JRST BACK^
  2168						TGET^
  2169	031751	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2170	031752	302 00 0 00 031737 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2171						STOP2^^
  2172	031753	254 04 0 00 031754 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2173	031754	254 00 0 00 031755 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2174					^
  2175			001000			X=X_-1
  2176			000002			Y=Y_-1
  2177
  2178
  2179						PIYES	Y,X^
  2180
  2181					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2182					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2183					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2184
  2185						TSET^
  2186			031755			%X=.				;DEFINE %X TO SAVE
  2187	031755	201 00 0 00 031755 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2188	031756	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2189	031757				..0015:	CLRBTH^
  2190	031757	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2191	031760	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2192	031761	7 004 20 0 00 004002 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2193						WATINT^
  2194	031762	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2195	031763	367 13 0 00 031763 		SOJG	13,.			;AND WAIT^
  2196	031764	7 004 30 0 00 001000 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2197						STOP^
  2198	031765	254 04 0 00 031766 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2199	031766	254 00 0 00 031767 		JRST	.+1			;WITH JRST BACK^
  2200						TGET^
  2201	031767	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2202	031770	302 00 0 00 031755 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2203						STOP2^^
  2204	031771	254 04 0 00 031772 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2205	031772	254 00 0 00 031773 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2206					^
  2207			000400			X=X_-1
  2208			000001			Y=Y_-1
  2209
  2210
  2211						PIYES	Y,X^
  2212
  2213					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  2214					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  2215					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  2216
  2217						TSET^
  2218			031773			%X=.				;DEFINE %X TO SAVE
  2219	031773	201 00 0 00 031773 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2220	031774	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2221	031775				..0016:	CLRBTH^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 9-4
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0066

  2222	031775	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2223	031776	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2224	031777	7 004 20 0 00 004001 		CONO	PI,REQSET+Y		;SET CHANNEL REQUEST BUT NOT ACTIVE
  2225						WATINT^
  2226	032000	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2227	032001	367 13 0 00 032001 		SOJG	13,.			;AND WAIT^
  2228	032002	7 004 30 0 00 000400 		CONSZ	PI,X			;CHECK WHY INT. IN PROGRESS IS SET.
  2229						STOP^
  2230	032003	254 04 0 00 032004 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2231	032004	254 00 0 00 032005 		JRST	.+1			;WITH JRST BACK^
  2232						TGET^
  2233	032005	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2234	032006	302 00 0 00 031773 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2235						STOP2^^
  2236	032007	254 04 0 00 032010 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2237	032010	254 00 0 00 032011 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2238					^
  2239			000200			X=X_-1
  2240			000000			Y=Y_-1
  2241
  2242	032011	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 10
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0067

  2243						BLURB^
  2244					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  2245					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  2246					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  2247					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  2248					^
  2249
  2250	032012	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  2251			000100			X=100
  2252	032013				PIOT02:
  2253						REPEAT	7,<
  2254						PIONOF	X
  2255						X=X_-1
  2256					>
  2257
  2258						PIONOF	X^
  2259
  2260					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2261					;AND THAT AN INTERUPT DOES NOT OCCUR
  2262
  2263					BLURB1^
  2264					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2265					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2266					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2267					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2268					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
  2269					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2270					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2271					^
  2272
  2273						TSET^
  2274			032013			%X=.				;DEFINE %X TO SAVE
  2275	032013	201 00 0 00 032013 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2276	032014	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2277	032015				..0017:	CLRBTH^
  2278	032015	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2279	032016	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2280	032017	7 004 20 0 00 004100 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2281	032020	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
  2282	032021	7 004 20 0 00 010100 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2283						WATINT^
  2284	032022	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2285	032023	367 13 0 00 032023 		SOJG	13,.			;AND WAIT^
  2286	032024	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2287						STOP^
  2288	032025	254 04 0 00 032026 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2289	032026	254 00 0 00 032027 		JRST	.+1			;WITH JRST BACK^
  2290						TGET^
  2291	032027	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2292	032030	302 00 0 00 032013 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2293						STOP2^^
  2294	032031	254 04 0 00 032032 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2295	032032	254 00 0 00 032033 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2296					^
  2297			000040			X=X_-1
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 10-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0068

  2298
  2299
  2300						PIONOF	X^
  2301
  2302					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2303					;AND THAT AN INTERUPT DOES NOT OCCUR
  2304
  2305					BLURB1^
  2306					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2307					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2308					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2309					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2310					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
  2311					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2312					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2313					^
  2314
  2315						TSET^
  2316			032033			%X=.				;DEFINE %X TO SAVE
  2317	032033	201 00 0 00 032033 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2318	032034	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2319	032035				..0020:	CLRBTH^
  2320	032035	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2321	032036	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2322	032037	7 004 20 0 00 004040 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2323	032040	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
  2324	032041	7 004 20 0 00 010040 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2325						WATINT^
  2326	032042	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2327	032043	367 13 0 00 032043 		SOJG	13,.			;AND WAIT^
  2328	032044	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2329						STOP^
  2330	032045	254 04 0 00 032046 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2331	032046	254 00 0 00 032047 		JRST	.+1			;WITH JRST BACK^
  2332						TGET^
  2333	032047	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2334	032050	302 00 0 00 032033 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2335						STOP2^^
  2336	032051	254 04 0 00 032052 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2337	032052	254 00 0 00 032053 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2338					^
  2339			000020			X=X_-1
  2340
  2341
  2342						PIONOF	X^
  2343
  2344					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2345					;AND THAT AN INTERUPT DOES NOT OCCUR
  2346
  2347					BLURB1^
  2348					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2349					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2350					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2351					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2352					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 10-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0069

  2353					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2354					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2355					^
  2356
  2357						TSET^
  2358			032053			%X=.				;DEFINE %X TO SAVE
  2359	032053	201 00 0 00 032053 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2360	032054	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2361	032055				..0021:	CLRBTH^
  2362	032055	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2363	032056	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2364	032057	7 004 20 0 00 004020 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2365	032060	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
  2366	032061	7 004 20 0 00 010020 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2367						WATINT^
  2368	032062	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2369	032063	367 13 0 00 032063 		SOJG	13,.			;AND WAIT^
  2370	032064	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2371						STOP^
  2372	032065	254 04 0 00 032066 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2373	032066	254 00 0 00 032067 		JRST	.+1			;WITH JRST BACK^
  2374						TGET^
  2375	032067	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2376	032070	302 00 0 00 032053 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2377						STOP2^^
  2378	032071	254 04 0 00 032072 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2379	032072	254 00 0 00 032073 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2380					^
  2381			000010			X=X_-1
  2382
  2383
  2384						PIONOF	X^
  2385
  2386					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2387					;AND THAT AN INTERUPT DOES NOT OCCUR
  2388
  2389					BLURB1^
  2390					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2391					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2392					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2393					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2394					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
  2395					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2396					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2397					^
  2398
  2399						TSET^
  2400			032073			%X=.				;DEFINE %X TO SAVE
  2401	032073	201 00 0 00 032073 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2402	032074	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2403	032075				..0022:	CLRBTH^
  2404	032075	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2405	032076	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2406	032077	7 004 20 0 00 004010 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2407	032100	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 10-3
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0070

  2408	032101	7 004 20 0 00 010010 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2409						WATINT^
  2410	032102	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2411	032103	367 13 0 00 032103 		SOJG	13,.			;AND WAIT^
  2412	032104	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2413						STOP^
  2414	032105	254 04 0 00 032106 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2415	032106	254 00 0 00 032107 		JRST	.+1			;WITH JRST BACK^
  2416						TGET^
  2417	032107	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2418	032110	302 00 0 00 032073 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2419						STOP2^^
  2420	032111	254 04 0 00 032112 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2421	032112	254 00 0 00 032113 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2422					^
  2423			000004			X=X_-1
  2424
  2425
  2426						PIONOF	X^
  2427
  2428					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2429					;AND THAT AN INTERUPT DOES NOT OCCUR
  2430
  2431					BLURB1^
  2432					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2433					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2434					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2435					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2436					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
  2437					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2438					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2439					^
  2440
  2441						TSET^
  2442			032113			%X=.				;DEFINE %X TO SAVE
  2443	032113	201 00 0 00 032113 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2444	032114	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2445	032115				..0023:	CLRBTH^
  2446	032115	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2447	032116	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2448	032117	7 004 20 0 00 004004 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2449	032120	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
  2450	032121	7 004 20 0 00 010004 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2451						WATINT^
  2452	032122	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2453	032123	367 13 0 00 032123 		SOJG	13,.			;AND WAIT^
  2454	032124	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2455						STOP^
  2456	032125	254 04 0 00 032126 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2457	032126	254 00 0 00 032127 		JRST	.+1			;WITH JRST BACK^
  2458						TGET^
  2459	032127	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2460	032130	302 00 0 00 032113 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2461						STOP2^^
  2462	032131	254 04 0 00 032132 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 10-4
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0071

  2463	032132	254 00 0 00 032133 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2464					^
  2465			000002			X=X_-1
  2466
  2467
  2468						PIONOF	X^
  2469
  2470					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2471					;AND THAT AN INTERUPT DOES NOT OCCUR
  2472
  2473					BLURB1^
  2474					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2475					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2476					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2477					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2478					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
  2479					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2480					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2481					^
  2482
  2483						TSET^
  2484			032133			%X=.				;DEFINE %X TO SAVE
  2485	032133	201 00 0 00 032133 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2486	032134	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2487	032135				..0024:	CLRBTH^
  2488	032135	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2489	032136	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2490	032137	7 004 20 0 00 004002 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2491	032140	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
  2492	032141	7 004 20 0 00 010002 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2493						WATINT^
  2494	032142	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2495	032143	367 13 0 00 032143 		SOJG	13,.			;AND WAIT^
  2496	032144	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2497						STOP^
  2498	032145	254 04 0 00 032146 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2499	032146	254 00 0 00 032147 		JRST	.+1			;WITH JRST BACK^
  2500						TGET^
  2501	032147	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2502	032150	302 00 0 00 032133 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2503						STOP2^^
  2504	032151	254 04 0 00 032152 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2505	032152	254 00 0 00 032153 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2506					^
  2507			000001			X=X_-1
  2508
  2509
  2510						PIONOF	X^
  2511
  2512					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2513					;AND THAT AN INTERUPT DOES NOT OCCUR
  2514
  2515					BLURB1^
  2516					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH EXECUTES A HALT
  2517					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 10-5
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0072

  2518					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2519					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2520					;ALWAYS HAVE A JSP TO A HALT IN CASE WE ARE TESTING FOR REAL
  2521					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2522					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2523					^
  2524
  2525						TSET^
  2526			032153			%X=.				;DEFINE %X TO SAVE
  2527	032153	201 00 0 00 032153 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2528	032154	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2529	032155				..0025:	CLRBTH^
  2530	032155	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2531	032156	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2532	032157	7 004 20 0 00 004001 		CONO	PI,REQSET+X		;SET REQ. BUT NOT ACTIVE
  2533	032160	400 00 0 00 000000 		SETZ				;THEN CLEAR REQUEST THEN SET ACTIVE
  2534	032161	7 004 20 0 00 010001 		CONO	PI,PICLR+X		;PI RESET FAILED TO CLEAR PIR FLAG.
  2535						WATINT^
  2536	032162	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  2537	032163	367 13 0 00 032163 		SOJG	13,.			;AND WAIT^
  2538	032164	332 00 0 00 000000 		SKIPE				;MOVEI EXEC OUT OF INTERRUPT CH.?
  2539						STOP^
  2540	032165	254 04 0 00 032166 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2541	032166	254 00 0 00 032167 		JRST	.+1			;WITH JRST BACK^
  2542						TGET^
  2543	032167	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2544	032170	302 00 0 00 032153 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2545						STOP2^^
  2546	032171	254 04 0 00 032172 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2547	032172	254 00 0 00 032173 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2548					^
  2549			000000			X=X_-1
  2550
  2551	032173	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0073

  2552						BLURB^
  2553					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  2554					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  2555					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  2556					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  2557					^
  2558					;TEST THE SETTING AND CLEARING OF THE PI FLOPS WITHOUT CREATING INTERRUPTS
  2559					;THE TEST WILL HALT IF AN INTERRUPT OCCURS AND THE CHANNEL NUMBER OF THE
  2560					;INTERRUPT WILL BE STORED IN AC0
  2561
  2562
  2563	032174	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  2564
  2565	032175				BIGPI1:	PITEST	100^
  2566
  2567					;TEST SETTING OF CHANNEL FLOP
  2568
  2569						TSET^
  2570			032175			%X=.				;DEFINE %X TO SAVE
  2571	032175	201 00 0 00 032175 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2572	032176	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2573	032177				..0026:	CLRBTH^
  2574	032177	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2575	032200	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2576	032201	7 004 20 0 00 002100 		CONO	PI,CHNON+100		;PION FAILED TO SET
  2577	032202	7 004 34 0 00 000100 		CONSO	PI,100
  2578						STOP^
  2579	032203	254 04 0 00 032204 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2580	032204	254 00 0 00 032205 		JRST	.+1			;WITH JRST BACK^
  2581						TBOTH^
  2582						TGET^
  2583	032205	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2584	032206	302 00 0 00 032175 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2585						STOP2^^
  2586	032207	254 04 0 00 032210 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2587	032210	254 00 0 00 032211 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2588
  2589						TSET^^
  2590			032211			%X=.				;DEFINE %X TO SAVE
  2591	032211	201 00 0 00 032211 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2592	032212	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2593						CLRBTH^
  2594	032213	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2595	032214	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2596					;TEST CLEARING OF CHANNEL FLOP
  2597	032215	7 004 20 0 00 002100 		CONO	PI,CHNON+100		;CHECK PIO CLR
  2598	032216	7 004 20 0 00 001100 		CONO	PI,CHNOFF+100		;TURN OFF CHANNELS
  2599	032217	7 004 30 0 00 000100 		CONSZ	PI,100			;CHECK WHY FLOP NOT CLEAR
  2600						STOP^
  2601	032220	254 04 0 00 032221 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2602	032221	254 00 0 00 032222 		JRST	.+1			;WITH JRST BACK^
  2603						TBOTH^
  2604						TGET^
  2605	032222	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2606	032223	302 00 0 00 032211 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0074

  2607						STOP2^^
  2608	032224	254 04 0 00 032225 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2609	032225	254 00 0 00 032226 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2610
  2611						TSET^^
  2612			032226			%X=.				;DEFINE %X TO SAVE
  2613	032226	201 00 0 00 032226 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2614	032227	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2615						CLRBTH^
  2616	032230	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2617	032231	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2618					;CHECK RESETING OF PI SYSTEM
  2619	032232	7 004 20 0 00 002100 		CONO	PI,CHNON+100		;CHECK THAT PI RESET CLEARS
  2620	032233	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  2621	032234	7 004 30 0 00 000100 		CONSZ	PI,100
  2622						STOP^
  2623	032235	254 04 0 00 032236 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2624	032236	254 00 0 00 032237 		JRST	.+1			;WITH JRST BACK^
  2625						TBOTH^
  2626						TGET^
  2627	032237	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2628	032240	302 00 0 00 032226 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2629						STOP2^^
  2630	032241	254 04 0 00 032242 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2631	032242	254 00 0 00 032243 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2632
  2633						TSET^^
  2634			032243			%X=.				;DEFINE %X TO SAVE
  2635	032243	201 00 0 00 032243 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2636	032244	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2637						CLRBTH^
  2638	032245	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2639	032246	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2640					;TEST THAT CONO ONLY SETS PION
  2641	032247	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  2642	032250	7 004 30 0 00 000100 		CONSZ	PI,100			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  2643						STOP^
  2644	032251	254 04 0 00 032252 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2645	032252	254 00 0 00 032253 		JRST	.+1			;WITH JRST BACK^
  2646						TBOTH^
  2647						TGET^
  2648	032253	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2649	032254	302 00 0 00 032243 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2650						STOP2^^
  2651	032255	254 04 0 00 032256 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2652	032256	254 00 0 00 032257 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2653
  2654						TSET^^
  2655			032257			%X=.				;DEFINE %X TO SAVE
  2656	032257	201 00 0 00 032257 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2657	032260	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2658						CLRBTH^
  2659	032261	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2660	032262	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2661					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0075

  2662	032263	7 004 20 0 00 002100 		CONO	PI,CHNON+100		;TEST PIO CLR
  2663	032264	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  2664	032265	7 004 34 0 00 000100 		CONSO	PI,100			;BE SET
  2665						STOP^
  2666	032266	254 04 0 00 032267 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2667	032267	254 00 0 00 032270 		JRST	.+1			;WITH JRST BACK^
  2668						TGET^
  2669	032270	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2670	032271	302 00 0 00 032257 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2671						STOP2^^
  2672	032272	254 04 0 00 032273 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2673	032273	254 00 0 00 032274 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2674					^
  2675
  2676	032274				BIGPI2:	PITEST	40^
  2677
  2678					;TEST SETTING OF CHANNEL FLOP
  2679
  2680						TSET^
  2681			032274			%X=.				;DEFINE %X TO SAVE
  2682	032274	201 00 0 00 032274 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2683	032275	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2684	032276				..0027:	CLRBTH^
  2685	032276	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2686	032277	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2687	032300	7 004 20 0 00 002040 		CONO	PI,CHNON+40		;PION FAILED TO SET
  2688	032301	7 004 34 0 00 000040 		CONSO	PI,40
  2689						STOP^
  2690	032302	254 04 0 00 032303 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2691	032303	254 00 0 00 032304 		JRST	.+1			;WITH JRST BACK^
  2692						TBOTH^
  2693						TGET^
  2694	032304	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2695	032305	302 00 0 00 032274 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2696						STOP2^^
  2697	032306	254 04 0 00 032307 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2698	032307	254 00 0 00 032310 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2699
  2700						TSET^^
  2701			032310			%X=.				;DEFINE %X TO SAVE
  2702	032310	201 00 0 00 032310 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2703	032311	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2704						CLRBTH^
  2705	032312	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2706	032313	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2707					;TEST CLEARING OF CHANNEL FLOP
  2708	032314	7 004 20 0 00 002040 		CONO	PI,CHNON+40		;CHECK PIO CLR
  2709	032315	7 004 20 0 00 001040 		CONO	PI,CHNOFF+40		;TURN OFF CHANNELS
  2710	032316	7 004 30 0 00 000040 		CONSZ	PI,40			;CHECK WHY FLOP NOT CLEAR
  2711						STOP^
  2712	032317	254 04 0 00 032320 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2713	032320	254 00 0 00 032321 		JRST	.+1			;WITH JRST BACK^
  2714						TBOTH^
  2715						TGET^
  2716	032321	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-3
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0076

  2717	032322	302 00 0 00 032310 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2718						STOP2^^
  2719	032323	254 04 0 00 032324 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2720	032324	254 00 0 00 032325 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2721
  2722						TSET^^
  2723			032325			%X=.				;DEFINE %X TO SAVE
  2724	032325	201 00 0 00 032325 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2725	032326	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2726						CLRBTH^
  2727	032327	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2728	032330	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2729					;CHECK RESETING OF PI SYSTEM
  2730	032331	7 004 20 0 00 002040 		CONO	PI,CHNON+40		;CHECK THAT PI RESET CLEARS
  2731	032332	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  2732	032333	7 004 30 0 00 000040 		CONSZ	PI,40
  2733						STOP^
  2734	032334	254 04 0 00 032335 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2735	032335	254 00 0 00 032336 		JRST	.+1			;WITH JRST BACK^
  2736						TBOTH^
  2737						TGET^
  2738	032336	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2739	032337	302 00 0 00 032325 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2740						STOP2^^
  2741	032340	254 04 0 00 032341 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2742	032341	254 00 0 00 032342 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2743
  2744						TSET^^
  2745			032342			%X=.				;DEFINE %X TO SAVE
  2746	032342	201 00 0 00 032342 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2747	032343	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2748						CLRBTH^
  2749	032344	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2750	032345	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2751					;TEST THAT CONO ONLY SETS PION
  2752	032346	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  2753	032347	7 004 30 0 00 000040 		CONSZ	PI,40			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  2754						STOP^
  2755	032350	254 04 0 00 032351 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2756	032351	254 00 0 00 032352 		JRST	.+1			;WITH JRST BACK^
  2757						TBOTH^
  2758						TGET^
  2759	032352	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2760	032353	302 00 0 00 032342 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2761						STOP2^^
  2762	032354	254 04 0 00 032355 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2763	032355	254 00 0 00 032356 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2764
  2765						TSET^^
  2766			032356			%X=.				;DEFINE %X TO SAVE
  2767	032356	201 00 0 00 032356 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2768	032357	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2769						CLRBTH^
  2770	032360	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2771	032361	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-4
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0077

  2772					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2773	032362	7 004 20 0 00 002040 		CONO	PI,CHNON+40		;TEST PIO CLR
  2774	032363	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  2775	032364	7 004 34 0 00 000040 		CONSO	PI,40			;BE SET
  2776						STOP^
  2777	032365	254 04 0 00 032366 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2778	032366	254 00 0 00 032367 		JRST	.+1			;WITH JRST BACK^
  2779						TGET^
  2780	032367	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2781	032370	302 00 0 00 032356 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2782						STOP2^^
  2783	032371	254 04 0 00 032372 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2784	032372	254 00 0 00 032373 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2785					^
  2786
  2787	032373				BIGPI3:	PITEST	20^
  2788
  2789					;TEST SETTING OF CHANNEL FLOP
  2790
  2791						TSET^
  2792			032373			%X=.				;DEFINE %X TO SAVE
  2793	032373	201 00 0 00 032373 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2794	032374	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2795	032375				..0030:	CLRBTH^
  2796	032375	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2797	032376	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2798	032377	7 004 20 0 00 002020 		CONO	PI,CHNON+20		;PION FAILED TO SET
  2799	032400	7 004 34 0 00 000020 		CONSO	PI,20
  2800						STOP^
  2801	032401	254 04 0 00 032402 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2802	032402	254 00 0 00 032403 		JRST	.+1			;WITH JRST BACK^
  2803						TBOTH^
  2804						TGET^
  2805	032403	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2806	032404	302 00 0 00 032373 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2807						STOP2^^
  2808	032405	254 04 0 00 032406 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2809	032406	254 00 0 00 032407 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2810
  2811						TSET^^
  2812			032407			%X=.				;DEFINE %X TO SAVE
  2813	032407	201 00 0 00 032407 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2814	032410	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2815						CLRBTH^
  2816	032411	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2817	032412	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2818					;TEST CLEARING OF CHANNEL FLOP
  2819	032413	7 004 20 0 00 002020 		CONO	PI,CHNON+20		;CHECK PIO CLR
  2820	032414	7 004 20 0 00 001020 		CONO	PI,CHNOFF+20		;TURN OFF CHANNELS
  2821	032415	7 004 30 0 00 000020 		CONSZ	PI,20			;CHECK WHY FLOP NOT CLEAR
  2822						STOP^
  2823	032416	254 04 0 00 032417 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2824	032417	254 00 0 00 032420 		JRST	.+1			;WITH JRST BACK^
  2825						TBOTH^
  2826						TGET^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-5
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0078

  2827	032420	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2828	032421	302 00 0 00 032407 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2829						STOP2^^
  2830	032422	254 04 0 00 032423 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2831	032423	254 00 0 00 032424 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2832
  2833						TSET^^
  2834			032424			%X=.				;DEFINE %X TO SAVE
  2835	032424	201 00 0 00 032424 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2836	032425	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2837						CLRBTH^
  2838	032426	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2839	032427	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2840					;CHECK RESETING OF PI SYSTEM
  2841	032430	7 004 20 0 00 002020 		CONO	PI,CHNON+20		;CHECK THAT PI RESET CLEARS
  2842	032431	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  2843	032432	7 004 30 0 00 000020 		CONSZ	PI,20
  2844						STOP^
  2845	032433	254 04 0 00 032434 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2846	032434	254 00 0 00 032435 		JRST	.+1			;WITH JRST BACK^
  2847						TBOTH^
  2848						TGET^
  2849	032435	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2850	032436	302 00 0 00 032424 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2851						STOP2^^
  2852	032437	254 04 0 00 032440 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2853	032440	254 00 0 00 032441 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2854
  2855						TSET^^
  2856			032441			%X=.				;DEFINE %X TO SAVE
  2857	032441	201 00 0 00 032441 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2858	032442	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2859						CLRBTH^
  2860	032443	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2861	032444	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2862					;TEST THAT CONO ONLY SETS PION
  2863	032445	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  2864	032446	7 004 30 0 00 000020 		CONSZ	PI,20			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  2865						STOP^
  2866	032447	254 04 0 00 032450 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2867	032450	254 00 0 00 032451 		JRST	.+1			;WITH JRST BACK^
  2868						TBOTH^
  2869						TGET^
  2870	032451	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2871	032452	302 00 0 00 032441 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2872						STOP2^^
  2873	032453	254 04 0 00 032454 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2874	032454	254 00 0 00 032455 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2875
  2876						TSET^^
  2877			032455			%X=.				;DEFINE %X TO SAVE
  2878	032455	201 00 0 00 032455 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2879	032456	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2880						CLRBTH^
  2881	032457	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-6
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0079

  2882	032460	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2883					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2884	032461	7 004 20 0 00 002020 		CONO	PI,CHNON+20		;TEST PIO CLR
  2885	032462	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  2886	032463	7 004 34 0 00 000020 		CONSO	PI,20			;BE SET
  2887						STOP^
  2888	032464	254 04 0 00 032465 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2889	032465	254 00 0 00 032466 		JRST	.+1			;WITH JRST BACK^
  2890						TGET^
  2891	032466	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2892	032467	302 00 0 00 032455 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2893						STOP2^^
  2894	032470	254 04 0 00 032471 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2895	032471	254 00 0 00 032472 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2896					^
  2897
  2898	032472				BIGPI4:	PITEST	10^
  2899
  2900					;TEST SETTING OF CHANNEL FLOP
  2901
  2902						TSET^
  2903			032472			%X=.				;DEFINE %X TO SAVE
  2904	032472	201 00 0 00 032472 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2905	032473	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2906	032474				..0031:	CLRBTH^
  2907	032474	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2908	032475	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2909	032476	7 004 20 0 00 002010 		CONO	PI,CHNON+10		;PION FAILED TO SET
  2910	032477	7 004 34 0 00 000010 		CONSO	PI,10
  2911						STOP^
  2912	032500	254 04 0 00 032501 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2913	032501	254 00 0 00 032502 		JRST	.+1			;WITH JRST BACK^
  2914						TBOTH^
  2915						TGET^
  2916	032502	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2917	032503	302 00 0 00 032472 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2918						STOP2^^
  2919	032504	254 04 0 00 032505 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2920	032505	254 00 0 00 032506 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2921
  2922						TSET^^
  2923			032506			%X=.				;DEFINE %X TO SAVE
  2924	032506	201 00 0 00 032506 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2925	032507	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2926						CLRBTH^
  2927	032510	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2928	032511	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2929					;TEST CLEARING OF CHANNEL FLOP
  2930	032512	7 004 20 0 00 002010 		CONO	PI,CHNON+10		;CHECK PIO CLR
  2931	032513	7 004 20 0 00 001010 		CONO	PI,CHNOFF+10		;TURN OFF CHANNELS
  2932	032514	7 004 30 0 00 000010 		CONSZ	PI,10			;CHECK WHY FLOP NOT CLEAR
  2933						STOP^
  2934	032515	254 04 0 00 032516 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2935	032516	254 00 0 00 032517 		JRST	.+1			;WITH JRST BACK^
  2936						TBOTH^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-7
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0080

  2937						TGET^
  2938	032517	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2939	032520	302 00 0 00 032506 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2940						STOP2^^
  2941	032521	254 04 0 00 032522 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2942	032522	254 00 0 00 032523 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2943
  2944						TSET^^
  2945			032523			%X=.				;DEFINE %X TO SAVE
  2946	032523	201 00 0 00 032523 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2947	032524	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2948						CLRBTH^
  2949	032525	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2950	032526	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2951					;CHECK RESETING OF PI SYSTEM
  2952	032527	7 004 20 0 00 002010 		CONO	PI,CHNON+10		;CHECK THAT PI RESET CLEARS
  2953	032530	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  2954	032531	7 004 30 0 00 000010 		CONSZ	PI,10
  2955						STOP^
  2956	032532	254 04 0 00 032533 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2957	032533	254 00 0 00 032534 		JRST	.+1			;WITH JRST BACK^
  2958						TBOTH^
  2959						TGET^
  2960	032534	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2961	032535	302 00 0 00 032523 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2962						STOP2^^
  2963	032536	254 04 0 00 032537 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2964	032537	254 00 0 00 032540 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2965
  2966						TSET^^
  2967			032540			%X=.				;DEFINE %X TO SAVE
  2968	032540	201 00 0 00 032540 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2969	032541	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2970						CLRBTH^
  2971	032542	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2972	032543	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2973					;TEST THAT CONO ONLY SETS PION
  2974	032544	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  2975	032545	7 004 30 0 00 000010 		CONSZ	PI,10			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  2976						STOP^
  2977	032546	254 04 0 00 032547 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  2978	032547	254 00 0 00 032550 		JRST	.+1			;WITH JRST BACK^
  2979						TBOTH^
  2980						TGET^
  2981	032550	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  2982	032551	302 00 0 00 032540 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  2983						STOP2^^
  2984	032552	254 04 0 00 032553 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  2985	032553	254 00 0 00 032554 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  2986
  2987						TSET^^
  2988			032554			%X=.				;DEFINE %X TO SAVE
  2989	032554	201 00 0 00 032554 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  2990	032555	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  2991						CLRBTH^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-8
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0081

  2992	032556	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  2993	032557	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  2994					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2995	032560	7 004 20 0 00 002010 		CONO	PI,CHNON+10		;TEST PIO CLR
  2996	032561	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  2997	032562	7 004 34 0 00 000010 		CONSO	PI,10			;BE SET
  2998						STOP^
  2999	032563	254 04 0 00 032564 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3000	032564	254 00 0 00 032565 		JRST	.+1			;WITH JRST BACK^
  3001						TGET^
  3002	032565	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3003	032566	302 00 0 00 032554 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3004						STOP2^^
  3005	032567	254 04 0 00 032570 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3006	032570	254 00 0 00 032571 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3007					^
  3008
  3009	032571				BIGPI5:	PITEST	4^
  3010
  3011					;TEST SETTING OF CHANNEL FLOP
  3012
  3013						TSET^
  3014			032571			%X=.				;DEFINE %X TO SAVE
  3015	032571	201 00 0 00 032571 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3016	032572	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3017	032573				..0032:	CLRBTH^
  3018	032573	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3019	032574	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3020	032575	7 004 20 0 00 002004 		CONO	PI,CHNON+4		;PION FAILED TO SET
  3021	032576	7 004 34 0 00 000004 		CONSO	PI,4
  3022						STOP^
  3023	032577	254 04 0 00 032600 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3024	032600	254 00 0 00 032601 		JRST	.+1			;WITH JRST BACK^
  3025						TBOTH^
  3026						TGET^
  3027	032601	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3028	032602	302 00 0 00 032571 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3029						STOP2^^
  3030	032603	254 04 0 00 032604 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3031	032604	254 00 0 00 032605 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3032
  3033						TSET^^
  3034			032605			%X=.				;DEFINE %X TO SAVE
  3035	032605	201 00 0 00 032605 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3036	032606	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3037						CLRBTH^
  3038	032607	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3039	032610	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3040					;TEST CLEARING OF CHANNEL FLOP
  3041	032611	7 004 20 0 00 002004 		CONO	PI,CHNON+4		;CHECK PIO CLR
  3042	032612	7 004 20 0 00 001004 		CONO	PI,CHNOFF+4		;TURN OFF CHANNELS
  3043	032613	7 004 30 0 00 000004 		CONSZ	PI,4			;CHECK WHY FLOP NOT CLEAR
  3044						STOP^
  3045	032614	254 04 0 00 032615 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3046	032615	254 00 0 00 032616 		JRST	.+1			;WITH JRST BACK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-9
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0082

  3047						TBOTH^
  3048						TGET^
  3049	032616	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3050	032617	302 00 0 00 032605 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3051						STOP2^^
  3052	032620	254 04 0 00 032621 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3053	032621	254 00 0 00 032622 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3054
  3055						TSET^^
  3056			032622			%X=.				;DEFINE %X TO SAVE
  3057	032622	201 00 0 00 032622 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3058	032623	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3059						CLRBTH^
  3060	032624	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3061	032625	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3062					;CHECK RESETING OF PI SYSTEM
  3063	032626	7 004 20 0 00 002004 		CONO	PI,CHNON+4		;CHECK THAT PI RESET CLEARS
  3064	032627	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  3065	032630	7 004 30 0 00 000004 		CONSZ	PI,4
  3066						STOP^
  3067	032631	254 04 0 00 032632 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3068	032632	254 00 0 00 032633 		JRST	.+1			;WITH JRST BACK^
  3069						TBOTH^
  3070						TGET^
  3071	032633	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3072	032634	302 00 0 00 032622 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3073						STOP2^^
  3074	032635	254 04 0 00 032636 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3075	032636	254 00 0 00 032637 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3076
  3077						TSET^^
  3078			032637			%X=.				;DEFINE %X TO SAVE
  3079	032637	201 00 0 00 032637 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3080	032640	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3081						CLRBTH^
  3082	032641	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3083	032642	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3084					;TEST THAT CONO ONLY SETS PION
  3085	032643	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  3086	032644	7 004 30 0 00 000004 		CONSZ	PI,4			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  3087						STOP^
  3088	032645	254 04 0 00 032646 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3089	032646	254 00 0 00 032647 		JRST	.+1			;WITH JRST BACK^
  3090						TBOTH^
  3091						TGET^
  3092	032647	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3093	032650	302 00 0 00 032637 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3094						STOP2^^
  3095	032651	254 04 0 00 032652 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3096	032652	254 00 0 00 032653 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3097
  3098						TSET^^
  3099			032653			%X=.				;DEFINE %X TO SAVE
  3100	032653	201 00 0 00 032653 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3101	032654	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-10
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0083

  3102						CLRBTH^
  3103	032655	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3104	032656	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3105					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3106	032657	7 004 20 0 00 002004 		CONO	PI,CHNON+4		;TEST PIO CLR
  3107	032660	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  3108	032661	7 004 34 0 00 000004 		CONSO	PI,4			;BE SET
  3109						STOP^
  3110	032662	254 04 0 00 032663 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3111	032663	254 00 0 00 032664 		JRST	.+1			;WITH JRST BACK^
  3112						TGET^
  3113	032664	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3114	032665	302 00 0 00 032653 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3115						STOP2^^
  3116	032666	254 04 0 00 032667 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3117	032667	254 00 0 00 032670 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3118					^
  3119
  3120	032670				BIGPI6:	PITEST	2^
  3121
  3122					;TEST SETTING OF CHANNEL FLOP
  3123
  3124						TSET^
  3125			032670			%X=.				;DEFINE %X TO SAVE
  3126	032670	201 00 0 00 032670 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3127	032671	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3128	032672				..0033:	CLRBTH^
  3129	032672	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3130	032673	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3131	032674	7 004 20 0 00 002002 		CONO	PI,CHNON+2		;PION FAILED TO SET
  3132	032675	7 004 34 0 00 000002 		CONSO	PI,2
  3133						STOP^
  3134	032676	254 04 0 00 032677 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3135	032677	254 00 0 00 032700 		JRST	.+1			;WITH JRST BACK^
  3136						TBOTH^
  3137						TGET^
  3138	032700	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3139	032701	302 00 0 00 032670 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3140						STOP2^^
  3141	032702	254 04 0 00 032703 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3142	032703	254 00 0 00 032704 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3143
  3144						TSET^^
  3145			032704			%X=.				;DEFINE %X TO SAVE
  3146	032704	201 00 0 00 032704 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3147	032705	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3148						CLRBTH^
  3149	032706	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3150	032707	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3151					;TEST CLEARING OF CHANNEL FLOP
  3152	032710	7 004 20 0 00 002002 		CONO	PI,CHNON+2		;CHECK PIO CLR
  3153	032711	7 004 20 0 00 001002 		CONO	PI,CHNOFF+2		;TURN OFF CHANNELS
  3154	032712	7 004 30 0 00 000002 		CONSZ	PI,2			;CHECK WHY FLOP NOT CLEAR
  3155						STOP^
  3156	032713	254 04 0 00 032714 		HALT	.+1			;INSTRUCTION FAILED REPLACE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-11
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0084

  3157	032714	254 00 0 00 032715 		JRST	.+1			;WITH JRST BACK^
  3158						TBOTH^
  3159						TGET^
  3160	032715	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3161	032716	302 00 0 00 032704 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3162						STOP2^^
  3163	032717	254 04 0 00 032720 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3164	032720	254 00 0 00 032721 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3165
  3166						TSET^^
  3167			032721			%X=.				;DEFINE %X TO SAVE
  3168	032721	201 00 0 00 032721 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3169	032722	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3170						CLRBTH^
  3171	032723	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3172	032724	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3173					;CHECK RESETING OF PI SYSTEM
  3174	032725	7 004 20 0 00 002002 		CONO	PI,CHNON+2		;CHECK THAT PI RESET CLEARS
  3175	032726	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  3176	032727	7 004 30 0 00 000002 		CONSZ	PI,2
  3177						STOP^
  3178	032730	254 04 0 00 032731 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3179	032731	254 00 0 00 032732 		JRST	.+1			;WITH JRST BACK^
  3180						TBOTH^
  3181						TGET^
  3182	032732	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3183	032733	302 00 0 00 032721 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3184						STOP2^^
  3185	032734	254 04 0 00 032735 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3186	032735	254 00 0 00 032736 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3187
  3188						TSET^^
  3189			032736			%X=.				;DEFINE %X TO SAVE
  3190	032736	201 00 0 00 032736 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3191	032737	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3192						CLRBTH^
  3193	032740	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3194	032741	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3195					;TEST THAT CONO ONLY SETS PION
  3196	032742	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  3197	032743	7 004 30 0 00 000002 		CONSZ	PI,2			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  3198						STOP^
  3199	032744	254 04 0 00 032745 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3200	032745	254 00 0 00 032746 		JRST	.+1			;WITH JRST BACK^
  3201						TBOTH^
  3202						TGET^
  3203	032746	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3204	032747	302 00 0 00 032736 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3205						STOP2^^
  3206	032750	254 04 0 00 032751 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3207	032751	254 00 0 00 032752 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3208
  3209						TSET^^
  3210			032752			%X=.				;DEFINE %X TO SAVE
  3211	032752	201 00 0 00 032752 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-12
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0085

  3212	032753	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3213						CLRBTH^
  3214	032754	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3215	032755	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3216					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3217	032756	7 004 20 0 00 002002 		CONO	PI,CHNON+2		;TEST PIO CLR
  3218	032757	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  3219	032760	7 004 34 0 00 000002 		CONSO	PI,2			;BE SET
  3220						STOP^
  3221	032761	254 04 0 00 032762 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3222	032762	254 00 0 00 032763 		JRST	.+1			;WITH JRST BACK^
  3223						TGET^
  3224	032763	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3225	032764	302 00 0 00 032752 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3226						STOP2^^
  3227	032765	254 04 0 00 032766 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3228	032766	254 00 0 00 032767 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3229					^
  3230
  3231	032767				BIGPI7:	PITEST	1^
  3232
  3233					;TEST SETTING OF CHANNEL FLOP
  3234
  3235						TSET^
  3236			032767			%X=.				;DEFINE %X TO SAVE
  3237	032767	201 00 0 00 032767 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3238	032770	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3239	032771				..0034:	CLRBTH^
  3240	032771	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3241	032772	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3242	032773	7 004 20 0 00 002001 		CONO	PI,CHNON+1		;PION FAILED TO SET
  3243	032774	7 004 34 0 00 000001 		CONSO	PI,1
  3244						STOP^
  3245	032775	254 04 0 00 032776 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3246	032776	254 00 0 00 032777 		JRST	.+1			;WITH JRST BACK^
  3247						TBOTH^
  3248						TGET^
  3249	032777	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3250	033000	302 00 0 00 032767 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3251						STOP2^^
  3252	033001	254 04 0 00 033002 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3253	033002	254 00 0 00 033003 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3254
  3255						TSET^^
  3256			033003			%X=.				;DEFINE %X TO SAVE
  3257	033003	201 00 0 00 033003 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3258	033004	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3259						CLRBTH^
  3260	033005	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3261	033006	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3262					;TEST CLEARING OF CHANNEL FLOP
  3263	033007	7 004 20 0 00 002001 		CONO	PI,CHNON+1		;CHECK PIO CLR
  3264	033010	7 004 20 0 00 001001 		CONO	PI,CHNOFF+1		;TURN OFF CHANNELS
  3265	033011	7 004 30 0 00 000001 		CONSZ	PI,1			;CHECK WHY FLOP NOT CLEAR
  3266						STOP^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-13
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0086

  3267	033012	254 04 0 00 033013 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3268	033013	254 00 0 00 033014 		JRST	.+1			;WITH JRST BACK^
  3269						TBOTH^
  3270						TGET^
  3271	033014	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3272	033015	302 00 0 00 033003 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3273						STOP2^^
  3274	033016	254 04 0 00 033017 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3275	033017	254 00 0 00 033020 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3276
  3277						TSET^^
  3278			033020			%X=.				;DEFINE %X TO SAVE
  3279	033020	201 00 0 00 033020 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3280	033021	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3281						CLRBTH^
  3282	033022	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3283	033023	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3284					;CHECK RESETING OF PI SYSTEM
  3285	033024	7 004 20 0 00 002001 		CONO	PI,CHNON+1		;CHECK THAT PI RESET CLEARS
  3286	033025	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  3287	033026	7 004 30 0 00 000001 		CONSZ	PI,1
  3288						STOP^
  3289	033027	254 04 0 00 033030 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3290	033030	254 00 0 00 033031 		JRST	.+1			;WITH JRST BACK^
  3291						TBOTH^
  3292						TGET^
  3293	033031	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3294	033032	302 00 0 00 033020 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3295						STOP2^^
  3296	033033	254 04 0 00 033034 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3297	033034	254 00 0 00 033035 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3298
  3299						TSET^^
  3300			033035			%X=.				;DEFINE %X TO SAVE
  3301	033035	201 00 0 00 033035 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3302	033036	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3303						CLRBTH^
  3304	033037	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3305	033040	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3306					;TEST THAT CONO ONLY SETS PION
  3307	033041	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  3308	033042	7 004 30 0 00 000001 		CONSZ	PI,1			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  3309						STOP^
  3310	033043	254 04 0 00 033044 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3311	033044	254 00 0 00 033045 		JRST	.+1			;WITH JRST BACK^
  3312						TBOTH^
  3313						TGET^
  3314	033045	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3315	033046	302 00 0 00 033035 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3316						STOP2^^
  3317	033047	254 04 0 00 033050 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3318	033050	254 00 0 00 033051 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3319
  3320						TSET^^
  3321			033051			%X=.				;DEFINE %X TO SAVE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-14
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0087

  3322	033051	201 00 0 00 033051 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3323	033052	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3324						CLRBTH^
  3325	033053	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3326	033054	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3327					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3328	033055	7 004 20 0 00 002001 		CONO	PI,CHNON+1		;TEST PIO CLR
  3329	033056	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  3330	033057	7 004 34 0 00 000001 		CONSO	PI,1			;BE SET
  3331						STOP^
  3332	033060	254 04 0 00 033061 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3333	033061	254 00 0 00 033062 		JRST	.+1			;WITH JRST BACK^
  3334						TGET^
  3335	033062	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3336	033063	302 00 0 00 033051 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3337						STOP2^^
  3338	033064	254 04 0 00 033065 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3339	033065	254 00 0 00 033066 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3340					^
  3341
  3342	033066				BIGPIX:	PITEST	177^
  3343
  3344					;TEST SETTING OF CHANNEL FLOP
  3345
  3346						TSET^
  3347			033066			%X=.				;DEFINE %X TO SAVE
  3348	033066	201 00 0 00 033066 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3349	033067	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3350	033070				..0035:	CLRBTH^
  3351	033070	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3352	033071	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3353	033072	7 004 20 0 00 002177 		CONO	PI,CHNON+177		;PION FAILED TO SET
  3354	033073	7 004 34 0 00 000177 		CONSO	PI,177
  3355						STOP^
  3356	033074	254 04 0 00 033075 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3357	033075	254 00 0 00 033076 		JRST	.+1			;WITH JRST BACK^
  3358						TBOTH^
  3359						TGET^
  3360	033076	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3361	033077	302 00 0 00 033066 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3362						STOP2^^
  3363	033100	254 04 0 00 033101 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3364	033101	254 00 0 00 033102 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3365
  3366						TSET^^
  3367			033102			%X=.				;DEFINE %X TO SAVE
  3368	033102	201 00 0 00 033102 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3369	033103	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3370						CLRBTH^
  3371	033104	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3372	033105	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3373					;TEST CLEARING OF CHANNEL FLOP
  3374	033106	7 004 20 0 00 002177 		CONO	PI,CHNON+177		;CHECK PIO CLR
  3375	033107	7 004 20 0 00 001177 		CONO	PI,CHNOFF+177		;TURN OFF CHANNELS
  3376	033110	7 004 30 0 00 000177 		CONSZ	PI,177			;CHECK WHY FLOP NOT CLEAR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-15
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0088

  3377						STOP^
  3378	033111	254 04 0 00 033112 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3379	033112	254 00 0 00 033113 		JRST	.+1			;WITH JRST BACK^
  3380						TBOTH^
  3381						TGET^
  3382	033113	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3383	033114	302 00 0 00 033102 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3384						STOP2^^
  3385	033115	254 04 0 00 033116 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3386	033116	254 00 0 00 033117 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3387
  3388						TSET^^
  3389			033117			%X=.				;DEFINE %X TO SAVE
  3390	033117	201 00 0 00 033117 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3391	033120	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3392						CLRBTH^
  3393	033121	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3394	033122	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3395					;CHECK RESETING OF PI SYSTEM
  3396	033123	7 004 20 0 00 002177 		CONO	PI,CHNON+177		;CHECK THAT PI RESET CLEARS
  3397	033124	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  3398	033125	7 004 30 0 00 000177 		CONSZ	PI,177
  3399						STOP^
  3400	033126	254 04 0 00 033127 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3401	033127	254 00 0 00 033130 		JRST	.+1			;WITH JRST BACK^
  3402						TBOTH^
  3403						TGET^
  3404	033130	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3405	033131	302 00 0 00 033117 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3406						STOP2^^
  3407	033132	254 04 0 00 033133 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3408	033133	254 00 0 00 033134 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3409
  3410						TSET^^
  3411			033134			%X=.				;DEFINE %X TO SAVE
  3412	033134	201 00 0 00 033134 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3413	033135	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3414						CLRBTH^
  3415	033136	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3416	033137	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3417					;TEST THAT CONO ONLY SETS PION
  3418	033140	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  3419	033141	7 004 30 0 00 000177 		CONSZ	PI,177			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  3420						STOP^
  3421	033142	254 04 0 00 033143 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3422	033143	254 00 0 00 033144 		JRST	.+1			;WITH JRST BACK^
  3423						TBOTH^
  3424						TGET^
  3425	033144	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3426	033145	302 00 0 00 033134 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3427						STOP2^^
  3428	033146	254 04 0 00 033147 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3429	033147	254 00 0 00 033150 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3430
  3431						TSET^^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-16
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0089

  3432			033150			%X=.				;DEFINE %X TO SAVE
  3433	033150	201 00 0 00 033150 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3434	033151	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3435						CLRBTH^
  3436	033152	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3437	033153	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3438					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3439	033154	7 004 20 0 00 002177 		CONO	PI,CHNON+177		;TEST PIO CLR
  3440	033155	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  3441	033156	7 004 34 0 00 000177 		CONSO	PI,177			;BE SET
  3442						STOP^
  3443	033157	254 04 0 00 033160 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3444	033160	254 00 0 00 033161 		JRST	.+1			;WITH JRST BACK^
  3445						TGET^
  3446	033161	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3447	033162	302 00 0 00 033150 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3448						STOP2^^
  3449	033163	254 04 0 00 033164 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3450	033164	254 00 0 00 033165 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3451					^
  3452
  3453	033165				BIGPIY:	PITEST	125^
  3454
  3455					;TEST SETTING OF CHANNEL FLOP
  3456
  3457						TSET^
  3458			033165			%X=.				;DEFINE %X TO SAVE
  3459	033165	201 00 0 00 033165 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3460	033166	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3461	033167				..0036:	CLRBTH^
  3462	033167	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3463	033170	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3464	033171	7 004 20 0 00 002125 		CONO	PI,CHNON+125		;PION FAILED TO SET
  3465	033172	7 004 34 0 00 000125 		CONSO	PI,125
  3466						STOP^
  3467	033173	254 04 0 00 033174 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3468	033174	254 00 0 00 033175 		JRST	.+1			;WITH JRST BACK^
  3469						TBOTH^
  3470						TGET^
  3471	033175	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3472	033176	302 00 0 00 033165 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3473						STOP2^^
  3474	033177	254 04 0 00 033200 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3475	033200	254 00 0 00 033201 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3476
  3477						TSET^^
  3478			033201			%X=.				;DEFINE %X TO SAVE
  3479	033201	201 00 0 00 033201 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3480	033202	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3481						CLRBTH^
  3482	033203	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3483	033204	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3484					;TEST CLEARING OF CHANNEL FLOP
  3485	033205	7 004 20 0 00 002125 		CONO	PI,CHNON+125		;CHECK PIO CLR
  3486	033206	7 004 20 0 00 001125 		CONO	PI,CHNOFF+125		;TURN OFF CHANNELS
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-17
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0090

  3487	033207	7 004 30 0 00 000125 		CONSZ	PI,125			;CHECK WHY FLOP NOT CLEAR
  3488						STOP^
  3489	033210	254 04 0 00 033211 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3490	033211	254 00 0 00 033212 		JRST	.+1			;WITH JRST BACK^
  3491						TBOTH^
  3492						TGET^
  3493	033212	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3494	033213	302 00 0 00 033201 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3495						STOP2^^
  3496	033214	254 04 0 00 033215 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3497	033215	254 00 0 00 033216 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3498
  3499						TSET^^
  3500			033216			%X=.				;DEFINE %X TO SAVE
  3501	033216	201 00 0 00 033216 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3502	033217	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3503						CLRBTH^
  3504	033220	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3505	033221	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3506					;CHECK RESETING OF PI SYSTEM
  3507	033222	7 004 20 0 00 002125 		CONO	PI,CHNON+125		;CHECK THAT PI RESET CLEARS
  3508	033223	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  3509	033224	7 004 30 0 00 000125 		CONSZ	PI,125
  3510						STOP^
  3511	033225	254 04 0 00 033226 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3512	033226	254 00 0 00 033227 		JRST	.+1			;WITH JRST BACK^
  3513						TBOTH^
  3514						TGET^
  3515	033227	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3516	033230	302 00 0 00 033216 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3517						STOP2^^
  3518	033231	254 04 0 00 033232 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3519	033232	254 00 0 00 033233 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3520
  3521						TSET^^
  3522			033233			%X=.				;DEFINE %X TO SAVE
  3523	033233	201 00 0 00 033233 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3524	033234	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3525						CLRBTH^
  3526	033235	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3527	033236	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3528					;TEST THAT CONO ONLY SETS PION
  3529	033237	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  3530	033240	7 004 30 0 00 000125 		CONSZ	PI,125			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  3531						STOP^
  3532	033241	254 04 0 00 033242 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3533	033242	254 00 0 00 033243 		JRST	.+1			;WITH JRST BACK^
  3534						TBOTH^
  3535						TGET^
  3536	033243	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3537	033244	302 00 0 00 033233 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3538						STOP2^^
  3539	033245	254 04 0 00 033246 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3540	033246	254 00 0 00 033247 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3541
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-18
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0091

  3542						TSET^^
  3543			033247			%X=.				;DEFINE %X TO SAVE
  3544	033247	201 00 0 00 033247 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3545	033250	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3546						CLRBTH^
  3547	033251	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3548	033252	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3549					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3550	033253	7 004 20 0 00 002125 		CONO	PI,CHNON+125		;TEST PIO CLR
  3551	033254	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  3552	033255	7 004 34 0 00 000125 		CONSO	PI,125			;BE SET
  3553						STOP^
  3554	033256	254 04 0 00 033257 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3555	033257	254 00 0 00 033260 		JRST	.+1			;WITH JRST BACK^
  3556						TGET^
  3557	033260	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3558	033261	302 00 0 00 033247 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3559						STOP2^^
  3560	033262	254 04 0 00 033263 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3561	033263	254 00 0 00 033264 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3562					^
  3563
  3564	033264				BIGPIZ:	PITEST	52^
  3565
  3566					;TEST SETTING OF CHANNEL FLOP
  3567
  3568						TSET^
  3569			033264			%X=.				;DEFINE %X TO SAVE
  3570	033264	201 00 0 00 033264 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3571	033265	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3572	033266				..0037:	CLRBTH^
  3573	033266	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3574	033267	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3575	033270	7 004 20 0 00 002052 		CONO	PI,CHNON+52		;PION FAILED TO SET
  3576	033271	7 004 34 0 00 000052 		CONSO	PI,52
  3577						STOP^
  3578	033272	254 04 0 00 033273 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3579	033273	254 00 0 00 033274 		JRST	.+1			;WITH JRST BACK^
  3580						TBOTH^
  3581						TGET^
  3582	033274	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3583	033275	302 00 0 00 033264 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3584						STOP2^^
  3585	033276	254 04 0 00 033277 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3586	033277	254 00 0 00 033300 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3587
  3588						TSET^^
  3589			033300			%X=.				;DEFINE %X TO SAVE
  3590	033300	201 00 0 00 033300 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3591	033301	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3592						CLRBTH^
  3593	033302	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3594	033303	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3595					;TEST CLEARING OF CHANNEL FLOP
  3596	033304	7 004 20 0 00 002052 		CONO	PI,CHNON+52		;CHECK PIO CLR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-19
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0092

  3597	033305	7 004 20 0 00 001052 		CONO	PI,CHNOFF+52		;TURN OFF CHANNELS
  3598	033306	7 004 30 0 00 000052 		CONSZ	PI,52			;CHECK WHY FLOP NOT CLEAR
  3599						STOP^
  3600	033307	254 04 0 00 033310 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3601	033310	254 00 0 00 033311 		JRST	.+1			;WITH JRST BACK^
  3602						TBOTH^
  3603						TGET^
  3604	033311	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3605	033312	302 00 0 00 033300 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3606						STOP2^^
  3607	033313	254 04 0 00 033314 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3608	033314	254 00 0 00 033315 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3609
  3610						TSET^^
  3611			033315			%X=.				;DEFINE %X TO SAVE
  3612	033315	201 00 0 00 033315 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3613	033316	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3614						CLRBTH^
  3615	033317	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3616	033320	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3617					;CHECK RESETING OF PI SYSTEM
  3618	033321	7 004 20 0 00 002052 		CONO	PI,CHNON+52		;CHECK THAT PI RESET CLEARS
  3619	033322	7 004 20 0 00 010000 		CONO	PI,PICLR		;PI SYSTEM
  3620	033323	7 004 30 0 00 000052 		CONSZ	PI,52
  3621						STOP^
  3622	033324	254 04 0 00 033325 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3623	033325	254 00 0 00 033326 		JRST	.+1			;WITH JRST BACK^
  3624						TBOTH^
  3625						TGET^
  3626	033326	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3627	033327	302 00 0 00 033315 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3628						STOP2^^
  3629	033330	254 04 0 00 033331 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3630	033331	254 00 0 00 033332 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3631
  3632						TSET^^
  3633			033332			%X=.				;DEFINE %X TO SAVE
  3634	033332	201 00 0 00 033332 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3635	033333	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3636						CLRBTH^
  3637	033334	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3638	033335	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3639					;TEST THAT CONO ONLY SETS PION
  3640	033336	7 004 20 0 00 002000 		CONO	PI,CHNON		;TEST PIO SET
  3641	033337	7 004 30 0 00 000052 		CONSZ	PI,52			;CHECK WHY CONO SET FLAGS WHITHOUT AN IOB BIT
  3642						STOP^
  3643	033340	254 04 0 00 033341 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3644	033341	254 00 0 00 033342 		JRST	.+1			;WITH JRST BACK^
  3645						TBOTH^
  3646						TGET^
  3647	033342	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3648	033343	302 00 0 00 033332 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3649						STOP2^^
  3650	033344	254 04 0 00 033345 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3651	033345	254 00 0 00 033346 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 11-20
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0093

  3652
  3653						TSET^^
  3654			033346			%X=.				;DEFINE %X TO SAVE
  3655	033346	201 00 0 00 033346 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3656	033347	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3657						CLRBTH^
  3658	033350	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3659	033351	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3660					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3661	033352	7 004 20 0 00 002052 		CONO	PI,CHNON+52		;TEST PIO CLR
  3662	033353	7 004 20 0 00 001000 		CONO	PI,CHNOFF		;MAYBE RESET OCCURED - BIT SHOULD STILL
  3663	033354	7 004 34 0 00 000052 		CONSO	PI,52			;BE SET
  3664						STOP^
  3665	033355	254 04 0 00 033356 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3666	033356	254 00 0 00 033357 		JRST	.+1			;WITH JRST BACK^
  3667						TGET^
  3668	033357	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3669	033360	302 00 0 00 033346 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3670						STOP2^^
  3671	033361	254 04 0 00 033362 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3672	033362	254 00 0 00 033363 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3673					^
  3674
  3675	033363	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 12
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0094

  3676						BLURB^
  3677					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  3678					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  3679					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  3680					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  3681					^
  3682					;CHECK THE SETTING AND CLEARING OF THE HOLD FLOPS
  3683
  3684
  3685	033364	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  3686			040000			X=40000
  3687			000100			Y=100
  3688					PIOT03:	REPEAT	7,<
  3689						PIHCLR	Y,X
  3690						X=X_-1
  3691						Y=Y_-1
  3692					>
  3693
  3694						PIHCLR	Y,X^
  3695
  3696					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3697
  3698						TSET^
  3699			033365			%X=.				;DEFINE %X TO SAVE
  3700	033365	201 00 0 00 033365 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3701	033366	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3702	033367				..0040:	CLRBTH^
  3703	033367	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3704	033370	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3705	033371	7 004 20 0 00 004300 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3706						WATINT^
  3707	033372	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3708	033373	367 13 0 00 033373 		SOJG	13,.			;AND WAIT^
  3709	033374	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
  3710	033375	7 004 30 0 00 040000 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3711						STOP^
  3712	033376	254 04 0 00 033377 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3713	033377	254 00 0 00 033400 		JRST	.+1			;WITH JRST BACK^
  3714						TGET^
  3715	033400	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3716	033401	302 00 0 00 033365 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3717						STOP2^^
  3718	033402	254 04 0 00 033403 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3719	033403	254 00 0 00 033404 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3720					^
  3721			020000			X=X_-1
  3722			000040			Y=Y_-1
  3723
  3724
  3725						PIHCLR	Y,X^
  3726
  3727					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3728
  3729						TSET^
  3730			033404			%X=.				;DEFINE %X TO SAVE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 12-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0095

  3731	033404	201 00 0 00 033404 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3732	033405	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3733	033406				..0041:	CLRBTH^
  3734	033406	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3735	033407	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3736	033410	7 004 20 0 00 004240 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3737						WATINT^
  3738	033411	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3739	033412	367 13 0 00 033412 		SOJG	13,.			;AND WAIT^
  3740	033413	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
  3741	033414	7 004 30 0 00 020000 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3742						STOP^
  3743	033415	254 04 0 00 033416 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3744	033416	254 00 0 00 033417 		JRST	.+1			;WITH JRST BACK^
  3745						TGET^
  3746	033417	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3747	033420	302 00 0 00 033404 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3748						STOP2^^
  3749	033421	254 04 0 00 033422 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3750	033422	254 00 0 00 033423 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3751					^
  3752			010000			X=X_-1
  3753			000020			Y=Y_-1
  3754
  3755
  3756						PIHCLR	Y,X^
  3757
  3758					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3759
  3760						TSET^
  3761			033423			%X=.				;DEFINE %X TO SAVE
  3762	033423	201 00 0 00 033423 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3763	033424	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3764	033425				..0042:	CLRBTH^
  3765	033425	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3766	033426	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3767	033427	7 004 20 0 00 004220 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3768						WATINT^
  3769	033430	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3770	033431	367 13 0 00 033431 		SOJG	13,.			;AND WAIT^
  3771	033432	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
  3772	033433	7 004 30 0 00 010000 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3773						STOP^
  3774	033434	254 04 0 00 033435 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3775	033435	254 00 0 00 033436 		JRST	.+1			;WITH JRST BACK^
  3776						TGET^
  3777	033436	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3778	033437	302 00 0 00 033423 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3779						STOP2^^
  3780	033440	254 04 0 00 033441 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3781	033441	254 00 0 00 033442 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3782					^
  3783			004000			X=X_-1
  3784			000010			Y=Y_-1
  3785
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 12-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0096

  3786
  3787						PIHCLR	Y,X^
  3788
  3789					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3790
  3791						TSET^
  3792			033442			%X=.				;DEFINE %X TO SAVE
  3793	033442	201 00 0 00 033442 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3794	033443	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3795	033444				..0043:	CLRBTH^
  3796	033444	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3797	033445	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3798	033446	7 004 20 0 00 004210 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3799						WATINT^
  3800	033447	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3801	033450	367 13 0 00 033450 		SOJG	13,.			;AND WAIT^
  3802	033451	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
  3803	033452	7 004 30 0 00 004000 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3804						STOP^
  3805	033453	254 04 0 00 033454 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3806	033454	254 00 0 00 033455 		JRST	.+1			;WITH JRST BACK^
  3807						TGET^
  3808	033455	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3809	033456	302 00 0 00 033442 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3810						STOP2^^
  3811	033457	254 04 0 00 033460 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3812	033460	254 00 0 00 033461 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3813					^
  3814			002000			X=X_-1
  3815			000004			Y=Y_-1
  3816
  3817
  3818						PIHCLR	Y,X^
  3819
  3820					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3821
  3822						TSET^
  3823			033461			%X=.				;DEFINE %X TO SAVE
  3824	033461	201 00 0 00 033461 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3825	033462	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3826	033463				..0044:	CLRBTH^
  3827	033463	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3828	033464	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3829	033465	7 004 20 0 00 004204 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3830						WATINT^
  3831	033466	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3832	033467	367 13 0 00 033467 		SOJG	13,.			;AND WAIT^
  3833	033470	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
  3834	033471	7 004 30 0 00 002000 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3835						STOP^
  3836	033472	254 04 0 00 033473 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3837	033473	254 00 0 00 033474 		JRST	.+1			;WITH JRST BACK^
  3838						TGET^
  3839	033474	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3840	033475	302 00 0 00 033461 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 12-3
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0097

  3841						STOP2^^
  3842	033476	254 04 0 00 033477 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3843	033477	254 00 0 00 033500 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3844					^
  3845			001000			X=X_-1
  3846			000002			Y=Y_-1
  3847
  3848
  3849						PIHCLR	Y,X^
  3850
  3851					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3852
  3853						TSET^
  3854			033500			%X=.				;DEFINE %X TO SAVE
  3855	033500	201 00 0 00 033500 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3856	033501	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3857	033502				..0045:	CLRBTH^
  3858	033502	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3859	033503	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3860	033504	7 004 20 0 00 004202 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3861						WATINT^
  3862	033505	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3863	033506	367 13 0 00 033506 		SOJG	13,.			;AND WAIT^
  3864	033507	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
  3865	033510	7 004 30 0 00 001000 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3866						STOP^
  3867	033511	254 04 0 00 033512 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3868	033512	254 00 0 00 033513 		JRST	.+1			;WITH JRST BACK^
  3869						TGET^
  3870	033513	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3871	033514	302 00 0 00 033500 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3872						STOP2^^
  3873	033515	254 04 0 00 033516 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3874	033516	254 00 0 00 033517 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3875					^
  3876			000400			X=X_-1
  3877			000001			Y=Y_-1
  3878
  3879
  3880						PIHCLR	Y,X^
  3881
  3882					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3883
  3884						TSET^
  3885			033517			%X=.				;DEFINE %X TO SAVE
  3886	033517	201 00 0 00 033517 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  3887	033520	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  3888	033521				..0046:	CLRBTH^
  3889	033521	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  3890	033522	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3891	033523	7 004 20 0 00 004201 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3892						WATINT^
  3893	033524	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3894	033525	367 13 0 00 033525 		SOJG	13,.			;AND WAIT^
  3895	033526	7 004 20 0 00 010000 		CONO	PI,PICLR		;THEN CLEAR VIA PI RESET
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 12-4
DBKAHM	MAC	18-Jan-79 11:21		BASIC PI SYSTEM TESTING                                                            SEQ 0098

  3896	033527	7 004 30 0 00 000400 		CONSZ	PI,X			;HOLD FLOP FAILED TO CLEAR.
  3897						STOP^
  3898	033530	254 04 0 00 033531 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  3899	033531	254 00 0 00 033532 		JRST	.+1			;WITH JRST BACK^
  3900						TGET^
  3901	033532	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  3902	033533	302 00 0 00 033517 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  3903						STOP2^^
  3904	033534	254 04 0 00 033535 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  3905	033535	254 00 0 00 033536 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  3906					^
  3907			000200			X=X_-1
  3908			000000			Y=Y_-1
  3909
  3910	033536	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 13
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0099

  3911					SUBTTL	INTERRUPT TESTING WITH REAL INTERRUPTS
  3912					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3913					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3914					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3915
  3916					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3917	033537	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  3918	033540	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3919	033541	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  3920	033542	200 00 0 00 041452 		MOVE	[JSP UUO]		;SET TRAP TO HALT
  3921	033543	202 00 0 00 000041 		MOVEM	41			;IN THE UUO TRAP LOCATION
  3922	033544	200 00 0 00 041453 		MOVE	[JSP TRP0A]		;SET PROPER RECOVERY INST.
  3923	033545	202 00 0 00 000042 		MOVEM	42			;INTO CH1 TRAP
  3924	033546	7 004 20 0 00 002300 		CONO	PI,2300			;TURN ON CHAN1
  3925	033547	7 000 20 0 00 002001 		CONO	2001			;TURN ON CLOCK AND CHAN
  3926						STUCK^
  3927						WATINT^
  3928	033550	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3929	033551	367 13 0 00 033551 		SOJG	13,.			;AND WAIT^
  3930	033552	254 00 0 00 033552 		JRST	.			;LOOOP ON SELF^
  3931	033553				TRP0A:	TRPCHK^
  3932	033553	332 00 0 00 030042 	..0047:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  3933	033554	254 00 0 00 033557 		JRST	.+3			;DONT IF STAND ALONE
  3934	033555	254 02 1 00 033556 		JRSTF	@.+1			;AND RESTORE THEM
  3935	033556	000000	033557			USERF,.+1			;NEW PC AND FLAGS^
  3936	033557	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3937	033560	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  3938					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3939					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3940					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3941					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3942	033561	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  3943	033562	200 00 0 00 041454 		MOVE	[JSP TRP1A]		;RECOVERY INSTRUCTION INTO
  3944	033563	202 00 0 00 000044 		MOVEM	44			;PROPER CHAN TRAP (2)
  3945	033564	7 004 20 0 00 002240 		CONO	PI,2240			;TURN CHAN 2 ON
  3946	033565	7 000 20 0 00 002002 		CONO	2002			;TURN CLOCK AND CHN ON
  3947						STUCK^
  3948						WATINT^
  3949	033566	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3950	033567	367 13 0 00 033567 		SOJG	13,.			;AND WAIT^
  3951	033570	254 00 0 00 033570 		JRST	.			;LOOOP ON SELF^
  3952	033571				TRP1A:	TRPCHK^
  3953	033571	332 00 0 00 030042 	..0050:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  3954	033572	254 00 0 00 033575 		JRST	.+3			;DONT IF STAND ALONE
  3955	033573	254 02 1 00 033574 		JRSTF	@.+1			;AND RESTORE THEM
  3956	033574	000000	033575			USERF,.+1			;NEW PC AND FLAGS^
  3957	033575	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3958	033576	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  3959					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3960					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3961					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3962					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3963	033577	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  3964	033600	200 00 0 00 041455 		MOVE	[JSP TRP2A]		;RECOVERY INSTRUCTION
  3965	033601	202 00 0 00 000046 		MOVEM	46			;INTO PROPER CHAN TRAP (3)
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 13-1
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0100

  3966	033602	7 004 20 0 00 002220 		CONO	PI,2220			;TURN CHAN 3 ON
  3967	033603	7 000 20 0 00 002003 		CONO	2003			;TURN CLOCK AND CHAN ON
  3968						STUCK^
  3969						WATINT^
  3970	033604	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3971	033605	367 13 0 00 033605 		SOJG	13,.			;AND WAIT^
  3972	033606	254 00 0 00 033606 		JRST	.			;LOOOP ON SELF^
  3973	033607				TRP2A:	TRPCHK^
  3974	033607	332 00 0 00 030042 	..0051:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  3975	033610	254 00 0 00 033613 		JRST	.+3			;DONT IF STAND ALONE
  3976	033611	254 02 1 00 033612 		JRSTF	@.+1			;AND RESTORE THEM
  3977	033612	000000	033613			USERF,.+1			;NEW PC AND FLAGS^
  3978	033613	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  3979	033614	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  3980					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3981					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3982					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3983					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3984	033615	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  3985	033616	200 00 0 00 041456 		MOVE	[JSP TRP3A]		;RECOVERY INSTRUCTION
  3986	033617	202 00 0 00 000050 		MOVEM	50			;INTO PROPER CHAN TRAP (4)
  3987	033620	7 004 20 0 00 002210 		CONO	PI,2210			;TURN CHAN 4 ON
  3988	033621	7 000 20 0 00 002004 		CONO	2004			;TURN CLOCK AND CHAN ON
  3989						STUCK^
  3990						WATINT^
  3991	033622	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  3992	033623	367 13 0 00 033623 		SOJG	13,.			;AND WAIT^
  3993	033624	254 00 0 00 033624 		JRST	.			;LOOOP ON SELF^
  3994	033625				TRP3A:	TRPCHK^
  3995	033625	332 00 0 00 030042 	..0052:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  3996	033626	254 00 0 00 033631 		JRST	.+3			;DONT IF STAND ALONE
  3997	033627	254 02 1 00 033630 		JRSTF	@.+1			;AND RESTORE THEM
  3998	033630	000000	033631			USERF,.+1			;NEW PC AND FLAGS^
  3999	033631	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4000	033632	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  4001					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4002					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  4003					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  4004					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  4005	033633	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4006	033634	200 00 0 00 041457 		MOVE	[JSP TRP4A]		;RECOVERY INSTRUCTION
  4007	033635	202 00 0 00 000052 		MOVEM	52			;INTO PROPER CHAN TRAP (5)
  4008	033636	7 004 20 0 00 002204 		CONO	PI,2204			;TURN CHAN 5 ON
  4009	033637	7 000 20 0 00 002005 		CONO	2005			;TURN CLOCK AND CHAN ON
  4010						STUCK^
  4011						WATINT^
  4012	033640	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4013	033641	367 13 0 00 033641 		SOJG	13,.			;AND WAIT^
  4014	033642	254 00 0 00 033642 		JRST	.			;LOOOP ON SELF^
  4015	033643				TRP4A:	TRPCHK^
  4016	033643	332 00 0 00 030042 	..0053:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4017	033644	254 00 0 00 033647 		JRST	.+3			;DONT IF STAND ALONE
  4018	033645	254 02 1 00 033646 		JRSTF	@.+1			;AND RESTORE THEM
  4019	033646	000000	033647			USERF,.+1			;NEW PC AND FLAGS^
  4020	033647	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 13-2
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0101

  4021	033650	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  4022
  4023					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4024					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  4025					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  4026					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  4027	033651	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4028	033652	200 00 0 00 041460 		MOVE	[JSP TRP5A]		;RECOVERY INSTRUCTION
  4029	033653	202 00 0 00 000054 		MOVEM	54			;INTO PROPER CHAN TRAP (6)
  4030	033654	7 004 20 0 00 002202 		CONO	PI,2202			;TURN CHAN 6 ON
  4031	033655	7 000 20 0 00 002006 		CONO	2006			;TURN CLOCK AND CHAN ON
  4032						STUCK^
  4033						WATINT^
  4034	033656	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4035	033657	367 13 0 00 033657 		SOJG	13,.			;AND WAIT^
  4036	033660	254 00 0 00 033660 		JRST	.			;LOOOP ON SELF^
  4037	033661				TRP5A:	TRPCHK^
  4038	033661	332 00 0 00 030042 	..0054:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4039	033662	254 00 0 00 033665 		JRST	.+3			;DONT IF STAND ALONE
  4040	033663	254 02 1 00 033664 		JRSTF	@.+1			;AND RESTORE THEM
  4041	033664	000000	033665			USERF,.+1			;NEW PC AND FLAGS^
  4042	033665	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4043	033666	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  4044					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4045					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  4046					;VIA THE CLOCK--ILLEGAL TRAPS HALT--NO TRAP LOOPS
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 14
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0102

  4047					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  4048	033667	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4049	033670	200 00 0 00 041461 		MOVE	[JSP TRP6A]		;RECOVERY INSTRUCTION
  4050	033671	202 00 0 00 000056 		MOVEM	56			;INTO PROPER CHAN TRAP (7)
  4051	033672	7 004 20 0 00 002201 		CONO	PI,2201			;TURN CHAN 7 ON
  4052	033673	7 000 20 0 00 002007 		CONO	2007			;TURN CLOCK AND CHAN ON
  4053						STUCK^
  4054						WATINT^
  4055	033674	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4056	033675	367 13 0 00 033675 		SOJG	13,.			;AND WAIT^
  4057	033676	254 00 0 00 033676 		JRST	.			;LOOOP ON SELF^
  4058	033677				TRP6A:	TRPCHK^
  4059	033677	332 00 0 00 030042 	..0055:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4060	033700	254 00 0 00 033703 		JRST	.+3			;DONT IF STAND ALONE
  4061	033701	254 02 1 00 033702 		JRSTF	@.+1			;AND RESTORE THEM
  4062	033702	000000	033703			USERF,.+1			;NEW PC AND FLAGS^
  4063
  4064	033703	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 15
DBKAHM	MAC	18-Jan-79 11:21		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0103

  4065					SUBTTL	INTERNAL INTERRUPT REQUEST TESTING
  4066					;CHECK THE ABILITY TO GENERATE PI REQUESTS VIA PROGRAM REQEST ON ALL
  4067					;CHANNELS.
  4068	033704	265 00 0 00 033705 		JSP	.+1			;GET FLAGS
  4069	033705	603 00 0 00 010000 		TLNE	USERF			;USER MODE BIT ON
  4070	033706	254 00 0 00 034051 		JRST	MULTI			;DONT DO IF USER MODE!
  4071
  4072						CLRBTH^
  4073	033707	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4074	033710	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4075					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4076	033711	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4077	033712	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4078	033713	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4079						TRAP	<JSP CKI01>,42^
  4080	033714	200 00 0 00 041462 		MOVE	[JSP CKI01]			;SET TRAP INSTRUCTION
  4081	033715	202 00 0 00 000042 		MOVEM	42			;INTO TRAP LOCATION^
  4082	033716	7 004 20 0 00 006300 		CONO	PI,6300			;INTERRUPT ON CH1
  4083						STUCK^
  4084						WATINT^
  4085	033717	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4086	033720	367 13 0 00 033720 		SOJG	13,.			;AND WAIT^
  4087	033721	254 00 0 00 033721 		JRST	.			;LOOOP ON SELF^
  4088					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4089	033722				CKI01:	TRPCHK^
  4090	033722	332 00 0 00 030042 	..0056:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4091	033723	254 00 0 00 033726 		JRST	.+3			;DONT IF STAND ALONE
  4092	033724	254 02 1 00 033725 		JRSTF	@.+1			;AND RESTORE THEM
  4093	033725	000000	033726			USERF,.+1			;NEW PC AND FLAGS^
  4094	033726	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4095	033727	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4096	033730	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4097						TRAP	<JSP CKI02>,44^
  4098	033731	200 00 0 00 041463 		MOVE	[JSP CKI02]			;SET TRAP INSTRUCTION
  4099	033732	202 00 0 00 000044 		MOVEM	44			;INTO TRAP LOCATION^
  4100	033733	7 004 20 0 00 006240 		CONO	PI,6240			;INTERRUPT ON CH 2
  4101						STUCK^
  4102						WATINT^
  4103	033734	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4104	033735	367 13 0 00 033735 		SOJG	13,.			;AND WAIT^
  4105	033736	254 00 0 00 033736 		JRST	.			;LOOOP ON SELF^
  4106					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4107	033737				CKI02:	TRPCHK^
  4108	033737	332 00 0 00 030042 	..0057:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4109	033740	254 00 0 00 033743 		JRST	.+3			;DONT IF STAND ALONE
  4110	033741	254 02 1 00 033742 		JRSTF	@.+1			;AND RESTORE THEM
  4111	033742	000000	033743			USERF,.+1			;NEW PC AND FLAGS^
  4112	033743	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4113	033744	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4114	033745	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4115						TRAP	<JSP CKI03>,46^
  4116	033746	200 00 0 00 041464 		MOVE	[JSP CKI03]			;SET TRAP INSTRUCTION
  4117	033747	202 00 0 00 000046 		MOVEM	46			;INTO TRAP LOCATION^
  4118	033750	7 004 20 0 00 006220 		CONO	PI,6220			;INTERRUPT ON CH 3
  4119						STUCK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 15-1
DBKAHM	MAC	18-Jan-79 11:21		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0104

  4120						WATINT^
  4121	033751	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4122	033752	367 13 0 00 033752 		SOJG	13,.			;AND WAIT^
  4123	033753	254 00 0 00 033753 		JRST	.			;LOOOP ON SELF^
  4124					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4125	033754				CKI03:	TRPCHK^
  4126	033754	332 00 0 00 030042 	..0060:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4127	033755	254 00 0 00 033760 		JRST	.+3			;DONT IF STAND ALONE
  4128	033756	254 02 1 00 033757 		JRSTF	@.+1			;AND RESTORE THEM
  4129	033757	000000	033760			USERF,.+1			;NEW PC AND FLAGS^
  4130	033760	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4131	033761	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4132	033762	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4133						TRAP	<JSP CKI04>,50^
  4134	033763	200 00 0 00 041465 		MOVE	[JSP CKI04]			;SET TRAP INSTRUCTION
  4135	033764	202 00 0 00 000050 		MOVEM	50			;INTO TRAP LOCATION^
  4136	033765	7 004 20 0 00 006210 		CONO	PI,6210			;INTERRUPT ON CH 4
  4137						STUCK^
  4138						WATINT^
  4139	033766	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4140	033767	367 13 0 00 033767 		SOJG	13,.			;AND WAIT^
  4141	033770	254 00 0 00 033770 		JRST	.			;LOOOP ON SELF^
  4142					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4143	033771				CKI04:	TRPCHK^
  4144	033771	332 00 0 00 030042 	..0061:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4145	033772	254 00 0 00 033775 		JRST	.+3			;DONT IF STAND ALONE
  4146	033773	254 02 1 00 033774 		JRSTF	@.+1			;AND RESTORE THEM
  4147	033774	000000	033775			USERF,.+1			;NEW PC AND FLAGS^
  4148	033775	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4149	033776	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4150	033777	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4151						TRAP	<JSP CKI05>,52^
  4152	034000	200 00 0 00 041466 		MOVE	[JSP CKI05]			;SET TRAP INSTRUCTION
  4153	034001	202 00 0 00 000052 		MOVEM	52			;INTO TRAP LOCATION^
  4154	034002	7 004 20 0 00 006204 		CONO	PI,6204			;INTERRUPT ON CH 5
  4155						STUCK^
  4156						WATINT^
  4157	034003	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4158	034004	367 13 0 00 034004 		SOJG	13,.			;AND WAIT^
  4159	034005	254 00 0 00 034005 		JRST	.			;LOOOP ON SELF^
  4160					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4161	034006				CKI05:	TRPCHK^
  4162	034006	332 00 0 00 030042 	..0062:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4163	034007	254 00 0 00 034012 		JRST	.+3			;DONT IF STAND ALONE
  4164	034010	254 02 1 00 034011 		JRSTF	@.+1			;AND RESTORE THEM
  4165	034011	000000	034012			USERF,.+1			;NEW PC AND FLAGS^
  4166	034012	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4167	034013	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4168	034014	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4169						TRAP	<JSP CKI06>,54^
  4170	034015	200 00 0 00 041467 		MOVE	[JSP CKI06]			;SET TRAP INSTRUCTION
  4171	034016	202 00 0 00 000054 		MOVEM	54			;INTO TRAP LOCATION^
  4172	034017	7 004 20 0 00 006202 		CONO	PI,6202			;INTERRUPT ON CH 6
  4173						STUCK^
  4174						WATINT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 15-2
DBKAHM	MAC	18-Jan-79 11:21		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0105

  4175	034020	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4176	034021	367 13 0 00 034021 		SOJG	13,.			;AND WAIT^
  4177	034022	254 00 0 00 034022 		JRST	.			;LOOOP ON SELF^
  4178					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4179	034023				CKI06:	TRPCHK^
  4180	034023	332 00 0 00 030042 	..0063:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4181	034024	254 00 0 00 034027 		JRST	.+3			;DONT IF STAND ALONE
  4182	034025	254 02 1 00 034026 		JRSTF	@.+1			;AND RESTORE THEM
  4183	034026	000000	034027			USERF,.+1			;NEW PC AND FLAGS^
  4184	034027	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4185	034030	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4186	034031	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4187						TRAP	<JSP CKI07>,56^
  4188	034032	200 00 0 00 041470 		MOVE	[JSP CKI07]			;SET TRAP INSTRUCTION
  4189	034033	202 00 0 00 000056 		MOVEM	56			;INTO TRAP LOCATION^
  4190	034034	7 004 20 0 00 006201 		CONO	PI,6201			;INTERRUPT ON CH 7
  4191						STUCK^
  4192						WATINT^
  4193	034035	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4194	034036	367 13 0 00 034036 		SOJG	13,.			;AND WAIT^
  4195	034037	254 00 0 00 034037 		JRST	.			;LOOOP ON SELF^
  4196					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  4197	034040				CKI07:	TRPCHK^
  4198	034040	332 00 0 00 030042 	..0064:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4199	034041	254 00 0 00 034044 		JRST	.+3			;DONT IF STAND ALONE
  4200	034042	254 02 1 00 034043 		JRSTF	@.+1			;AND RESTORE THEM
  4201	034043	000000	034044			USERF,.+1			;NEW PC AND FLAGS^
  4202	034044	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4203	034045	264 00 0 00 041075 		CLRTRP
  4204	034046	7 004 20 0 00 731577 		CLRPI^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4205	034047	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4206	034050	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 16
DBKAHM	MAC	18-Jan-79 11:21		PRIORITY TESTING                                                                   SEQ 0106

  4207					SUBTTL	PRIORITY TESTING
  4208					;THIS TEST CHECKS TO SEE IF INTERRUPTS RECOGNIZE THE PROPER PRIORITY
  4209					;IMPROPER TRAPS WILL HALT - NO TRAPS WILL CAUSE PROGRAM TO HANG
  4210					;IF PROGRAM STUCK THEN REPLACE "JRST ." WITH JRST BACK TO MULT7
  4211					;IF PROGRAM HALTS THEN REPLACE "JSP" IN INTERRUPT LOCATION
  4212					;TO "JSP" TO ROUTINE WHICH CAUSED THE TRAP +1
  4213					;FOR EXAMPLE IF ROUTINE TRAPPED TO LOCATION '50' IN 50
  4214					;YOU WOULD PUT A JSP 17, TO "MULTX ROUTINE+3
  4215
  4216	034051				MULTI:	CLRBT1^
  4217	034051	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  4218	034052	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4219	034053	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4220						TRAP	<JSP	MULT6>,56^
  4221	034054	200 00 0 00 041471 		MOVE	[JSP	MULT6]			;SET TRAP INSTRUCTION
  4222	034055	202 00 0 00 000056 		MOVEM	56			;INTO TRAP LOCATION^
  4223	034056	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  4224						CLKWT	7^
  4225	034057	7 000 34 0 00 001000 	..0065:	CONSO	CLK			;WAIT FOR CLOCK
  4226	034060	254 00 0 00 034057 		JRST	.-1			;NOT READY!
  4227	034061	7 000 20 0 00 002007 		CONO	CLKENB+7		;SET CLOCK ENABLE AND PI CHANNEL
  4228						STUCK^^
  4229						WATINT^
  4230	034062	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4231	034063	367 13 0 00 034063 		SOJG	13,.			;AND WAIT^
  4232	034064	254 00 0 00 034064 		JRST	.			;LOOOP ON SELF^
  4233	034065				MULT6:	TRPCHK^
  4234	034065	332 00 0 00 030042 	..0066:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4235	034066	254 00 0 00 034071 		JRST	.+3			;DONT IF STAND ALONE
  4236	034067	254 02 1 00 034070 		JRSTF	@.+1			;AND RESTORE THEM
  4237	034070	000000	034071			USERF,.+1			;NEW PC AND FLAGS^
  4238	034071	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4239						TRAP	<JSP	MULT5>,54^
  4240	034072	200 00 0 00 041472 		MOVE	[JSP	MULT5]			;SET TRAP INSTRUCTION
  4241	034073	202 00 0 00 000054 		MOVEM	54			;INTO TRAP LOCATION^
  4242	034074	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  4243						CLKWT	6^
  4244	034075	7 000 34 0 00 001000 	..0067:	CONSO	CLK			;WAIT FOR CLOCK
  4245	034076	254 00 0 00 034075 		JRST	.-1			;NOT READY!
  4246	034077	7 000 20 0 00 002006 		CONO	CLKENB+6		;SET CLOCK ENABLE AND PI CHANNEL
  4247						STUCK^^
  4248						WATINT^
  4249	034100	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4250	034101	367 13 0 00 034101 		SOJG	13,.			;AND WAIT^
  4251	034102	254 00 0 00 034102 		JRST	.			;LOOOP ON SELF^
  4252	034103				MULT5:	TRPCHK^
  4253	034103	332 00 0 00 030042 	..0070:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4254	034104	254 00 0 00 034107 		JRST	.+3			;DONT IF STAND ALONE
  4255	034105	254 02 1 00 034106 		JRSTF	@.+1			;AND RESTORE THEM
  4256	034106	000000	034107			USERF,.+1			;NEW PC AND FLAGS^
  4257	034107	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4258						TRAP	<JSP	MULT4>,52^
  4259	034110	200 00 0 00 041473 		MOVE	[JSP	MULT4]			;SET TRAP INSTRUCTION
  4260	034111	202 00 0 00 000052 		MOVEM	52			;INTO TRAP LOCATION^
  4261	034112	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 16-1
DBKAHM	MAC	18-Jan-79 11:21		PRIORITY TESTING                                                                   SEQ 0107

  4262						CLKWT	5^
  4263	034113	7 000 34 0 00 001000 	..0071:	CONSO	CLK			;WAIT FOR CLOCK
  4264	034114	254 00 0 00 034113 		JRST	.-1			;NOT READY!
  4265	034115	7 000 20 0 00 002005 		CONO	CLKENB+5		;SET CLOCK ENABLE AND PI CHANNEL
  4266						STUCK^^
  4267						WATINT^
  4268	034116	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4269	034117	367 13 0 00 034117 		SOJG	13,.			;AND WAIT^
  4270	034120	254 00 0 00 034120 		JRST	.			;LOOOP ON SELF^
  4271	034121				MULT4:	TRPCHK^
  4272	034121	332 00 0 00 030042 	..0072:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4273	034122	254 00 0 00 034125 		JRST	.+3			;DONT IF STAND ALONE
  4274	034123	254 02 1 00 034124 		JRSTF	@.+1			;AND RESTORE THEM
  4275	034124	000000	034125			USERF,.+1			;NEW PC AND FLAGS^
  4276	034125	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4277						TRAP	<JSP	MULT3>,50^
  4278	034126	200 00 0 00 041474 		MOVE	[JSP	MULT3]			;SET TRAP INSTRUCTION
  4279	034127	202 00 0 00 000050 		MOVEM	50			;INTO TRAP LOCATION^
  4280	034130	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  4281						CLKWT	4^
  4282	034131	7 000 34 0 00 001000 	..0073:	CONSO	CLK			;WAIT FOR CLOCK
  4283	034132	254 00 0 00 034131 		JRST	.-1			;NOT READY!
  4284	034133	7 000 20 0 00 002004 		CONO	CLKENB+4		;SET CLOCK ENABLE AND PI CHANNEL
  4285						STUCK^^
  4286						WATINT^
  4287	034134	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4288	034135	367 13 0 00 034135 		SOJG	13,.			;AND WAIT^
  4289	034136	254 00 0 00 034136 		JRST	.			;LOOOP ON SELF^
  4290	034137				MULT3:	TRPCHK^
  4291	034137	332 00 0 00 030042 	..0074:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4292	034140	254 00 0 00 034143 		JRST	.+3			;DONT IF STAND ALONE
  4293	034141	254 02 1 00 034142 		JRSTF	@.+1			;AND RESTORE THEM
  4294	034142	000000	034143			USERF,.+1			;NEW PC AND FLAGS^
  4295	034143	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4296						TRAP	<JSP	MULT2>,46^
  4297	034144	200 00 0 00 041475 		MOVE	[JSP	MULT2]			;SET TRAP INSTRUCTION
  4298	034145	202 00 0 00 000046 		MOVEM	46			;INTO TRAP LOCATION^
  4299	034146	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  4300						CLKWT	3^
  4301	034147	7 000 34 0 00 001000 	..0075:	CONSO	CLK			;WAIT FOR CLOCK
  4302	034150	254 00 0 00 034147 		JRST	.-1			;NOT READY!
  4303	034151	7 000 20 0 00 002003 		CONO	CLKENB+3		;SET CLOCK ENABLE AND PI CHANNEL
  4304						STUCK^^
  4305						WATINT^
  4306	034152	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4307	034153	367 13 0 00 034153 		SOJG	13,.			;AND WAIT^
  4308	034154	254 00 0 00 034154 		JRST	.			;LOOOP ON SELF^
  4309	034155				MULT2:	TRPCHK^
  4310	034155	332 00 0 00 030042 	..0076:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4311	034156	254 00 0 00 034161 		JRST	.+3			;DONT IF STAND ALONE
  4312	034157	254 02 1 00 034160 		JRSTF	@.+1			;AND RESTORE THEM
  4313	034160	000000	034161			USERF,.+1			;NEW PC AND FLAGS^
  4314	034161	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4315						TRAP	<JSP	MULT1>,44^
  4316	034162	200 00 0 00 041476 		MOVE	[JSP	MULT1]			;SET TRAP INSTRUCTION
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 16-2
DBKAHM	MAC	18-Jan-79 11:21		PRIORITY TESTING                                                                   SEQ 0108

  4317	034163	202 00 0 00 000044 		MOVEM	44			;INTO TRAP LOCATION^
  4318	034164	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  4319						CLKWT	2^
  4320	034165	7 000 34 0 00 001000 	..0077:	CONSO	CLK			;WAIT FOR CLOCK
  4321	034166	254 00 0 00 034165 		JRST	.-1			;NOT READY!
  4322	034167	7 000 20 0 00 002002 		CONO	CLKENB+2		;SET CLOCK ENABLE AND PI CHANNEL
  4323						STUCK^^
  4324						WATINT^
  4325	034170	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4326	034171	367 13 0 00 034171 		SOJG	13,.			;AND WAIT^
  4327	034172	254 00 0 00 034172 		JRST	.			;LOOOP ON SELF^
  4328	034173				MULT1:	TRPCHK^
  4329	034173	332 00 0 00 030042 	..0100:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4330	034174	254 00 0 00 034177 		JRST	.+3			;DONT IF STAND ALONE
  4331	034175	254 02 1 00 034176 		JRSTF	@.+1			;AND RESTORE THEM
  4332	034176	000000	034177			USERF,.+1			;NEW PC AND FLAGS^
  4333	034177	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4334						TRAP	<JSP	MULT0>,42^
  4335	034200	200 00 0 00 041477 		MOVE	[JSP	MULT0]			;SET TRAP INSTRUCTION
  4336	034201	202 00 0 00 000042 		MOVEM	42			;INTO TRAP LOCATION^
  4337	034202	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  4338						CLKWT	1^
  4339	034203	7 000 34 0 00 001000 	..0101:	CONSO	CLK			;WAIT FOR CLOCK
  4340	034204	254 00 0 00 034203 		JRST	.-1			;NOT READY!
  4341	034205	7 000 20 0 00 002001 		CONO	CLKENB+1		;SET CLOCK ENABLE AND PI CHANNEL
  4342						STUCK^^
  4343						WATINT^
  4344	034206	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4345	034207	367 13 0 00 034207 		SOJG	13,.			;AND WAIT^
  4346	034210	254 00 0 00 034210 		JRST	.			;LOOOP ON SELF^
  4347	034211				MULT0:	TRPCHK^
  4348	034211	332 00 0 00 030042 	..0102:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4349	034212	254 00 0 00 034215 		JRST	.+3			;DONT IF STAND ALONE
  4350	034213	254 02 1 00 034214 		JRSTF	@.+1			;AND RESTORE THEM
  4351	034214	000000	034215			USERF,.+1			;NEW PC AND FLAGS^
  4352	034215	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4353						CLRBTH^
  4354	034216	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4355	034217	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4356	034220	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0109

  4357					SUBTTL	DUAL REQUEST TESTING
  4358					;TEST THAT INTERRUPTING ON 2 CHANNELS AT ONCE TRAPS
  4359					;TO THE CORRECT TRAP. TEST IS DONE ON ALL POSSIBLE CHANNELS I.E.
  4360					;7,1 7,2 7,3 7,4 7,5 7,6 6,1 6,2...ETC
  4361
  4362
  4363	034221				C2A:	TSET^
  4364			034221			%X=.				;DEFINE %X TO SAVE
  4365	034221	201 00 0 00 034221 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4366	034222	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4367						XCHN2	C2B,42,101^
  4368
  4369					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4370					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4371					;IF ERROR OCCURS CHECK "PIN" PRINT
  4372
  4373						TRPCHK^
  4374	034223	332 00 0 00 030042 	..0103:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4375	034224	254 00 0 00 034227 		JRST	.+3			;DONT IF STAND ALONE
  4376	034225	254 02 1 00 034226 		JRSTF	@.+1			;AND RESTORE THEM
  4377	034226	000000	034227			USERF,.+1			;NEW PC AND FLAGS^
  4378						CLRBTH^
  4379	034227	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4380	034230	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4381	034231	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4382	034232	200 00 0 00 041500 		MOVE	[JSP C2B]			;SET UP FOR CORRECT
  4383	034233	202 00 0 00 000042 		MOVEM	42			;INTERRUPT TRAP
  4384	034234	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4385	034235	7 004 20 0 00 004101 		CONO	PI,REQSET!101		;REQUEST INTERRUPT ON TWO CHANNELS
  4386						STUCK^
  4387						WATINT^
  4388	034236	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4389	034237	367 13 0 00 034237 		SOJG	13,.			;AND WAIT^
  4390	034240	254 00 0 00 034240 		JRST	.			;LOOOP ON SELF^
  4391					^
  4392	034241				C2B:	TBOTH^
  4393						TGET^
  4394	034241	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4395	034242	302 00 0 00 034221 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4396						STOP2^^
  4397	034243	254 04 0 00 034244 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4398	034244	254 00 0 00 034245 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4399
  4400						TSET^^
  4401			034245			%X=.				;DEFINE %X TO SAVE
  4402	034245	201 00 0 00 034245 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4403	034246	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4404						XCHN2	C2C,44,41^
  4405
  4406					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4407					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4408					;IF ERROR OCCURS CHECK "PIN" PRINT
  4409
  4410						TRPCHK^
  4411	034247	332 00 0 00 030042 	..0104:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-1
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0110

  4412	034250	254 00 0 00 034253 		JRST	.+3			;DONT IF STAND ALONE
  4413	034251	254 02 1 00 034252 		JRSTF	@.+1			;AND RESTORE THEM
  4414	034252	000000	034253			USERF,.+1			;NEW PC AND FLAGS^
  4415						CLRBTH^
  4416	034253	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4417	034254	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4418	034255	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4419	034256	200 00 0 00 041501 		MOVE	[JSP C2C]			;SET UP FOR CORRECT
  4420	034257	202 00 0 00 000044 		MOVEM	44			;INTERRUPT TRAP
  4421	034260	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4422	034261	7 004 20 0 00 004041 		CONO	PI,REQSET!41		;REQUEST INTERRUPT ON TWO CHANNELS
  4423						STUCK^
  4424						WATINT^
  4425	034262	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4426	034263	367 13 0 00 034263 		SOJG	13,.			;AND WAIT^
  4427	034264	254 00 0 00 034264 		JRST	.			;LOOOP ON SELF^
  4428					^
  4429	034265				C2C:	TBOTH^
  4430						TGET^
  4431	034265	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4432	034266	302 00 0 00 034245 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4433						STOP2^^
  4434	034267	254 04 0 00 034270 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4435	034270	254 00 0 00 034271 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4436
  4437						TSET^^
  4438			034271			%X=.				;DEFINE %X TO SAVE
  4439	034271	201 00 0 00 034271 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4440	034272	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4441						XCHN2	C2D,46,21^
  4442
  4443					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4444					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4445					;IF ERROR OCCURS CHECK "PIN" PRINT
  4446
  4447						TRPCHK^
  4448	034273	332 00 0 00 030042 	..0105:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4449	034274	254 00 0 00 034277 		JRST	.+3			;DONT IF STAND ALONE
  4450	034275	254 02 1 00 034276 		JRSTF	@.+1			;AND RESTORE THEM
  4451	034276	000000	034277			USERF,.+1			;NEW PC AND FLAGS^
  4452						CLRBTH^
  4453	034277	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4454	034300	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4455	034301	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4456	034302	200 00 0 00 041502 		MOVE	[JSP C2D]			;SET UP FOR CORRECT
  4457	034303	202 00 0 00 000046 		MOVEM	46			;INTERRUPT TRAP
  4458	034304	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4459	034305	7 004 20 0 00 004021 		CONO	PI,REQSET!21		;REQUEST INTERRUPT ON TWO CHANNELS
  4460						STUCK^
  4461						WATINT^
  4462	034306	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4463	034307	367 13 0 00 034307 		SOJG	13,.			;AND WAIT^
  4464	034310	254 00 0 00 034310 		JRST	.			;LOOOP ON SELF^
  4465					^
  4466	034311				C2D:	TBOTH^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-2
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0111

  4467						TGET^
  4468	034311	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4469	034312	302 00 0 00 034271 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4470						STOP2^^
  4471	034313	254 04 0 00 034314 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4472	034314	254 00 0 00 034315 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4473
  4474						TSET^^
  4475			034315			%X=.				;DEFINE %X TO SAVE
  4476	034315	201 00 0 00 034315 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4477	034316	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4478						XCHN2	C2E,50,11^
  4479
  4480					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4481					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4482					;IF ERROR OCCURS CHECK "PIN" PRINT
  4483
  4484						TRPCHK^
  4485	034317	332 00 0 00 030042 	..0106:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4486	034320	254 00 0 00 034323 		JRST	.+3			;DONT IF STAND ALONE
  4487	034321	254 02 1 00 034322 		JRSTF	@.+1			;AND RESTORE THEM
  4488	034322	000000	034323			USERF,.+1			;NEW PC AND FLAGS^
  4489						CLRBTH^
  4490	034323	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4491	034324	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4492	034325	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4493	034326	200 00 0 00 041503 		MOVE	[JSP C2E]			;SET UP FOR CORRECT
  4494	034327	202 00 0 00 000050 		MOVEM	50			;INTERRUPT TRAP
  4495	034330	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4496	034331	7 004 20 0 00 004011 		CONO	PI,REQSET!11		;REQUEST INTERRUPT ON TWO CHANNELS
  4497						STUCK^
  4498						WATINT^
  4499	034332	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4500	034333	367 13 0 00 034333 		SOJG	13,.			;AND WAIT^
  4501	034334	254 00 0 00 034334 		JRST	.			;LOOOP ON SELF^
  4502					^
  4503	034335				C2E:	TBOTH^
  4504						TGET^
  4505	034335	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4506	034336	302 00 0 00 034315 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4507						STOP2^^
  4508	034337	254 04 0 00 034340 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4509	034340	254 00 0 00 034341 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4510
  4511						TSET^^
  4512			034341			%X=.				;DEFINE %X TO SAVE
  4513	034341	201 00 0 00 034341 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4514	034342	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4515						XCHN2	C2F,52,5^
  4516
  4517					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4518					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4519					;IF ERROR OCCURS CHECK "PIN" PRINT
  4520
  4521						TRPCHK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-3
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0112

  4522	034343	332 00 0 00 030042 	..0107:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4523	034344	254 00 0 00 034347 		JRST	.+3			;DONT IF STAND ALONE
  4524	034345	254 02 1 00 034346 		JRSTF	@.+1			;AND RESTORE THEM
  4525	034346	000000	034347			USERF,.+1			;NEW PC AND FLAGS^
  4526						CLRBTH^
  4527	034347	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4528	034350	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4529	034351	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4530	034352	200 00 0 00 041504 		MOVE	[JSP C2F]			;SET UP FOR CORRECT
  4531	034353	202 00 0 00 000052 		MOVEM	52			;INTERRUPT TRAP
  4532	034354	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4533	034355	7 004 20 0 00 004005 		CONO	PI,REQSET!5		;REQUEST INTERRUPT ON TWO CHANNELS
  4534						STUCK^
  4535						WATINT^
  4536	034356	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4537	034357	367 13 0 00 034357 		SOJG	13,.			;AND WAIT^
  4538	034360	254 00 0 00 034360 		JRST	.			;LOOOP ON SELF^
  4539					^
  4540	034361				C2F:	TBOTH^
  4541						TGET^
  4542	034361	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4543	034362	302 00 0 00 034341 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4544						STOP2^^
  4545	034363	254 04 0 00 034364 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4546	034364	254 00 0 00 034365 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4547
  4548						TSET^^
  4549			034365			%X=.				;DEFINE %X TO SAVE
  4550	034365	201 00 0 00 034365 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4551	034366	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4552						XCHN2	C2G,54,3^
  4553
  4554					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4555					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4556					;IF ERROR OCCURS CHECK "PIN" PRINT
  4557
  4558						TRPCHK^
  4559	034367	332 00 0 00 030042 	..0110:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4560	034370	254 00 0 00 034373 		JRST	.+3			;DONT IF STAND ALONE
  4561	034371	254 02 1 00 034372 		JRSTF	@.+1			;AND RESTORE THEM
  4562	034372	000000	034373			USERF,.+1			;NEW PC AND FLAGS^
  4563						CLRBTH^
  4564	034373	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4565	034374	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4566	034375	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4567	034376	200 00 0 00 041505 		MOVE	[JSP C2G]			;SET UP FOR CORRECT
  4568	034377	202 00 0 00 000054 		MOVEM	54			;INTERRUPT TRAP
  4569	034400	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4570	034401	7 004 20 0 00 004003 		CONO	PI,REQSET!3		;REQUEST INTERRUPT ON TWO CHANNELS
  4571						STUCK^
  4572						WATINT^
  4573	034402	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4574	034403	367 13 0 00 034403 		SOJG	13,.			;AND WAIT^
  4575	034404	254 00 0 00 034404 		JRST	.			;LOOOP ON SELF^
  4576					^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-4
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0113

  4577	034405				C2G:	TBOTH^
  4578						TGET^
  4579	034405	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4580	034406	302 00 0 00 034365 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4581						STOP2^^
  4582	034407	254 04 0 00 034410 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4583	034410	254 00 0 00 034411 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4584
  4585						TSET^^
  4586			034411			%X=.				;DEFINE %X TO SAVE
  4587	034411	201 00 0 00 034411 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4588	034412	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4589						XCHN2	C2H,42,102^
  4590
  4591					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4592					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4593					;IF ERROR OCCURS CHECK "PIN" PRINT
  4594
  4595						TRPCHK^
  4596	034413	332 00 0 00 030042 	..0111:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4597	034414	254 00 0 00 034417 		JRST	.+3			;DONT IF STAND ALONE
  4598	034415	254 02 1 00 034416 		JRSTF	@.+1			;AND RESTORE THEM
  4599	034416	000000	034417			USERF,.+1			;NEW PC AND FLAGS^
  4600						CLRBTH^
  4601	034417	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4602	034420	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4603	034421	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4604	034422	200 00 0 00 041506 		MOVE	[JSP C2H]			;SET UP FOR CORRECT
  4605	034423	202 00 0 00 000042 		MOVEM	42			;INTERRUPT TRAP
  4606	034424	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4607	034425	7 004 20 0 00 004102 		CONO	PI,REQSET!102		;REQUEST INTERRUPT ON TWO CHANNELS
  4608						STUCK^
  4609						WATINT^
  4610	034426	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4611	034427	367 13 0 00 034427 		SOJG	13,.			;AND WAIT^
  4612	034430	254 00 0 00 034430 		JRST	.			;LOOOP ON SELF^
  4613					^
  4614	034431				C2H:	TBOTH^
  4615						TGET^
  4616	034431	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4617	034432	302 00 0 00 034411 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4618						STOP2^^
  4619	034433	254 04 0 00 034434 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4620	034434	254 00 0 00 034435 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4621
  4622						TSET^^
  4623			034435			%X=.				;DEFINE %X TO SAVE
  4624	034435	201 00 0 00 034435 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4625	034436	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4626						XCHN2	C2I,44,42^
  4627
  4628					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4629					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4630					;IF ERROR OCCURS CHECK "PIN" PRINT
  4631
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-5
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0114

  4632						TRPCHK^
  4633	034437	332 00 0 00 030042 	..0112:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4634	034440	254 00 0 00 034443 		JRST	.+3			;DONT IF STAND ALONE
  4635	034441	254 02 1 00 034442 		JRSTF	@.+1			;AND RESTORE THEM
  4636	034442	000000	034443			USERF,.+1			;NEW PC AND FLAGS^
  4637						CLRBTH^
  4638	034443	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4639	034444	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4640	034445	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4641	034446	200 00 0 00 041507 		MOVE	[JSP C2I]			;SET UP FOR CORRECT
  4642	034447	202 00 0 00 000044 		MOVEM	44			;INTERRUPT TRAP
  4643	034450	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4644	034451	7 004 20 0 00 004042 		CONO	PI,REQSET!42		;REQUEST INTERRUPT ON TWO CHANNELS
  4645						STUCK^
  4646						WATINT^
  4647	034452	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4648	034453	367 13 0 00 034453 		SOJG	13,.			;AND WAIT^
  4649	034454	254 00 0 00 034454 		JRST	.			;LOOOP ON SELF^
  4650					^
  4651	034455				C2I:	TBOTH^
  4652						TGET^
  4653	034455	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4654	034456	302 00 0 00 034435 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4655						STOP2^^
  4656	034457	254 04 0 00 034460 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4657	034460	254 00 0 00 034461 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4658
  4659						TSET^^
  4660			034461			%X=.				;DEFINE %X TO SAVE
  4661	034461	201 00 0 00 034461 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4662	034462	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4663						XCHN2	C2J,46,22^
  4664
  4665					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4666					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4667					;IF ERROR OCCURS CHECK "PIN" PRINT
  4668
  4669						TRPCHK^
  4670	034463	332 00 0 00 030042 	..0113:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4671	034464	254 00 0 00 034467 		JRST	.+3			;DONT IF STAND ALONE
  4672	034465	254 02 1 00 034466 		JRSTF	@.+1			;AND RESTORE THEM
  4673	034466	000000	034467			USERF,.+1			;NEW PC AND FLAGS^
  4674						CLRBTH^
  4675	034467	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4676	034470	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4677	034471	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4678	034472	200 00 0 00 041510 		MOVE	[JSP C2J]			;SET UP FOR CORRECT
  4679	034473	202 00 0 00 000046 		MOVEM	46			;INTERRUPT TRAP
  4680	034474	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4681	034475	7 004 20 0 00 004022 		CONO	PI,REQSET!22		;REQUEST INTERRUPT ON TWO CHANNELS
  4682						STUCK^
  4683						WATINT^
  4684	034476	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4685	034477	367 13 0 00 034477 		SOJG	13,.			;AND WAIT^
  4686	034500	254 00 0 00 034500 		JRST	.			;LOOOP ON SELF^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-6
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0115

  4687					^
  4688	034501				C2J:	TBOTH^
  4689						TGET^
  4690	034501	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4691	034502	302 00 0 00 034461 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4692						STOP2^^
  4693	034503	254 04 0 00 034504 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4694	034504	254 00 0 00 034505 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4695
  4696						TSET^^
  4697			034505			%X=.				;DEFINE %X TO SAVE
  4698	034505	201 00 0 00 034505 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4699	034506	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4700						XCHN2	C2K,50,12^
  4701
  4702					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4703					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4704					;IF ERROR OCCURS CHECK "PIN" PRINT
  4705
  4706						TRPCHK^
  4707	034507	332 00 0 00 030042 	..0114:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4708	034510	254 00 0 00 034513 		JRST	.+3			;DONT IF STAND ALONE
  4709	034511	254 02 1 00 034512 		JRSTF	@.+1			;AND RESTORE THEM
  4710	034512	000000	034513			USERF,.+1			;NEW PC AND FLAGS^
  4711						CLRBTH^
  4712	034513	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4713	034514	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4714	034515	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4715	034516	200 00 0 00 041511 		MOVE	[JSP C2K]			;SET UP FOR CORRECT
  4716	034517	202 00 0 00 000050 		MOVEM	50			;INTERRUPT TRAP
  4717	034520	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4718	034521	7 004 20 0 00 004012 		CONO	PI,REQSET!12		;REQUEST INTERRUPT ON TWO CHANNELS
  4719						STUCK^
  4720						WATINT^
  4721	034522	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4722	034523	367 13 0 00 034523 		SOJG	13,.			;AND WAIT^
  4723	034524	254 00 0 00 034524 		JRST	.			;LOOOP ON SELF^
  4724					^
  4725	034525				C2K:	TBOTH^
  4726						TGET^
  4727	034525	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4728	034526	302 00 0 00 034505 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4729						STOP2^^
  4730	034527	254 04 0 00 034530 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4731	034530	254 00 0 00 034531 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4732
  4733						TSET^^
  4734			034531			%X=.				;DEFINE %X TO SAVE
  4735	034531	201 00 0 00 034531 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4736	034532	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4737						XCHN2	C2L,52,6^
  4738
  4739					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4740					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4741					;IF ERROR OCCURS CHECK "PIN" PRINT
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-7
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0116

  4742
  4743						TRPCHK^
  4744	034533	332 00 0 00 030042 	..0115:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4745	034534	254 00 0 00 034537 		JRST	.+3			;DONT IF STAND ALONE
  4746	034535	254 02 1 00 034536 		JRSTF	@.+1			;AND RESTORE THEM
  4747	034536	000000	034537			USERF,.+1			;NEW PC AND FLAGS^
  4748						CLRBTH^
  4749	034537	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4750	034540	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4751	034541	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4752	034542	200 00 0 00 041512 		MOVE	[JSP C2L]			;SET UP FOR CORRECT
  4753	034543	202 00 0 00 000052 		MOVEM	52			;INTERRUPT TRAP
  4754	034544	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4755	034545	7 004 20 0 00 004006 		CONO	PI,REQSET!6		;REQUEST INTERRUPT ON TWO CHANNELS
  4756						STUCK^
  4757						WATINT^
  4758	034546	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4759	034547	367 13 0 00 034547 		SOJG	13,.			;AND WAIT^
  4760	034550	254 00 0 00 034550 		JRST	.			;LOOOP ON SELF^
  4761					^
  4762	034551				C2L:	TBOTH^
  4763						TGET^
  4764	034551	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4765	034552	302 00 0 00 034531 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4766						STOP2^^
  4767	034553	254 04 0 00 034554 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4768	034554	254 00 0 00 034555 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4769
  4770						TSET^^
  4771			034555			%X=.				;DEFINE %X TO SAVE
  4772	034555	201 00 0 00 034555 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4773	034556	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4774						XCHN2	C2M,42,104^
  4775
  4776					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4777					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4778					;IF ERROR OCCURS CHECK "PIN" PRINT
  4779
  4780						TRPCHK^
  4781	034557	332 00 0 00 030042 	..0116:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4782	034560	254 00 0 00 034563 		JRST	.+3			;DONT IF STAND ALONE
  4783	034561	254 02 1 00 034562 		JRSTF	@.+1			;AND RESTORE THEM
  4784	034562	000000	034563			USERF,.+1			;NEW PC AND FLAGS^
  4785						CLRBTH^
  4786	034563	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4787	034564	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4788	034565	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4789	034566	200 00 0 00 041513 		MOVE	[JSP C2M]			;SET UP FOR CORRECT
  4790	034567	202 00 0 00 000042 		MOVEM	42			;INTERRUPT TRAP
  4791	034570	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4792	034571	7 004 20 0 00 004104 		CONO	PI,REQSET!104		;REQUEST INTERRUPT ON TWO CHANNELS
  4793						STUCK^
  4794						WATINT^
  4795	034572	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4796	034573	367 13 0 00 034573 		SOJG	13,.			;AND WAIT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-8
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0117

  4797	034574	254 00 0 00 034574 		JRST	.			;LOOOP ON SELF^
  4798					^
  4799	034575				C2M:	TBOTH^
  4800						TGET^
  4801	034575	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4802	034576	302 00 0 00 034555 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4803						STOP2^^
  4804	034577	254 04 0 00 034600 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4805	034600	254 00 0 00 034601 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4806
  4807						TSET^^
  4808			034601			%X=.				;DEFINE %X TO SAVE
  4809	034601	201 00 0 00 034601 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4810	034602	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4811						XCHN2	C2N,44,44^
  4812
  4813					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4814					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4815					;IF ERROR OCCURS CHECK "PIN" PRINT
  4816
  4817						TRPCHK^
  4818	034603	332 00 0 00 030042 	..0117:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4819	034604	254 00 0 00 034607 		JRST	.+3			;DONT IF STAND ALONE
  4820	034605	254 02 1 00 034606 		JRSTF	@.+1			;AND RESTORE THEM
  4821	034606	000000	034607			USERF,.+1			;NEW PC AND FLAGS^
  4822						CLRBTH^
  4823	034607	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4824	034610	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4825	034611	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4826	034612	200 00 0 00 041514 		MOVE	[JSP C2N]			;SET UP FOR CORRECT
  4827	034613	202 00 0 00 000044 		MOVEM	44			;INTERRUPT TRAP
  4828	034614	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4829	034615	7 004 20 0 00 004044 		CONO	PI,REQSET!44		;REQUEST INTERRUPT ON TWO CHANNELS
  4830						STUCK^
  4831						WATINT^
  4832	034616	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4833	034617	367 13 0 00 034617 		SOJG	13,.			;AND WAIT^
  4834	034620	254 00 0 00 034620 		JRST	.			;LOOOP ON SELF^
  4835					^
  4836	034621				C2N:	TBOTH^
  4837						TGET^
  4838	034621	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4839	034622	302 00 0 00 034601 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4840						STOP2^^
  4841	034623	254 04 0 00 034624 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4842	034624	254 00 0 00 034625 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4843
  4844						TSET^^
  4845			034625			%X=.				;DEFINE %X TO SAVE
  4846	034625	201 00 0 00 034625 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4847	034626	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4848						XCHN2	C2O,46,24^
  4849
  4850					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4851					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-9
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0118

  4852					;IF ERROR OCCURS CHECK "PIN" PRINT
  4853
  4854						TRPCHK^
  4855	034627	332 00 0 00 030042 	..0120:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4856	034630	254 00 0 00 034633 		JRST	.+3			;DONT IF STAND ALONE
  4857	034631	254 02 1 00 034632 		JRSTF	@.+1			;AND RESTORE THEM
  4858	034632	000000	034633			USERF,.+1			;NEW PC AND FLAGS^
  4859						CLRBTH^
  4860	034633	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4861	034634	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4862	034635	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4863	034636	200 00 0 00 041515 		MOVE	[JSP C2O]			;SET UP FOR CORRECT
  4864	034637	202 00 0 00 000046 		MOVEM	46			;INTERRUPT TRAP
  4865	034640	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4866	034641	7 004 20 0 00 004024 		CONO	PI,REQSET!24		;REQUEST INTERRUPT ON TWO CHANNELS
  4867						STUCK^
  4868						WATINT^
  4869	034642	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4870	034643	367 13 0 00 034643 		SOJG	13,.			;AND WAIT^
  4871	034644	254 00 0 00 034644 		JRST	.			;LOOOP ON SELF^
  4872					^
  4873	034645				C2O:	TBOTH^
  4874						TGET^
  4875	034645	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4876	034646	302 00 0 00 034625 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4877						STOP2^^
  4878	034647	254 04 0 00 034650 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4879	034650	254 00 0 00 034651 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4880
  4881						TSET^^
  4882			034651			%X=.				;DEFINE %X TO SAVE
  4883	034651	201 00 0 00 034651 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4884	034652	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4885						XCHN2	C2P,50,14^
  4886
  4887					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4888					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4889					;IF ERROR OCCURS CHECK "PIN" PRINT
  4890
  4891						TRPCHK^
  4892	034653	332 00 0 00 030042 	..0121:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4893	034654	254 00 0 00 034657 		JRST	.+3			;DONT IF STAND ALONE
  4894	034655	254 02 1 00 034656 		JRSTF	@.+1			;AND RESTORE THEM
  4895	034656	000000	034657			USERF,.+1			;NEW PC AND FLAGS^
  4896						CLRBTH^
  4897	034657	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4898	034660	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4899	034661	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4900	034662	200 00 0 00 041516 		MOVE	[JSP C2P]			;SET UP FOR CORRECT
  4901	034663	202 00 0 00 000050 		MOVEM	50			;INTERRUPT TRAP
  4902	034664	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4903	034665	7 004 20 0 00 004014 		CONO	PI,REQSET!14		;REQUEST INTERRUPT ON TWO CHANNELS
  4904						STUCK^
  4905						WATINT^
  4906	034666	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-10
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0119

  4907	034667	367 13 0 00 034667 		SOJG	13,.			;AND WAIT^
  4908	034670	254 00 0 00 034670 		JRST	.			;LOOOP ON SELF^
  4909					^
  4910	034671				C2P:	TBOTH^
  4911						TGET^
  4912	034671	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4913	034672	302 00 0 00 034651 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4914						STOP2^^
  4915	034673	254 04 0 00 034674 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4916	034674	254 00 0 00 034675 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4917
  4918						TSET^^
  4919			034675			%X=.				;DEFINE %X TO SAVE
  4920	034675	201 00 0 00 034675 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4921	034676	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4922						XCHN2	C2Q,42,110^
  4923
  4924					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4925					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4926					;IF ERROR OCCURS CHECK "PIN" PRINT
  4927
  4928						TRPCHK^
  4929	034677	332 00 0 00 030042 	..0122:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4930	034700	254 00 0 00 034703 		JRST	.+3			;DONT IF STAND ALONE
  4931	034701	254 02 1 00 034702 		JRSTF	@.+1			;AND RESTORE THEM
  4932	034702	000000	034703			USERF,.+1			;NEW PC AND FLAGS^
  4933						CLRBTH^
  4934	034703	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4935	034704	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4936	034705	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4937	034706	200 00 0 00 041517 		MOVE	[JSP C2Q]			;SET UP FOR CORRECT
  4938	034707	202 00 0 00 000042 		MOVEM	42			;INTERRUPT TRAP
  4939	034710	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4940	034711	7 004 20 0 00 004110 		CONO	PI,REQSET!110		;REQUEST INTERRUPT ON TWO CHANNELS
  4941						STUCK^
  4942						WATINT^
  4943	034712	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4944	034713	367 13 0 00 034713 		SOJG	13,.			;AND WAIT^
  4945	034714	254 00 0 00 034714 		JRST	.			;LOOOP ON SELF^
  4946					^
  4947	034715				C2Q:	TBOTH^
  4948						TGET^
  4949	034715	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4950	034716	302 00 0 00 034675 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4951						STOP2^^
  4952	034717	254 04 0 00 034720 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4953	034720	254 00 0 00 034721 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4954
  4955						TSET^^
  4956			034721			%X=.				;DEFINE %X TO SAVE
  4957	034721	201 00 0 00 034721 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4958	034722	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4959						XCHN2	C2R,44,50^
  4960
  4961					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-11
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0120

  4962					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4963					;IF ERROR OCCURS CHECK "PIN" PRINT
  4964
  4965						TRPCHK^
  4966	034723	332 00 0 00 030042 	..0123:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  4967	034724	254 00 0 00 034727 		JRST	.+3			;DONT IF STAND ALONE
  4968	034725	254 02 1 00 034726 		JRSTF	@.+1			;AND RESTORE THEM
  4969	034726	000000	034727			USERF,.+1			;NEW PC AND FLAGS^
  4970						CLRBTH^
  4971	034727	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  4972	034730	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  4973	034731	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  4974	034732	200 00 0 00 041520 		MOVE	[JSP C2R]			;SET UP FOR CORRECT
  4975	034733	202 00 0 00 000044 		MOVEM	44			;INTERRUPT TRAP
  4976	034734	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4977	034735	7 004 20 0 00 004050 		CONO	PI,REQSET!50		;REQUEST INTERRUPT ON TWO CHANNELS
  4978						STUCK^
  4979						WATINT^
  4980	034736	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  4981	034737	367 13 0 00 034737 		SOJG	13,.			;AND WAIT^
  4982	034740	254 00 0 00 034740 		JRST	.			;LOOOP ON SELF^
  4983					^
  4984	034741				C2R:	TBOTH^
  4985						TGET^
  4986	034741	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  4987	034742	302 00 0 00 034721 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  4988						STOP2^^
  4989	034743	254 04 0 00 034744 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  4990	034744	254 00 0 00 034745 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  4991
  4992						TSET^^
  4993			034745			%X=.				;DEFINE %X TO SAVE
  4994	034745	201 00 0 00 034745 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  4995	034746	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  4996						XCHN2	C2S,46,30^
  4997
  4998					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4999					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  5000					;IF ERROR OCCURS CHECK "PIN" PRINT
  5001
  5002						TRPCHK^
  5003	034747	332 00 0 00 030042 	..0124:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  5004	034750	254 00 0 00 034753 		JRST	.+3			;DONT IF STAND ALONE
  5005	034751	254 02 1 00 034752 		JRSTF	@.+1			;AND RESTORE THEM
  5006	034752	000000	034753			USERF,.+1			;NEW PC AND FLAGS^
  5007						CLRBTH^
  5008	034753	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5009	034754	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5010	034755	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5011	034756	200 00 0 00 041521 		MOVE	[JSP C2S]			;SET UP FOR CORRECT
  5012	034757	202 00 0 00 000046 		MOVEM	46			;INTERRUPT TRAP
  5013	034760	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  5014	034761	7 004 20 0 00 004030 		CONO	PI,REQSET!30		;REQUEST INTERRUPT ON TWO CHANNELS
  5015						STUCK^
  5016						WATINT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-12
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0121

  5017	034762	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5018	034763	367 13 0 00 034763 		SOJG	13,.			;AND WAIT^
  5019	034764	254 00 0 00 034764 		JRST	.			;LOOOP ON SELF^
  5020					^
  5021	034765				C2S:	TBOTH^
  5022						TGET^
  5023	034765	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5024	034766	302 00 0 00 034745 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5025						STOP2^^
  5026	034767	254 04 0 00 034770 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5027	034770	254 00 0 00 034771 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5028
  5029						TSET^^
  5030			034771			%X=.				;DEFINE %X TO SAVE
  5031	034771	201 00 0 00 034771 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5032	034772	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5033						XCHN2	C2T,42,120^
  5034
  5035					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  5036					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  5037					;IF ERROR OCCURS CHECK "PIN" PRINT
  5038
  5039						TRPCHK^
  5040	034773	332 00 0 00 030042 	..0125:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  5041	034774	254 00 0 00 034777 		JRST	.+3			;DONT IF STAND ALONE
  5042	034775	254 02 1 00 034776 		JRSTF	@.+1			;AND RESTORE THEM
  5043	034776	000000	034777			USERF,.+1			;NEW PC AND FLAGS^
  5044						CLRBTH^
  5045	034777	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5046	035000	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5047	035001	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5048	035002	200 00 0 00 041522 		MOVE	[JSP C2T]			;SET UP FOR CORRECT
  5049	035003	202 00 0 00 000042 		MOVEM	42			;INTERRUPT TRAP
  5050	035004	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  5051	035005	7 004 20 0 00 004120 		CONO	PI,REQSET!120		;REQUEST INTERRUPT ON TWO CHANNELS
  5052						STUCK^
  5053						WATINT^
  5054	035006	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5055	035007	367 13 0 00 035007 		SOJG	13,.			;AND WAIT^
  5056	035010	254 00 0 00 035010 		JRST	.			;LOOOP ON SELF^
  5057					^
  5058	035011				C2T:	TBOTH^
  5059						TGET^
  5060	035011	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5061	035012	302 00 0 00 034771 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5062						STOP2^^
  5063	035013	254 04 0 00 035014 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5064	035014	254 00 0 00 035015 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5065
  5066						TSET^^
  5067			035015			%X=.				;DEFINE %X TO SAVE
  5068	035015	201 00 0 00 035015 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5069	035016	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5070						XCHN2	C2U,44,60^
  5071
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-13
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0122

  5072					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  5073					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  5074					;IF ERROR OCCURS CHECK "PIN" PRINT
  5075
  5076						TRPCHK^
  5077	035017	332 00 0 00 030042 	..0126:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  5078	035020	254 00 0 00 035023 		JRST	.+3			;DONT IF STAND ALONE
  5079	035021	254 02 1 00 035022 		JRSTF	@.+1			;AND RESTORE THEM
  5080	035022	000000	035023			USERF,.+1			;NEW PC AND FLAGS^
  5081						CLRBTH^
  5082	035023	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5083	035024	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5084	035025	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5085	035026	200 00 0 00 041523 		MOVE	[JSP C2U]			;SET UP FOR CORRECT
  5086	035027	202 00 0 00 000044 		MOVEM	44			;INTERRUPT TRAP
  5087	035030	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  5088	035031	7 004 20 0 00 004060 		CONO	PI,REQSET!60		;REQUEST INTERRUPT ON TWO CHANNELS
  5089						STUCK^
  5090						WATINT^
  5091	035032	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5092	035033	367 13 0 00 035033 		SOJG	13,.			;AND WAIT^
  5093	035034	254 00 0 00 035034 		JRST	.			;LOOOP ON SELF^
  5094					^
  5095	035035				C2U:	TBOTH^
  5096						TGET^
  5097	035035	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5098	035036	302 00 0 00 035015 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5099						STOP2^^
  5100	035037	254 04 0 00 035040 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5101	035040	254 00 0 00 035041 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5102
  5103						TSET^^
  5104			035041			%X=.				;DEFINE %X TO SAVE
  5105	035041	201 00 0 00 035041 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5106	035042	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5107						XCHN2	C2V,42,140^
  5108
  5109					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  5110					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  5111					;IF ERROR OCCURS CHECK "PIN" PRINT
  5112
  5113						TRPCHK^
  5114	035043	332 00 0 00 030042 	..0127:	SKIPE	MONFLG			;RESET FLAGS IF IN MONITOR
  5115	035044	254 00 0 00 035047 		JRST	.+3			;DONT IF STAND ALONE
  5116	035045	254 02 1 00 035046 		JRSTF	@.+1			;AND RESTORE THEM
  5117	035046	000000	035047			USERF,.+1			;NEW PC AND FLAGS^
  5118						CLRBTH^
  5119	035047	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5120	035050	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5121	035051	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5122	035052	200 00 0 00 041524 		MOVE	[JSP C2V]			;SET UP FOR CORRECT
  5123	035053	202 00 0 00 000042 		MOVEM	42			;INTERRUPT TRAP
  5124	035054	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  5125	035055	7 004 20 0 00 004140 		CONO	PI,REQSET!140		;REQUEST INTERRUPT ON TWO CHANNELS
  5126						STUCK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 17-14
DBKAHM	MAC	18-Jan-79 11:21		DUAL REQUEST TESTING                                                               SEQ 0123

  5127						WATINT^
  5128	035056	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5129	035057	367 13 0 00 035057 		SOJG	13,.			;AND WAIT^
  5130	035060	254 00 0 00 035060 		JRST	.			;LOOOP ON SELF^
  5131					^
  5132	035061	255 00 0 00 000000 		JFCL
  5133	035062				C2V:	TGET^
  5134	035062	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5135	035063	302 00 0 00 035041 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5136						STOP2^^
  5137	035064	254 04 0 00 035065 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5138	035065	254 00 0 00 035066 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5139						CLRBTH^
  5140	035066	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5141	035067	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0124

  5142					SUBTTL	BASIC NO-SKIP TESTING
  5143					;TEST THE PREFORMANCE OF NO SKIPPING INSTRUCTIONS IN THE INTERRUPT LOCATIONS
  5144					;OUT OF EACH POSSIBLE INTERRUPT LOCATION
  5145
  5146			000100			X=100
  5147			000042			Y=42
  5148					SKIPNO:	REPEAT	7,<
  5149						PSKPA	Y,X
  5150						PSKPB	Y,X
  5151						Y=Y+2
  5152						X=X_-1
  5153					>
  5154
  5155						PSKPA	Y,X^
  5156
  5157					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  5158					;AN INTERRUPT INSTRUCTION.
  5159
  5160						CLRBTH^
  5161	035070	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5162	035071	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5163	035072	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5164	035073	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5165	035074	202 00 0 00 000042 		MOVEM	Y			;INTO TRAP LOCATION
  5166	035075	200 00 0 00 041526 		MOVE	[JSP 1,..0130]		;SECOND TRAP INSTRUCTION
  5167	035076	202 00 0 00 000043 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5168	035077	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5169	035100	7 004 20 0 00 006300 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5170
  5171					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5172
  5173						WATINT^
  5174	035101	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5175	035102	367 13 0 00 035102 		SOJG	13,.			;AND WAIT^
  5176						STOP^
  5177	035103	254 04 0 00 035104 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5178	035104	254 00 0 00 035105 		JRST	.+1			;WITH JRST BACK^
  5179	035105				..0130:	CLRBTH^
  5180	035105	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5181	035106	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5182	035107	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5183						STOP^
  5184	035110	254 04 0 00 035111 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5185	035111	254 00 0 00 035112 		JRST	.+1			;WITH JRST BACK^
  5186					^
  5187						PSKPB	Y,X^
  5188
  5189					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5190					;THE INTERRUPT.
  5191
  5192						CLRBTH^
  5193	035112	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5194	035113	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5195	035114	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5196	035115	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0125

  5197	035116	202 00 0 00 000042 		MOVEM	Y			;INTO TRAP LOCATION
  5198	035117	200 00 0 00 041530 		MOVE	[JSP 1,..0131]		;SECOND TRAP INSTRUCTION
  5199	035120	202 00 0 00 000043 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5200	035121	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5201	035122	7 004 20 0 00 006300 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5202
  5203					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5204
  5205						WATINT^
  5206	035123	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5207	035124	367 13 0 00 035124 		SOJG	13,.			;AND WAIT^
  5208						STOP^
  5209	035125	254 04 0 00 035126 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5210	035126	254 00 0 00 035127 		JRST	.+1			;WITH JRST BACK^
  5211	035127				..0131:	CLRBTH^
  5212	035127	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5213	035130	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5214	035131	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5215						STOP^
  5216	035132	254 04 0 00 035133 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5217	035133	254 00 0 00 035134 		JRST	.+1			;WITH JRST BACK^
  5218					^
  5219			000044			Y=Y+2
  5220			000040			X=X_-1
  5221
  5222
  5223						PSKPA	Y,X^
  5224
  5225					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  5226					;AN INTERRUPT INSTRUCTION.
  5227
  5228						CLRBTH^
  5229	035134	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5230	035135	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5231	035136	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5232	035137	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5233	035140	202 00 0 00 000044 		MOVEM	Y			;INTO TRAP LOCATION
  5234	035141	200 00 0 00 041531 		MOVE	[JSP 1,..0132]		;SECOND TRAP INSTRUCTION
  5235	035142	202 00 0 00 000045 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5236	035143	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5237	035144	7 004 20 0 00 006240 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5238
  5239					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5240
  5241						WATINT^
  5242	035145	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5243	035146	367 13 0 00 035146 		SOJG	13,.			;AND WAIT^
  5244						STOP^
  5245	035147	254 04 0 00 035150 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5246	035150	254 00 0 00 035151 		JRST	.+1			;WITH JRST BACK^
  5247	035151				..0132:	CLRBTH^
  5248	035151	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5249	035152	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5250	035153	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5251						STOP^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0126

  5252	035154	254 04 0 00 035155 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5253	035155	254 00 0 00 035156 		JRST	.+1			;WITH JRST BACK^
  5254					^
  5255						PSKPB	Y,X^
  5256
  5257					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5258					;THE INTERRUPT.
  5259
  5260						CLRBTH^
  5261	035156	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5262	035157	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5263	035160	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5264	035161	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  5265	035162	202 00 0 00 000044 		MOVEM	Y			;INTO TRAP LOCATION
  5266	035163	200 00 0 00 041532 		MOVE	[JSP 1,..0133]		;SECOND TRAP INSTRUCTION
  5267	035164	202 00 0 00 000045 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5268	035165	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5269	035166	7 004 20 0 00 006240 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5270
  5271					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5272
  5273						WATINT^
  5274	035167	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5275	035170	367 13 0 00 035170 		SOJG	13,.			;AND WAIT^
  5276						STOP^
  5277	035171	254 04 0 00 035172 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5278	035172	254 00 0 00 035173 		JRST	.+1			;WITH JRST BACK^
  5279	035173				..0133:	CLRBTH^
  5280	035173	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5281	035174	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5282	035175	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5283						STOP^
  5284	035176	254 04 0 00 035177 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5285	035177	254 00 0 00 035200 		JRST	.+1			;WITH JRST BACK^
  5286					^
  5287			000046			Y=Y+2
  5288			000020			X=X_-1
  5289
  5290
  5291						PSKPA	Y,X^
  5292
  5293					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  5294					;AN INTERRUPT INSTRUCTION.
  5295
  5296						CLRBTH^
  5297	035200	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5298	035201	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5299	035202	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5300	035203	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5301	035204	202 00 0 00 000046 		MOVEM	Y			;INTO TRAP LOCATION
  5302	035205	200 00 0 00 041533 		MOVE	[JSP 1,..0134]		;SECOND TRAP INSTRUCTION
  5303	035206	202 00 0 00 000047 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5304	035207	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5305	035210	7 004 20 0 00 006220 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5306
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-3
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0127

  5307					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5308
  5309						WATINT^
  5310	035211	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5311	035212	367 13 0 00 035212 		SOJG	13,.			;AND WAIT^
  5312						STOP^
  5313	035213	254 04 0 00 035214 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5314	035214	254 00 0 00 035215 		JRST	.+1			;WITH JRST BACK^
  5315	035215				..0134:	CLRBTH^
  5316	035215	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5317	035216	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5318	035217	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5319						STOP^
  5320	035220	254 04 0 00 035221 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5321	035221	254 00 0 00 035222 		JRST	.+1			;WITH JRST BACK^
  5322					^
  5323						PSKPB	Y,X^
  5324
  5325					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5326					;THE INTERRUPT.
  5327
  5328						CLRBTH^
  5329	035222	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5330	035223	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5331	035224	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5332	035225	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  5333	035226	202 00 0 00 000046 		MOVEM	Y			;INTO TRAP LOCATION
  5334	035227	200 00 0 00 041534 		MOVE	[JSP 1,..0135]		;SECOND TRAP INSTRUCTION
  5335	035230	202 00 0 00 000047 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5336	035231	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5337	035232	7 004 20 0 00 006220 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5338
  5339					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5340
  5341						WATINT^
  5342	035233	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5343	035234	367 13 0 00 035234 		SOJG	13,.			;AND WAIT^
  5344						STOP^
  5345	035235	254 04 0 00 035236 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5346	035236	254 00 0 00 035237 		JRST	.+1			;WITH JRST BACK^
  5347	035237				..0135:	CLRBTH^
  5348	035237	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5349	035240	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5350	035241	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5351						STOP^
  5352	035242	254 04 0 00 035243 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5353	035243	254 00 0 00 035244 		JRST	.+1			;WITH JRST BACK^
  5354					^
  5355			000050			Y=Y+2
  5356			000010			X=X_-1
  5357
  5358
  5359						PSKPA	Y,X^
  5360
  5361					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-4
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0128

  5362					;AN INTERRUPT INSTRUCTION.
  5363
  5364						CLRBTH^
  5365	035244	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5366	035245	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5367	035246	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5368	035247	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5369	035250	202 00 0 00 000050 		MOVEM	Y			;INTO TRAP LOCATION
  5370	035251	200 00 0 00 041535 		MOVE	[JSP 1,..0136]		;SECOND TRAP INSTRUCTION
  5371	035252	202 00 0 00 000051 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5372	035253	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5373	035254	7 004 20 0 00 006210 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5374
  5375					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5376
  5377						WATINT^
  5378	035255	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5379	035256	367 13 0 00 035256 		SOJG	13,.			;AND WAIT^
  5380						STOP^
  5381	035257	254 04 0 00 035260 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5382	035260	254 00 0 00 035261 		JRST	.+1			;WITH JRST BACK^
  5383	035261				..0136:	CLRBTH^
  5384	035261	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5385	035262	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5386	035263	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5387						STOP^
  5388	035264	254 04 0 00 035265 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5389	035265	254 00 0 00 035266 		JRST	.+1			;WITH JRST BACK^
  5390					^
  5391						PSKPB	Y,X^
  5392
  5393					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5394					;THE INTERRUPT.
  5395
  5396						CLRBTH^
  5397	035266	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5398	035267	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5399	035270	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5400	035271	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  5401	035272	202 00 0 00 000050 		MOVEM	Y			;INTO TRAP LOCATION
  5402	035273	200 00 0 00 041536 		MOVE	[JSP 1,..0137]		;SECOND TRAP INSTRUCTION
  5403	035274	202 00 0 00 000051 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5404	035275	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5405	035276	7 004 20 0 00 006210 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5406
  5407					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5408
  5409						WATINT^
  5410	035277	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5411	035300	367 13 0 00 035300 		SOJG	13,.			;AND WAIT^
  5412						STOP^
  5413	035301	254 04 0 00 035302 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5414	035302	254 00 0 00 035303 		JRST	.+1			;WITH JRST BACK^
  5415	035303				..0137:	CLRBTH^
  5416	035303	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-5
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0129

  5417	035304	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5418	035305	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5419						STOP^
  5420	035306	254 04 0 00 035307 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5421	035307	254 00 0 00 035310 		JRST	.+1			;WITH JRST BACK^
  5422					^
  5423			000052			Y=Y+2
  5424			000004			X=X_-1
  5425
  5426
  5427						PSKPA	Y,X^
  5428
  5429					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  5430					;AN INTERRUPT INSTRUCTION.
  5431
  5432						CLRBTH^
  5433	035310	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5434	035311	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5435	035312	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5436	035313	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5437	035314	202 00 0 00 000052 		MOVEM	Y			;INTO TRAP LOCATION
  5438	035315	200 00 0 00 041537 		MOVE	[JSP 1,..0140]		;SECOND TRAP INSTRUCTION
  5439	035316	202 00 0 00 000053 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5440	035317	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5441	035320	7 004 20 0 00 006204 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5442
  5443					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5444
  5445						WATINT^
  5446	035321	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5447	035322	367 13 0 00 035322 		SOJG	13,.			;AND WAIT^
  5448						STOP^
  5449	035323	254 04 0 00 035324 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5450	035324	254 00 0 00 035325 		JRST	.+1			;WITH JRST BACK^
  5451	035325				..0140:	CLRBTH^
  5452	035325	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5453	035326	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5454	035327	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5455						STOP^
  5456	035330	254 04 0 00 035331 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5457	035331	254 00 0 00 035332 		JRST	.+1			;WITH JRST BACK^
  5458					^
  5459						PSKPB	Y,X^
  5460
  5461					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5462					;THE INTERRUPT.
  5463
  5464						CLRBTH^
  5465	035332	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5466	035333	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5467	035334	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5468	035335	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  5469	035336	202 00 0 00 000052 		MOVEM	Y			;INTO TRAP LOCATION
  5470	035337	200 00 0 00 041540 		MOVE	[JSP 1,..0141]		;SECOND TRAP INSTRUCTION
  5471	035340	202 00 0 00 000053 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-6
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0130

  5472	035341	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5473	035342	7 004 20 0 00 006204 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5474
  5475					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5476
  5477						WATINT^
  5478	035343	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5479	035344	367 13 0 00 035344 		SOJG	13,.			;AND WAIT^
  5480						STOP^
  5481	035345	254 04 0 00 035346 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5482	035346	254 00 0 00 035347 		JRST	.+1			;WITH JRST BACK^
  5483	035347				..0141:	CLRBTH^
  5484	035347	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5485	035350	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5486	035351	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5487						STOP^
  5488	035352	254 04 0 00 035353 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5489	035353	254 00 0 00 035354 		JRST	.+1			;WITH JRST BACK^
  5490					^
  5491			000054			Y=Y+2
  5492			000002			X=X_-1
  5493
  5494
  5495						PSKPA	Y,X^
  5496
  5497					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  5498					;AN INTERRUPT INSTRUCTION.
  5499
  5500						CLRBTH^
  5501	035354	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5502	035355	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5503	035356	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5504	035357	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5505	035360	202 00 0 00 000054 		MOVEM	Y			;INTO TRAP LOCATION
  5506	035361	200 00 0 00 041541 		MOVE	[JSP 1,..0142]		;SECOND TRAP INSTRUCTION
  5507	035362	202 00 0 00 000055 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5508	035363	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5509	035364	7 004 20 0 00 006202 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5510
  5511					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5512
  5513						WATINT^
  5514	035365	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5515	035366	367 13 0 00 035366 		SOJG	13,.			;AND WAIT^
  5516						STOP^
  5517	035367	254 04 0 00 035370 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5518	035370	254 00 0 00 035371 		JRST	.+1			;WITH JRST BACK^
  5519	035371				..0142:	CLRBTH^
  5520	035371	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5521	035372	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5522	035373	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5523						STOP^
  5524	035374	254 04 0 00 035375 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5525	035375	254 00 0 00 035376 		JRST	.+1			;WITH JRST BACK^
  5526					^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-7
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0131

  5527						PSKPB	Y,X^
  5528
  5529					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5530					;THE INTERRUPT.
  5531
  5532						CLRBTH^
  5533	035376	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5534	035377	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5535	035400	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5536	035401	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  5537	035402	202 00 0 00 000054 		MOVEM	Y			;INTO TRAP LOCATION
  5538	035403	200 00 0 00 041542 		MOVE	[JSP 1,..0143]		;SECOND TRAP INSTRUCTION
  5539	035404	202 00 0 00 000055 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5540	035405	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5541	035406	7 004 20 0 00 006202 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5542
  5543					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5544
  5545						WATINT^
  5546	035407	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5547	035410	367 13 0 00 035410 		SOJG	13,.			;AND WAIT^
  5548						STOP^
  5549	035411	254 04 0 00 035412 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5550	035412	254 00 0 00 035413 		JRST	.+1			;WITH JRST BACK^
  5551	035413				..0143:	CLRBTH^
  5552	035413	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5553	035414	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5554	035415	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5555						STOP^
  5556	035416	254 04 0 00 035417 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5557	035417	254 00 0 00 035420 		JRST	.+1			;WITH JRST BACK^
  5558					^
  5559			000056			Y=Y+2
  5560			000001			X=X_-1
  5561
  5562
  5563						PSKPA	Y,X^
  5564
  5565					;TEST THAT AOSE DOES NOT DISMISS INTERRUPTS, OR SKIP WHEN EXECUTED AS
  5566					;AN INTERRUPT INSTRUCTION.
  5567
  5568						CLRBTH^
  5569	035420	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5570	035421	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5571	035422	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5572	035423	200 00 0 00 041525 		MOVE	[AOSE 0]		;PI TRAP INSTRUCTION
  5573	035424	202 00 0 00 000056 		MOVEM	Y			;INTO TRAP LOCATION
  5574	035425	200 00 0 00 041543 		MOVE	[JSP 1,..0144]		;SECOND TRAP INSTRUCTION
  5575	035426	202 00 0 00 000057 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5576	035427	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5577	035430	7 004 20 0 00 006201 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5578
  5579					;IF WE FALL THROUGH THEN THE INTERRUPT WAS DISMISSED WHEN THE AOS FAILED
  5580
  5581						WATINT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 18-8
DBKAHM	MAC	18-Jan-79 11:21		BASIC NO-SKIP TESTING                                                              SEQ 0132

  5582	035431	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5583	035432	367 13 0 00 035432 		SOJG	13,.			;AND WAIT^
  5584						STOP^
  5585	035433	254 04 0 00 035434 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5586	035434	254 00 0 00 035435 		JRST	.+1			;WITH JRST BACK^
  5587	035435				..0144:	CLRBTH^
  5588	035435	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5589	035436	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5590	035437	302 00 0 00 000002 		CAIE	2			;ONLY ONE AOSE PREFORMED?
  5591						STOP^
  5592	035440	254 04 0 00 035441 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5593	035441	254 00 0 00 035442 		JRST	.+1			;WITH JRST BACK^
  5594					^
  5595						PSKPB	Y,X^
  5596
  5597					;CHECK THAT SKIPE DOES NOT SKIP, OR MODIFY THE AC, OR DISMISS
  5598					;THE INTERRUPT.
  5599
  5600						CLRBTH^
  5601	035442	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5602	035443	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5603	035444	264 00 0 00 041106 		HALTPI				;FILL INTERRUPT LOCATIONS WITH HALTS
  5604	035445	200 00 0 00 041527 		MOVE	[SKIPE 0,0]		;PI TRAP INSTRUCTION(SHOULD NOT SKIP)
  5605	035446	202 00 0 00 000056 		MOVEM	Y			;INTO TRAP LOCATION
  5606	035447	200 00 0 00 041544 		MOVE	[JSP 1,..0145]		;SECOND TRAP INSTRUCTION
  5607	035450	202 00 0 00 000057 		MOVEM	Y+1			;INTO SECOND PI INSTRUCTION
  5608	035451	201 00 0 00 000001 		MOVEI	1			;SET AC TO NON ZERO
  5609	035452	7 004 20 0 00 006201 		CONO	PI,REQSET!PION!CHNON!X ;REQUEST INTERRUPT ON CH X
  5610
  5611					;IF WE FALL THROUGH TO HERE, THEN THE INT. WAS DISMISSED AND SHOULDN'T HAVE BEEN
  5612
  5613						WATINT^
  5614	035453	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5615	035454	367 13 0 00 035454 		SOJG	13,.			;AND WAIT^
  5616						STOP^
  5617	035455	254 04 0 00 035456 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5618	035456	254 00 0 00 035457 		JRST	.+1			;WITH JRST BACK^
  5619	035457				..0145:	CLRBTH^
  5620	035457	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5621	035460	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5622	035461	302 00 0 00 000001 		CAIE	1			;JUMPE SHOULD HAVE NOT MODIFIED THE AC
  5623						STOP^
  5624	035462	254 04 0 00 035463 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5625	035463	254 00 0 00 035464 		JRST	.+1			;WITH JRST BACK^
  5626					^
  5627			000060			Y=Y+2
  5628			000000			X=X_-1
  5629
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 19
DBKAHM	MAC	18-Jan-79 11:21		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0133

  5630					SUBTTL	TEST THE ABILITY TO DISMISS INTERRUPTS
  5631					;CHECK THAT "JEN" DISMISSES INTERRUPTS
  5632
  5633
  5634			000042			X=42
  5635			000100			Z1=100
  5636					JENDIS:	REPEAT	7,<
  5637						PIDIS	X,Z1
  5638					
  5639						X=X+2
  5640						Z1=Z1_-1
  5641					>
  5642
  5643						PIDIS	X,Z1^
  5644
  5645					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5646
  5647						TSET^
  5648			035464			%X=.				;DEFINE %X TO SAVE
  5649	035464	201 00 0 00 035464 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5650	035465	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5651	035466	200 00 0 00 041545 	..0146:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5652	035467	202 00 0 00 000042 		MOVEM	X			;INTO X
  5653	035470	7 004 20 0 00 006300 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5654						WATINT^
  5655	035471	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5656	035472	367 13 0 00 035472 		SOJG	13,.			;AND WAIT^
  5657	035473	254 00 0 00 035476 		JRST	.+3
  5658	035474	7 004 20 0 00 022300 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5659	035475	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5660	035476	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5661						STOP^
  5662	035477	254 04 0 00 035500 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5663	035500	254 00 0 00 035501 		JRST	.+1			;WITH JRST BACK^
  5664						TGET^
  5665	035501	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5666	035502	302 00 0 00 035464 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5667						STOP2^^
  5668	035503	254 04 0 00 035504 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5669	035504	254 00 0 00 035505 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5670						CLRBTH^
  5671	035505	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5672	035506	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5673					^
  5674
  5675			000044			X=X+2
  5676			000040			Z1=Z1_-1
  5677
  5678
  5679						PIDIS	X,Z1^
  5680
  5681					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5682
  5683						TSET^
  5684			035507			%X=.				;DEFINE %X TO SAVE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 19-1
DBKAHM	MAC	18-Jan-79 11:21		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0134

  5685	035507	201 00 0 00 035507 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5686	035510	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5687	035511	200 00 0 00 041546 	..0147:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5688	035512	202 00 0 00 000044 		MOVEM	X			;INTO X
  5689	035513	7 004 20 0 00 006240 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5690						WATINT^
  5691	035514	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5692	035515	367 13 0 00 035515 		SOJG	13,.			;AND WAIT^
  5693	035516	254 00 0 00 035521 		JRST	.+3
  5694	035517	7 004 20 0 00 022240 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5695	035520	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5696	035521	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5697						STOP^
  5698	035522	254 04 0 00 035523 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5699	035523	254 00 0 00 035524 		JRST	.+1			;WITH JRST BACK^
  5700						TGET^
  5701	035524	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5702	035525	302 00 0 00 035507 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5703						STOP2^^
  5704	035526	254 04 0 00 035527 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5705	035527	254 00 0 00 035530 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5706						CLRBTH^
  5707	035530	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5708	035531	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5709					^
  5710
  5711			000046			X=X+2
  5712			000020			Z1=Z1_-1
  5713
  5714
  5715						PIDIS	X,Z1^
  5716
  5717					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5718
  5719						TSET^
  5720			035532			%X=.				;DEFINE %X TO SAVE
  5721	035532	201 00 0 00 035532 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5722	035533	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5723	035534	200 00 0 00 041547 	..0150:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5724	035535	202 00 0 00 000046 		MOVEM	X			;INTO X
  5725	035536	7 004 20 0 00 006220 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5726						WATINT^
  5727	035537	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5728	035540	367 13 0 00 035540 		SOJG	13,.			;AND WAIT^
  5729	035541	254 00 0 00 035544 		JRST	.+3
  5730	035542	7 004 20 0 00 022220 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5731	035543	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5732	035544	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5733						STOP^
  5734	035545	254 04 0 00 035546 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5735	035546	254 00 0 00 035547 		JRST	.+1			;WITH JRST BACK^
  5736						TGET^
  5737	035547	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5738	035550	302 00 0 00 035532 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5739						STOP2^^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 19-2
DBKAHM	MAC	18-Jan-79 11:21		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0135

  5740	035551	254 04 0 00 035552 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5741	035552	254 00 0 00 035553 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5742						CLRBTH^
  5743	035553	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5744	035554	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5745					^
  5746
  5747			000050			X=X+2
  5748			000010			Z1=Z1_-1
  5749
  5750
  5751						PIDIS	X,Z1^
  5752
  5753					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5754
  5755						TSET^
  5756			035555			%X=.				;DEFINE %X TO SAVE
  5757	035555	201 00 0 00 035555 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5758	035556	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5759	035557	200 00 0 00 041550 	..0151:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5760	035560	202 00 0 00 000050 		MOVEM	X			;INTO X
  5761	035561	7 004 20 0 00 006210 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5762						WATINT^
  5763	035562	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5764	035563	367 13 0 00 035563 		SOJG	13,.			;AND WAIT^
  5765	035564	254 00 0 00 035567 		JRST	.+3
  5766	035565	7 004 20 0 00 022210 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5767	035566	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5768	035567	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5769						STOP^
  5770	035570	254 04 0 00 035571 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5771	035571	254 00 0 00 035572 		JRST	.+1			;WITH JRST BACK^
  5772						TGET^
  5773	035572	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5774	035573	302 00 0 00 035555 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5775						STOP2^^
  5776	035574	254 04 0 00 035575 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5777	035575	254 00 0 00 035576 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5778						CLRBTH^
  5779	035576	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5780	035577	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5781					^
  5782
  5783			000052			X=X+2
  5784			000004			Z1=Z1_-1
  5785
  5786
  5787						PIDIS	X,Z1^
  5788
  5789					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5790
  5791						TSET^
  5792			035600			%X=.				;DEFINE %X TO SAVE
  5793	035600	201 00 0 00 035600 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5794	035601	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 19-3
DBKAHM	MAC	18-Jan-79 11:21		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0136

  5795	035602	200 00 0 00 041551 	..0152:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5796	035603	202 00 0 00 000052 		MOVEM	X			;INTO X
  5797	035604	7 004 20 0 00 006204 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5798						WATINT^
  5799	035605	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5800	035606	367 13 0 00 035606 		SOJG	13,.			;AND WAIT^
  5801	035607	254 00 0 00 035612 		JRST	.+3
  5802	035610	7 004 20 0 00 022204 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5803	035611	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5804	035612	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5805						STOP^
  5806	035613	254 04 0 00 035614 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5807	035614	254 00 0 00 035615 		JRST	.+1			;WITH JRST BACK^
  5808						TGET^
  5809	035615	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5810	035616	302 00 0 00 035600 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5811						STOP2^^
  5812	035617	254 04 0 00 035620 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5813	035620	254 00 0 00 035621 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5814						CLRBTH^
  5815	035621	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5816	035622	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5817					^
  5818
  5819			000054			X=X+2
  5820			000002			Z1=Z1_-1
  5821
  5822
  5823						PIDIS	X,Z1^
  5824
  5825					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5826
  5827						TSET^
  5828			035623			%X=.				;DEFINE %X TO SAVE
  5829	035623	201 00 0 00 035623 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5830	035624	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5831	035625	200 00 0 00 041552 	..0153:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5832	035626	202 00 0 00 000054 		MOVEM	X			;INTO X
  5833	035627	7 004 20 0 00 006202 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5834						WATINT^
  5835	035630	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5836	035631	367 13 0 00 035631 		SOJG	13,.			;AND WAIT^
  5837	035632	254 00 0 00 035635 		JRST	.+3
  5838	035633	7 004 20 0 00 022202 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5839	035634	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5840	035635	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5841						STOP^
  5842	035636	254 04 0 00 035637 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5843	035637	254 00 0 00 035640 		JRST	.+1			;WITH JRST BACK^
  5844						TGET^
  5845	035640	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5846	035641	302 00 0 00 035623 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5847						STOP2^^
  5848	035642	254 04 0 00 035643 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5849	035643	254 00 0 00 035644 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 19-4
DBKAHM	MAC	18-Jan-79 11:21		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0137

  5850						CLRBTH^
  5851	035644	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5852	035645	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5853					^
  5854
  5855			000056			X=X+2
  5856			000001			Z1=Z1_-1
  5857
  5858
  5859						PIDIS	X,Z1^
  5860
  5861					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  5862
  5863						TSET^
  5864			035646			%X=.				;DEFINE %X TO SAVE
  5865	035646	201 00 0 00 035646 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  5866	035647	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  5867	035650	200 00 0 00 041553 	..0154:	MOVE	[JSP 1,.+6]		;PUT THE PI TRAP INSTRUCTION
  5868	035651	202 00 0 00 000056 		MOVEM	X			;INTO X
  5869	035652	7 004 20 0 00 006201 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  5870						WATINT^
  5871	035653	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5872	035654	367 13 0 00 035654 		SOJG	13,.			;AND WAIT^
  5873	035655	254 00 0 00 035660 		JRST	.+3
  5874	035656	7 004 20 0 00 022201 		CONO	PI,CHNON+PION+IRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  5875	035657	254 12 1 00 000001 		JEN	@1			;DISMISS THE INTERRUPT
  5876	035660	7 004 30 0 00 077400 		CONSZ	PI,77400		;NO REQUESTS SHOULD BE SET
  5877						STOP^
  5878	035661	254 04 0 00 035662 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5879	035662	254 00 0 00 035663 		JRST	.+1			;WITH JRST BACK^
  5880						TGET^
  5881	035663	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  5882	035664	302 00 0 00 035646 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  5883						STOP2^^
  5884	035665	254 04 0 00 035666 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  5885	035666	254 00 0 00 035667 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  5886						CLRBTH^
  5887	035667	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5888	035670	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5889					^
  5890
  5891			000060			X=X+2
  5892			000000			Z1=Z1_-1
  5893
  5894	035671	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 20
DBKAHM	MAC	18-Jan-79 11:21		TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK                                         SEQ 0138

  5895					SUBTTL	TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK
  5896					;TEST THAT THE CLOCK WILL NOT CAUSE AN INTERRUPT WHEN ENABLED AND
  5897					;NO APR CLOCK CHANNEL IS SET..
  5898						BLURB^
  5899					;LOCATIONS 40-60 CONTAIN A JSP TO A ROUTINE WHICH STORES
  5900					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  5901					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  5902					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  5903					^
  5904	035672				CKCK0:	CLRBTH^
  5905	035672	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5906	035673	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5907	035674	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  5908	035675	7 000 34 0 00 001000 		CONSO	CLK			;WAIT FOR THE CLOCK
  5909	035676	254 00 0 00 035675 		JRST	.-1			;IF STUCK NO CLOCK FLAG
  5910	035677	400 00 0 00 000000 		SETZ				;CLEAR 0
  5911	035700	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  5912	035701	7 000 20 0 00 002000 		CONO	APR,CLKENB		;ENABLE THE CLOCK
  5913						WATINT^
  5914	035702	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5915	035703	367 13 0 00 035703 		SOJG	13,.			;AND WAIT^
  5916	035704	332 00 0 00 000000 		SKIPE				;AC0=0
  5917						STOP^
  5918	035705	254 04 0 00 035706 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5919	035706	254 00 0 00 035707 		JRST	.+1			;WITH JRST BACK^
  5920
  5921
  5922					;TEST THAT THE CLOCK WILL NOT INTERRUPT WITHOUT CLOCK ENABLE SET
  5923					;ON ALL CHANNELS
  5924
  5925			000001			X=1
  5926					CKCK1:	REPEAT	7,<
  5927					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  5928					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5929					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5930					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5931						CLRBTH
  5932						TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  5933						SETZ	0,			;INSURE ZERO AC0.
  5934						CONSO	APR,CLK			;WAIT FOR THE CLOCK
  5935						JRST	.-1
  5936						CONO	PI,PION!CHNON!177	;ENABLE PI'S
  5937						CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  5938						WATINT
  5939						SKIPE				;AC0=0
  5940						STOP
  5941						X=X+1
  5942					>
  5943
  5944					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  5945					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5946					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5947					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5948						CLRBTH^
  5949	035707	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 20-1
DBKAHM	MAC	18-Jan-79 11:21		TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK                                         SEQ 0139

  5950	035710	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5951	035711	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  5952	035712	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  5953	035713	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  5954	035714	254 00 0 00 035713 		JRST	.-1
  5955	035715	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  5956	035716	7 000 20 0 00 004001 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  5957						WATINT^
  5958	035717	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5959	035720	367 13 0 00 035720 		SOJG	13,.			;AND WAIT^
  5960	035721	332 00 0 00 000000 		SKIPE				;AC0=0
  5961						STOP^
  5962	035722	254 04 0 00 035723 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5963	035723	254 00 0 00 035724 		JRST	.+1			;WITH JRST BACK^
  5964			000002			X=X+1
  5965
  5966
  5967					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  5968					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5969					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5970					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5971						CLRBTH^
  5972	035724	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5973	035725	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5974	035726	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  5975	035727	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  5976	035730	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  5977	035731	254 00 0 00 035730 		JRST	.-1
  5978	035732	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  5979	035733	7 000 20 0 00 004002 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  5980						WATINT^
  5981	035734	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  5982	035735	367 13 0 00 035735 		SOJG	13,.			;AND WAIT^
  5983	035736	332 00 0 00 000000 		SKIPE				;AC0=0
  5984						STOP^
  5985	035737	254 04 0 00 035740 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  5986	035740	254 00 0 00 035741 		JRST	.+1			;WITH JRST BACK^
  5987			000003			X=X+1
  5988
  5989
  5990					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  5991					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5992					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5993					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5994						CLRBTH^
  5995	035741	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  5996	035742	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  5997	035743	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  5998	035744	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  5999	035745	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  6000	035746	254 00 0 00 035745 		JRST	.-1
  6001	035747	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  6002	035750	7 000 20 0 00 004003 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  6003						WATINT^
  6004	035751	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 20-2
DBKAHM	MAC	18-Jan-79 11:21		TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK                                         SEQ 0140

  6005	035752	367 13 0 00 035752 		SOJG	13,.			;AND WAIT^
  6006	035753	332 00 0 00 000000 		SKIPE				;AC0=0
  6007						STOP^
  6008	035754	254 04 0 00 035755 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6009	035755	254 00 0 00 035756 		JRST	.+1			;WITH JRST BACK^
  6010			000004			X=X+1
  6011
  6012
  6013					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  6014					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  6015					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  6016					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  6017						CLRBTH^
  6018	035756	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6019	035757	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6020	035760	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  6021	035761	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  6022	035762	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  6023	035763	254 00 0 00 035762 		JRST	.-1
  6024	035764	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  6025	035765	7 000 20 0 00 004004 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  6026						WATINT^
  6027	035766	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  6028	035767	367 13 0 00 035767 		SOJG	13,.			;AND WAIT^
  6029	035770	332 00 0 00 000000 		SKIPE				;AC0=0
  6030						STOP^
  6031	035771	254 04 0 00 035772 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6032	035772	254 00 0 00 035773 		JRST	.+1			;WITH JRST BACK^
  6033			000005			X=X+1
  6034
  6035
  6036					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  6037					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  6038					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  6039					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  6040						CLRBTH^
  6041	035773	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6042	035774	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6043	035775	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  6044	035776	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  6045	035777	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  6046	036000	254 00 0 00 035777 		JRST	.-1
  6047	036001	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  6048	036002	7 000 20 0 00 004005 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  6049						WATINT^
  6050	036003	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  6051	036004	367 13 0 00 036004 		SOJG	13,.			;AND WAIT^
  6052	036005	332 00 0 00 000000 		SKIPE				;AC0=0
  6053						STOP^
  6054	036006	254 04 0 00 036007 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6055	036007	254 00 0 00 036010 		JRST	.+1			;WITH JRST BACK^
  6056			000006			X=X+1
  6057
  6058
  6059					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 20-3
DBKAHM	MAC	18-Jan-79 11:21		TICKLE THE INTERRUPT SYSTEM WITH THE CLOCK                                         SEQ 0141

  6060					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  6061					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  6062					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  6063						CLRBTH^
  6064	036010	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6065	036011	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6066	036012	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  6067	036013	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  6068	036014	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  6069	036015	254 00 0 00 036014 		JRST	.-1
  6070	036016	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  6071	036017	7 000 20 0 00 004006 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  6072						WATINT^
  6073	036020	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  6074	036021	367 13 0 00 036021 		SOJG	13,.			;AND WAIT^
  6075	036022	332 00 0 00 000000 		SKIPE				;AC0=0
  6076						STOP^
  6077	036023	254 04 0 00 036024 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6078	036024	254 00 0 00 036025 		JRST	.+1			;WITH JRST BACK^
  6079			000007			X=X+1
  6080
  6081
  6082					;THE PROGRAM WILL WAIT FOR THE CLOCK TO INTERRUPT ON EACH CHANNEL
  6083					;WITHOUT CLOCK ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  6084					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  6085					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  6086						CLRBTH^
  6087	036025	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6088	036026	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6089	036027	264 00 0 00 041123 		TRPPI				;FILL INTERRUPT LOCATIONS WITH TRAPS
  6090	036030	400 00 0 00 000000 		SETZ	0,			;INSURE ZERO AC0.
  6091	036031	7 000 34 0 00 001000 		CONSO	APR,CLK			;WAIT FOR THE CLOCK
  6092	036032	254 00 0 00 036031 		JRST	.-1
  6093	036033	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  6094	036034	7 000 20 0 00 004007 		CONO	APR,CLKDIS!X		;DISABLE THE CLOCK AN SET CH X
  6095						WATINT^
  6096	036035	201 13 0 00 000010 		MOVEI	13,10			;SET UP LOOP OF TEN TO WAIT FOR INT.
  6097	036036	367 13 0 00 036036 		SOJG	13,.			;AND WAIT^
  6098	036037	332 00 0 00 000000 		SKIPE				;AC0=0
  6099						STOP^
  6100	036040	254 04 0 00 036041 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6101	036041	254 00 0 00 036042 		JRST	.+1			;WITH JRST BACK^
  6102			000010			X=X+1
  6103
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0142

  6104					SUBTTL	TEST VARIOUS RESETS
  6105
  6106					;TRY TO RESET THE PI BITS VIA CONO RESET TO THE APR
  6107	036042				RESET1:	CLRBTH^
  6108	036042	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6109	036043	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6110	036044	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;TURN ON PI SYSTEM
  6111	036045	7 000 20 0 00 200000 		CONO	APR,IOCLR		;RESET THE I/O BUS
  6112	036046	7 004 34 0 00 000377 		CONSO	PI,PION!177		;ALL PI BITS SHOULD STILL BE SET
  6113						STOP^
  6114	036047	254 04 0 00 036050 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6115	036050	254 00 0 00 036051 		JRST	.+1			;WITH JRST BACK^
  6116
  6117					;TRY TO RESET THE APR WITH A RESET TO THE PI.
  6118	036051				RESET2:	CLRBTH^
  6119	036051	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6120	036052	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6121	036053	7 000 20 0 00 000077 		CONO	APR,77			;SET CLOCK AND ERROR PIA'S
  6122	036054	7 004 20 0 00 010000 		CONO	PI,PICLR		;CLEAR THE PI SYSTEM
  6123	036055	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6124						STOP^
  6125	036056	254 04 0 00 036057 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6126	036057	254 00 0 00 036060 		JRST	.+1			;WITH JRST BACK^
  6127
  6128			000001			X=1
  6129					RESET3:	REPEAT	^D18,<
  6130					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6131						CLRBTH
  6132						CONO	PI,PION!CHNON!177
  6133						CONO	APR,77			;TURN ON PI AND APR BITS
  6134						CONO	LAST,X			;SEND AND IOB BIT OUT
  6135						CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6136						STOP
  6137						CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6138						STOP
  6139						X=X_1				;NEXT BIT
  6140					>
  6141
  6142					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6143						CLRBTH^
  6144	036060	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6145	036061	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6146	036062	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6147	036063	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6148	036064	7 774 20 0 00 000001 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6149	036065	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6150						STOP^
  6151	036066	254 04 0 00 036067 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6152	036067	254 00 0 00 036070 		JRST	.+1			;WITH JRST BACK^
  6153	036070	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6154						STOP^
  6155	036071	254 04 0 00 036072 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6156	036072	254 00 0 00 036073 		JRST	.+1			;WITH JRST BACK^
  6157			000002			X=X_1				;NEXT BIT
  6158
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21-1
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0143

  6159
  6160					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6161						CLRBTH^
  6162	036073	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6163	036074	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6164	036075	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6165	036076	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6166	036077	7 774 20 0 00 000002 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6167	036100	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6168						STOP^
  6169	036101	254 04 0 00 036102 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6170	036102	254 00 0 00 036103 		JRST	.+1			;WITH JRST BACK^
  6171	036103	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6172						STOP^
  6173	036104	254 04 0 00 036105 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6174	036105	254 00 0 00 036106 		JRST	.+1			;WITH JRST BACK^
  6175			000004			X=X_1				;NEXT BIT
  6176
  6177
  6178					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6179						CLRBTH^
  6180	036106	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6181	036107	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6182	036110	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6183	036111	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6184	036112	7 774 20 0 00 000004 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6185	036113	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6186						STOP^
  6187	036114	254 04 0 00 036115 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6188	036115	254 00 0 00 036116 		JRST	.+1			;WITH JRST BACK^
  6189	036116	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6190						STOP^
  6191	036117	254 04 0 00 036120 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6192	036120	254 00 0 00 036121 		JRST	.+1			;WITH JRST BACK^
  6193			000010			X=X_1				;NEXT BIT
  6194
  6195
  6196					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6197						CLRBTH^
  6198	036121	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6199	036122	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6200	036123	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6201	036124	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6202	036125	7 774 20 0 00 000010 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6203	036126	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6204						STOP^
  6205	036127	254 04 0 00 036130 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6206	036130	254 00 0 00 036131 		JRST	.+1			;WITH JRST BACK^
  6207	036131	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6208						STOP^
  6209	036132	254 04 0 00 036133 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6210	036133	254 00 0 00 036134 		JRST	.+1			;WITH JRST BACK^
  6211			000020			X=X_1				;NEXT BIT
  6212
  6213
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21-2
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0144

  6214					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6215						CLRBTH^
  6216	036134	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6217	036135	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6218	036136	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6219	036137	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6220	036140	7 774 20 0 00 000020 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6221	036141	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6222						STOP^
  6223	036142	254 04 0 00 036143 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6224	036143	254 00 0 00 036144 		JRST	.+1			;WITH JRST BACK^
  6225	036144	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6226						STOP^
  6227	036145	254 04 0 00 036146 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6228	036146	254 00 0 00 036147 		JRST	.+1			;WITH JRST BACK^
  6229			000040			X=X_1				;NEXT BIT
  6230
  6231
  6232					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6233						CLRBTH^
  6234	036147	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6235	036150	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6236	036151	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6237	036152	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6238	036153	7 774 20 0 00 000040 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6239	036154	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6240						STOP^
  6241	036155	254 04 0 00 036156 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6242	036156	254 00 0 00 036157 		JRST	.+1			;WITH JRST BACK^
  6243	036157	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6244						STOP^
  6245	036160	254 04 0 00 036161 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6246	036161	254 00 0 00 036162 		JRST	.+1			;WITH JRST BACK^
  6247			000100			X=X_1				;NEXT BIT
  6248
  6249
  6250					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6251						CLRBTH^
  6252	036162	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6253	036163	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6254	036164	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6255	036165	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6256	036166	7 774 20 0 00 000100 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6257	036167	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6258						STOP^
  6259	036170	254 04 0 00 036171 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6260	036171	254 00 0 00 036172 		JRST	.+1			;WITH JRST BACK^
  6261	036172	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6262						STOP^
  6263	036173	254 04 0 00 036174 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6264	036174	254 00 0 00 036175 		JRST	.+1			;WITH JRST BACK^
  6265			000200			X=X_1				;NEXT BIT
  6266
  6267
  6268					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21-3
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0145

  6269						CLRBTH^
  6270	036175	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6271	036176	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6272	036177	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6273	036200	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6274	036201	7 774 20 0 00 000200 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6275	036202	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6276						STOP^
  6277	036203	254 04 0 00 036204 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6278	036204	254 00 0 00 036205 		JRST	.+1			;WITH JRST BACK^
  6279	036205	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6280						STOP^
  6281	036206	254 04 0 00 036207 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6282	036207	254 00 0 00 036210 		JRST	.+1			;WITH JRST BACK^
  6283			000400			X=X_1				;NEXT BIT
  6284
  6285
  6286					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6287						CLRBTH^
  6288	036210	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6289	036211	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6290	036212	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6291	036213	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6292	036214	7 774 20 0 00 000400 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6293	036215	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6294						STOP^
  6295	036216	254 04 0 00 036217 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6296	036217	254 00 0 00 036220 		JRST	.+1			;WITH JRST BACK^
  6297	036220	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6298						STOP^
  6299	036221	254 04 0 00 036222 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6300	036222	254 00 0 00 036223 		JRST	.+1			;WITH JRST BACK^
  6301			001000			X=X_1				;NEXT BIT
  6302
  6303
  6304					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6305						CLRBTH^
  6306	036223	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6307	036224	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6308	036225	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6309	036226	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6310	036227	7 774 20 0 00 001000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6311	036230	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6312						STOP^
  6313	036231	254 04 0 00 036232 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6314	036232	254 00 0 00 036233 		JRST	.+1			;WITH JRST BACK^
  6315	036233	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6316						STOP^
  6317	036234	254 04 0 00 036235 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6318	036235	254 00 0 00 036236 		JRST	.+1			;WITH JRST BACK^
  6319			002000			X=X_1				;NEXT BIT
  6320
  6321
  6322					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6323						CLRBTH^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21-4
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0146

  6324	036236	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6325	036237	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6326	036240	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6327	036241	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6328	036242	7 774 20 0 00 002000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6329	036243	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6330						STOP^
  6331	036244	254 04 0 00 036245 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6332	036245	254 00 0 00 036246 		JRST	.+1			;WITH JRST BACK^
  6333	036246	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6334						STOP^
  6335	036247	254 04 0 00 036250 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6336	036250	254 00 0 00 036251 		JRST	.+1			;WITH JRST BACK^
  6337			004000			X=X_1				;NEXT BIT
  6338
  6339
  6340					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6341						CLRBTH^
  6342	036251	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6343	036252	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6344	036253	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6345	036254	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6346	036255	7 774 20 0 00 004000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6347	036256	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6348						STOP^
  6349	036257	254 04 0 00 036260 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6350	036260	254 00 0 00 036261 		JRST	.+1			;WITH JRST BACK^
  6351	036261	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6352						STOP^
  6353	036262	254 04 0 00 036263 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6354	036263	254 00 0 00 036264 		JRST	.+1			;WITH JRST BACK^
  6355			010000			X=X_1				;NEXT BIT
  6356
  6357
  6358					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6359						CLRBTH^
  6360	036264	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6361	036265	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6362	036266	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6363	036267	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6364	036270	7 774 20 0 00 010000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6365	036271	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6366						STOP^
  6367	036272	254 04 0 00 036273 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6368	036273	254 00 0 00 036274 		JRST	.+1			;WITH JRST BACK^
  6369	036274	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6370						STOP^
  6371	036275	254 04 0 00 036276 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6372	036276	254 00 0 00 036277 		JRST	.+1			;WITH JRST BACK^
  6373			020000			X=X_1				;NEXT BIT
  6374
  6375
  6376					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6377						CLRBTH^
  6378	036277	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21-5
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0147

  6379	036300	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6380	036301	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6381	036302	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6382	036303	7 774 20 0 00 020000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6383	036304	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6384						STOP^
  6385	036305	254 04 0 00 036306 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6386	036306	254 00 0 00 036307 		JRST	.+1			;WITH JRST BACK^
  6387	036307	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6388						STOP^
  6389	036310	254 04 0 00 036311 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6390	036311	254 00 0 00 036312 		JRST	.+1			;WITH JRST BACK^
  6391			040000			X=X_1				;NEXT BIT
  6392
  6393
  6394					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6395						CLRBTH^
  6396	036312	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6397	036313	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6398	036314	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6399	036315	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6400	036316	7 774 20 0 00 040000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6401	036317	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6402						STOP^
  6403	036320	254 04 0 00 036321 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6404	036321	254 00 0 00 036322 		JRST	.+1			;WITH JRST BACK^
  6405	036322	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6406						STOP^
  6407	036323	254 04 0 00 036324 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6408	036324	254 00 0 00 036325 		JRST	.+1			;WITH JRST BACK^
  6409			100000			X=X_1				;NEXT BIT
  6410
  6411
  6412					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6413						CLRBTH^
  6414	036325	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6415	036326	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6416	036327	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6417	036330	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6418	036331	7 774 20 0 00 100000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6419	036332	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6420						STOP^
  6421	036333	254 04 0 00 036334 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6422	036334	254 00 0 00 036335 		JRST	.+1			;WITH JRST BACK^
  6423	036335	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6424						STOP^
  6425	036336	254 04 0 00 036337 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6426	036337	254 00 0 00 036340 		JRST	.+1			;WITH JRST BACK^
  6427			200000			X=X_1				;NEXT BIT
  6428
  6429
  6430					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6431						CLRBTH^
  6432	036340	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6433	036341	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 21-6
DBKAHM	MAC	18-Jan-79 11:21		TEST VARIOUS RESETS                                                                SEQ 0148

  6434	036342	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6435	036343	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6436	036344	7 774 20 0 00 200000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6437	036345	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6438						STOP^
  6439	036346	254 04 0 00 036347 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6440	036347	254 00 0 00 036350 		JRST	.+1			;WITH JRST BACK^
  6441	036350	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6442						STOP^
  6443	036351	254 04 0 00 036352 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6444	036352	254 00 0 00 036353 		JRST	.+1			;WITH JRST BACK^
  6445			400000			X=X_1				;NEXT BIT
  6446
  6447
  6448					;TRY TO RESET THE PI AND APR VIA A CONO BIT TO DEVICE 774
  6449						CLRBTH^
  6450	036353	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6451	036354	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6452	036355	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177
  6453	036356	7 000 20 0 00 000077 		CONO	APR,77			;TURN ON PI AND APR BITS
  6454	036357	7 774 20 0 00 400000 		CONO	LAST,X			;SEND AND IOB BIT OUT
  6455	036360	7 004 34 0 00 000377 		CONSO	PI,PION!177		;PI BITS SHOULD STILL BE SET
  6456						STOP^
  6457	036361	254 04 0 00 036362 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6458	036362	254 00 0 00 036363 		JRST	.+1			;WITH JRST BACK^
  6459	036363	7 000 34 0 00 000077 		CONSO	APR,77			;AND APR BITS SHOULD STILL BE SET
  6460						STOP^
  6461	036364	254 04 0 00 036365 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6462	036365	254 00 0 00 036366 		JRST	.+1			;WITH JRST BACK^
  6463		000001	000000			X=X_1				;NEXT BIT
  6464
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 22
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0149

  6465					SUBTTL	INTERRUPT OUT OF INDIRECT LOOP
  6466
  6467						INDPI	42,1^
  6468
  6469					;GET OURSELVES INTO 42 TIGHT INDIRECT LOOP.
  6470					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6471					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6472					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6473
  6474						TSET^
  6475			036366			%X=.				;DEFINE %X TO SAVE
  6476	036366	201 00 0 00 036366 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6477	036367	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6478	036370	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6479	036371	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
  6480	036372	200 10 0 00 041554 		MOVE	10,[JSP 1,..0155]		;INTERRUPT TRAP INSTRUCTION
  6481	036373	202 10 0 00 000042 		MOVEM	10,42			;STORE FOR INTERRUPT REQUEST
  6482						CLRBT1^
  6483	036374	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6484	036375	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6485	036376	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6486	036377	7 000 20 0 00 002001 		CONO	APR,CLKENB+1		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 1
  6487	036400	254 00 1 00 036400 		JRST	@.			;LOOP
  6488	036401	254 04 0 00 036402 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6489	036402				..0155:	TGET^
  6490	036402	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6491	036403	302 00 0 00 036366 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6492						STOP2^^
  6493	036404	254 04 0 00 036405 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6494	036405	254 00 0 00 036406 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6495	036406	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6496	036407	302 01 0 00 036400 		CAIE	1,..0155-2			;WAS CORRECT PC STORED?
  6497						STOP^
  6498	036410	254 04 0 00 036411 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6499	036411	254 00 0 00 036412 		JRST	.+1			;WITH JRST BACK^
  6500	036412	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6501	036413	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6502						CLRBTH^
  6503	036414	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6504	036415	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6505					^
  6506
  6507						INDPI	44,2^
  6508
  6509					;GET OURSELVES INTO 44 TIGHT INDIRECT LOOP.
  6510					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6511					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6512					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6513
  6514						TSET^
  6515			036416			%X=.				;DEFINE %X TO SAVE
  6516	036416	201 00 0 00 036416 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6517	036417	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6518	036420	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6519	036421	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 22-1
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0150

  6520	036422	200 10 0 00 041555 		MOVE	10,[JSP 1,..0156]		;INTERRUPT TRAP INSTRUCTION
  6521	036423	202 10 0 00 000044 		MOVEM	10,44			;STORE FOR INTERRUPT REQUEST
  6522						CLRBT1^
  6523	036424	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6524	036425	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6525	036426	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6526	036427	7 000 20 0 00 002002 		CONO	APR,CLKENB+2		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 2
  6527	036430	254 00 1 00 036430 		JRST	@.			;LOOP
  6528	036431	254 04 0 00 036432 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6529	036432				..0156:	TGET^
  6530	036432	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6531	036433	302 00 0 00 036416 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6532						STOP2^^
  6533	036434	254 04 0 00 036435 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6534	036435	254 00 0 00 036436 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6535	036436	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6536	036437	302 01 0 00 036430 		CAIE	1,..0156-2			;WAS CORRECT PC STORED?
  6537						STOP^
  6538	036440	254 04 0 00 036441 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6539	036441	254 00 0 00 036442 		JRST	.+1			;WITH JRST BACK^
  6540	036442	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6541	036443	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6542						CLRBTH^
  6543	036444	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6544	036445	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6545					^
  6546
  6547						INDPI	46,3^
  6548
  6549					;GET OURSELVES INTO 46 TIGHT INDIRECT LOOP.
  6550					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6551					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6552					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6553
  6554						TSET^
  6555			036446			%X=.				;DEFINE %X TO SAVE
  6556	036446	201 00 0 00 036446 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6557	036447	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6558	036450	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6559	036451	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
  6560	036452	200 10 0 00 041556 		MOVE	10,[JSP 1,..0157]		;INTERRUPT TRAP INSTRUCTION
  6561	036453	202 10 0 00 000046 		MOVEM	10,46			;STORE FOR INTERRUPT REQUEST
  6562						CLRBT1^
  6563	036454	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6564	036455	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6565	036456	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6566	036457	7 000 20 0 00 002003 		CONO	APR,CLKENB+3		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 3
  6567	036460	254 00 1 00 036460 		JRST	@.			;LOOP
  6568	036461	254 04 0 00 036462 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6569	036462				..0157:	TGET^
  6570	036462	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6571	036463	302 00 0 00 036446 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6572						STOP2^^
  6573	036464	254 04 0 00 036465 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6574	036465	254 00 0 00 036466 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 22-2
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0151

  6575	036466	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6576	036467	302 01 0 00 036460 		CAIE	1,..0157-2			;WAS CORRECT PC STORED?
  6577						STOP^
  6578	036470	254 04 0 00 036471 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6579	036471	254 00 0 00 036472 		JRST	.+1			;WITH JRST BACK^
  6580	036472	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6581	036473	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6582						CLRBTH^
  6583	036474	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6584	036475	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6585					^
  6586
  6587						INDPI	50,4^
  6588
  6589					;GET OURSELVES INTO 50 TIGHT INDIRECT LOOP.
  6590					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6591					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6592					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6593
  6594						TSET^
  6595			036476			%X=.				;DEFINE %X TO SAVE
  6596	036476	201 00 0 00 036476 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6597	036477	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6598	036500	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6599	036501	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
  6600	036502	200 10 0 00 041557 		MOVE	10,[JSP 1,..0160]		;INTERRUPT TRAP INSTRUCTION
  6601	036503	202 10 0 00 000050 		MOVEM	10,50			;STORE FOR INTERRUPT REQUEST
  6602						CLRBT1^
  6603	036504	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6604	036505	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6605	036506	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6606	036507	7 000 20 0 00 002004 		CONO	APR,CLKENB+4		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 4
  6607	036510	254 00 1 00 036510 		JRST	@.			;LOOP
  6608	036511	254 04 0 00 036512 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6609	036512				..0160:	TGET^
  6610	036512	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6611	036513	302 00 0 00 036476 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6612						STOP2^^
  6613	036514	254 04 0 00 036515 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6614	036515	254 00 0 00 036516 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6615	036516	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6616	036517	302 01 0 00 036510 		CAIE	1,..0160-2			;WAS CORRECT PC STORED?
  6617						STOP^
  6618	036520	254 04 0 00 036521 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6619	036521	254 00 0 00 036522 		JRST	.+1			;WITH JRST BACK^
  6620	036522	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6621	036523	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6622						CLRBTH^
  6623	036524	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6624	036525	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6625					^
  6626
  6627						INDPI	52,5^
  6628
  6629					;GET OURSELVES INTO 52 TIGHT INDIRECT LOOP.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 22-3
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0152

  6630					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6631					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6632					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6633
  6634						TSET^
  6635			036526			%X=.				;DEFINE %X TO SAVE
  6636	036526	201 00 0 00 036526 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6637	036527	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6638	036530	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6639	036531	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
  6640	036532	200 10 0 00 041560 		MOVE	10,[JSP 1,..0161]		;INTERRUPT TRAP INSTRUCTION
  6641	036533	202 10 0 00 000052 		MOVEM	10,52			;STORE FOR INTERRUPT REQUEST
  6642						CLRBT1^
  6643	036534	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6644	036535	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6645	036536	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6646	036537	7 000 20 0 00 002005 		CONO	APR,CLKENB+5		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 5
  6647	036540	254 00 1 00 036540 		JRST	@.			;LOOP
  6648	036541	254 04 0 00 036542 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6649	036542				..0161:	TGET^
  6650	036542	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6651	036543	302 00 0 00 036526 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6652						STOP2^^
  6653	036544	254 04 0 00 036545 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6654	036545	254 00 0 00 036546 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6655	036546	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6656	036547	302 01 0 00 036540 		CAIE	1,..0161-2			;WAS CORRECT PC STORED?
  6657						STOP^
  6658	036550	254 04 0 00 036551 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6659	036551	254 00 0 00 036552 		JRST	.+1			;WITH JRST BACK^
  6660	036552	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6661	036553	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6662						CLRBTH^
  6663	036554	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6664	036555	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6665					^
  6666
  6667						INDPI	54,6^
  6668
  6669					;GET OURSELVES INTO 54 TIGHT INDIRECT LOOP.
  6670					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6671					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6672					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6673
  6674						TSET^
  6675			036556			%X=.				;DEFINE %X TO SAVE
  6676	036556	201 00 0 00 036556 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6677	036557	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6678	036560	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6679	036561	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
  6680	036562	200 10 0 00 041561 		MOVE	10,[JSP 1,..0162]		;INTERRUPT TRAP INSTRUCTION
  6681	036563	202 10 0 00 000054 		MOVEM	10,54			;STORE FOR INTERRUPT REQUEST
  6682						CLRBT1^
  6683	036564	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6684	036565	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 22-4
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0153

  6685	036566	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6686	036567	7 000 20 0 00 002006 		CONO	APR,CLKENB+6		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 6
  6687	036570	254 00 1 00 036570 		JRST	@.			;LOOP
  6688	036571	254 04 0 00 036572 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6689	036572				..0162:	TGET^
  6690	036572	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6691	036573	302 00 0 00 036556 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6692						STOP2^^
  6693	036574	254 04 0 00 036575 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6694	036575	254 00 0 00 036576 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6695	036576	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6696	036577	302 01 0 00 036570 		CAIE	1,..0162-2			;WAS CORRECT PC STORED?
  6697						STOP^
  6698	036600	254 04 0 00 036601 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6699	036601	254 00 0 00 036602 		JRST	.+1			;WITH JRST BACK^
  6700	036602	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6701	036603	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6702						CLRBTH^
  6703	036604	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6704	036605	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6705					^
  6706
  6707						INDPI	56,7^
  6708
  6709					;GET OURSELVES INTO 56 TIGHT INDIRECT LOOP.
  6710					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  6711					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  6712					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  6713
  6714						TSET^
  6715			036606			%X=.				;DEFINE %X TO SAVE
  6716	036606	201 00 0 00 036606 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6717	036607	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6718	036610	201 10 0 00 000012 		MOVEI	10,^D10			;TIMES TO DO THIS TEST
  6719	036611	202 10 0 00 041740 		MOVEM	10,COUNTX#		;STORE IT
  6720	036612	200 10 0 00 041562 		MOVE	10,[JSP 1,..0163]		;INTERRUPT TRAP INSTRUCTION
  6721	036613	202 10 0 00 000056 		MOVEM	10,56			;STORE FOR INTERRUPT REQUEST
  6722						CLRBT1^
  6723	036614	7 000 20 0 00 324300 		CLRAP1^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!IIOPFC!INXCLR^
  6724	036615	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6725	036616	7 004 20 0 00 002377 		CONO	PI,2377			;TURN ON PI AND CHANNELS
  6726	036617	7 000 20 0 00 002007 		CONO	APR,CLKENB+7		;ENABLE CLOCK,CLEAR CLOCK FLAG,ENABLE CH 7
  6727	036620	254 00 1 00 036620 		JRST	@.			;LOOP
  6728	036621	254 04 0 00 036622 		HALT	.+1			;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  6729	036622				..0163:	TGET^
  6730	036622	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6731	036623	302 00 0 00 036606 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6732						STOP2^^
  6733	036624	254 04 0 00 036625 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6734	036625	254 00 0 00 036626 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6735	036626	405 01 0 00 777777 		ANDI	1,-1			;MASK PC BITS
  6736	036627	302 01 0 00 036620 		CAIE	1,..0163-2			;WAS CORRECT PC STORED?
  6737						STOP^
  6738	036630	254 04 0 00 036631 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  6739	036631	254 00 0 00 036632 		JRST	.+1			;WITH JRST BACK^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 22-5
DBKAHM	MAC	18-Jan-79 11:21		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0154

  6740	036632	372 00 0 00 041740 		SOSE	COUNTX			;LOOP TEST
  6741	036633	254 12 1 00 000001 		JEN	@1			;DISMISS INTERRUPT
  6742						CLRBTH^
  6743	036634	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  6744	036635	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  6745					^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0155

  6746					SUBTTL	LOCAL UUO TESTING (LUUO)
  6747
  6748					;TEST UUO'S IN RANGE 1-37
  6749					;TEST TO SEE THAT UUO TRAPS CORRECTLY AND THAT PC
  6750					;OF UUO IS CORRECT AND THAT UUO STORED IN 40 IS ALSO CORRECT
  6751					;MONITOR UUO'S ARE NOT TESTED.
  6752
  6753					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  6754					;MA SPECIAL BITS NOT SETTING
  6755					;AD MAGIC # 40 @ET1
  6756					;XCTF SET AT FETCH CYCLE
  6757					;AR IR ENABLE @ET1
  6758					;AR SIGN SMEAR
  6759					;AD MAGIC NUMBER ENABLE
  6760					;AB AD EN @ET1
  6761					;INSTRUCTION FETCH @ET2
  6762
  6763	036636				UUO01:	XUUO	1B8,UUO02^
  6764
  6765					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6766					;ARE CORRECT.
  6767
  6768		001000	000000			MLUUO==1B8			;THE UUO TO BE EXECUTED
  6769						TSET^
  6770			036636			%X=.				;DEFINE %X TO SAVE
  6771	036636	201 00 0 00 036636 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6772	036637	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6773	036640	200 00 0 00 041563 	..0164:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  6774	036641	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  6775	036642	001000	000000			1B8				;EXECUTE A UUO
  6776	036643	254 04 0 00 036644 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  6777	036644	201 02 0 00 036643 		MOVEI	2,.-1			;GET UUO PC
  6778	036645	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  6779	036646	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  6780	036647	254 04 0 00 036650 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  6781	036650	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  6782	036651	312 00 0 00 041564 		CAME	0,[1B8!0]			;CORRECT UUO STORED IN 40?
  6783	036652	334 00 0 00 000000 		SKIPA				;NO
  6784	036653	254 00 0 00 036662 		JRST	UUO02			;TESTS OK !
  6785						STOP1^
  6786	036654	254 04 0 00 036655 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  6787	036655	254 00 0 00 036656 		JRST	.+1			;INTO RIGHT HALF OF 40^
  6788						TGET^
  6789	036656	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6790	036657	302 00 0 00 036636 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6791						STOP2^^
  6792	036660	254 04 0 00 036661 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6793	036661	254 00 0 00 036662 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6794					^
  6795					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  6796					;MA SPECIAL BITS NOT SETTING
  6797					;AD MAGIC # 40 @ET1
  6798					;XCTF SET AT FETCH CYCLE
  6799					;AR IR ENABLE @ET1
  6800					;AR SIGN SMEAR
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-1
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0156

  6801					;AD MAGIC NUMBER ENABLE
  6802					;AB AD EN @ET1
  6803					;INSTRUCTION FETCH @ET2
  6804	036662				UUO02:	XUUO	2B8,UUO03^
  6805
  6806					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6807					;ARE CORRECT.
  6808
  6809		002000	000000			MLUUO==2B8			;THE UUO TO BE EXECUTED
  6810						TSET^
  6811			036662			%X=.				;DEFINE %X TO SAVE
  6812	036662	201 00 0 00 036662 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6813	036663	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6814	036664	200 00 0 00 041565 	..0165:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  6815	036665	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  6816	036666	002000	000000			2B8				;EXECUTE A UUO
  6817	036667	254 04 0 00 036670 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  6818	036670	201 02 0 00 036667 		MOVEI	2,.-1			;GET UUO PC
  6819	036671	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  6820	036672	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  6821	036673	254 04 0 00 036674 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  6822	036674	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  6823	036675	312 00 0 00 041566 		CAME	0,[2B8!0]			;CORRECT UUO STORED IN 40?
  6824	036676	334 00 0 00 000000 		SKIPA				;NO
  6825	036677	254 00 0 00 036706 		JRST	UUO03			;TESTS OK !
  6826						STOP1^
  6827	036700	254 04 0 00 036701 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  6828	036701	254 00 0 00 036702 		JRST	.+1			;INTO RIGHT HALF OF 40^
  6829						TGET^
  6830	036702	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6831	036703	302 00 0 00 036662 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6832						STOP2^^
  6833	036704	254 04 0 00 036705 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6834	036705	254 00 0 00 036706 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6835					^
  6836					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  6837					;MA SPECIAL BITS NOT SETTING
  6838					;AD MAGIC # 40 @ET1
  6839					;XCTF SET AT FETCH CYCLE
  6840					;AR IR ENABLE @ET1
  6841					;AR SIGN SMEAR
  6842					;AD MAGIC NUMBER ENABLE
  6843					;AB AD EN @ET1
  6844					;INSTRUCTION FETCH @ET2
  6845	036706				UUO03:	XUUO	3B8,UUO04^
  6846
  6847					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6848					;ARE CORRECT.
  6849
  6850		003000	000000			MLUUO==3B8			;THE UUO TO BE EXECUTED
  6851						TSET^
  6852			036706			%X=.				;DEFINE %X TO SAVE
  6853	036706	201 00 0 00 036706 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6854	036707	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6855	036710	200 00 0 00 041567 	..0166:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-2
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0157

  6856	036711	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  6857	036712	003000	000000			3B8				;EXECUTE A UUO
  6858	036713	254 04 0 00 036714 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  6859	036714	201 02 0 00 036713 		MOVEI	2,.-1			;GET UUO PC
  6860	036715	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  6861	036716	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  6862	036717	254 04 0 00 036720 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  6863	036720	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  6864	036721	312 00 0 00 041570 		CAME	0,[3B8!0]			;CORRECT UUO STORED IN 40?
  6865	036722	334 00 0 00 000000 		SKIPA				;NO
  6866	036723	254 00 0 00 036732 		JRST	UUO04			;TESTS OK !
  6867						STOP1^
  6868	036724	254 04 0 00 036725 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  6869	036725	254 00 0 00 036726 		JRST	.+1			;INTO RIGHT HALF OF 40^
  6870						TGET^
  6871	036726	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6872	036727	302 00 0 00 036706 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6873						STOP2^^
  6874	036730	254 04 0 00 036731 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6875	036731	254 00 0 00 036732 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6876					^
  6877					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  6878					;MA SPECIAL BITS NOT SETTING
  6879					;AD MAGIC # 40 @ET1
  6880					;XCTF SET AT FETCH CYCLE
  6881					;AR IR ENABLE @ET1
  6882					;AR SIGN SMEAR
  6883					;AD MAGIC NUMBER ENABLE
  6884					;AB AD EN @ET1
  6885					;INSTRUCTION FETCH @ET2
  6886	036732				UUO04:	XUUO	4B8,UUO05^
  6887
  6888					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6889					;ARE CORRECT.
  6890
  6891		004000	000000			MLUUO==4B8			;THE UUO TO BE EXECUTED
  6892						TSET^
  6893			036732			%X=.				;DEFINE %X TO SAVE
  6894	036732	201 00 0 00 036732 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6895	036733	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6896	036734	200 00 0 00 041571 	..0167:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  6897	036735	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  6898	036736	004000	000000			4B8				;EXECUTE A UUO
  6899	036737	254 04 0 00 036740 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  6900	036740	201 02 0 00 036737 		MOVEI	2,.-1			;GET UUO PC
  6901	036741	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  6902	036742	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  6903	036743	254 04 0 00 036744 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  6904	036744	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  6905	036745	312 00 0 00 041572 		CAME	0,[4B8!0]			;CORRECT UUO STORED IN 40?
  6906	036746	334 00 0 00 000000 		SKIPA				;NO
  6907	036747	254 00 0 00 036756 		JRST	UUO05			;TESTS OK !
  6908						STOP1^
  6909	036750	254 04 0 00 036751 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  6910	036751	254 00 0 00 036752 		JRST	.+1			;INTO RIGHT HALF OF 40^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-3
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0158

  6911						TGET^
  6912	036752	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6913	036753	302 00 0 00 036732 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6914						STOP2^^
  6915	036754	254 04 0 00 036755 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6916	036755	254 00 0 00 036756 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6917					^
  6918					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  6919					;MA SPECIAL BITS NOT SETTING
  6920					;AD MAGIC # 40 @ET1
  6921					;XCTF SET AT FETCH CYCLE
  6922					;AR IR ENABLE @ET1
  6923					;AR SIGN SMEAR
  6924					;AD MAGIC NUMBER ENABLE
  6925					;AB AD EN @ET1
  6926					;INSTRUCTION FETCH @ET2
  6927	036756				UUO05:	XUUO	5B8,UUO06^
  6928
  6929					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6930					;ARE CORRECT.
  6931
  6932		005000	000000			MLUUO==5B8			;THE UUO TO BE EXECUTED
  6933						TSET^
  6934			036756			%X=.				;DEFINE %X TO SAVE
  6935	036756	201 00 0 00 036756 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6936	036757	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6937	036760	200 00 0 00 041573 	..0170:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  6938	036761	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  6939	036762	005000	000000			5B8				;EXECUTE A UUO
  6940	036763	254 04 0 00 036764 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  6941	036764	201 02 0 00 036763 		MOVEI	2,.-1			;GET UUO PC
  6942	036765	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  6943	036766	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  6944	036767	254 04 0 00 036770 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  6945	036770	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  6946	036771	312 00 0 00 041574 		CAME	0,[5B8!0]			;CORRECT UUO STORED IN 40?
  6947	036772	334 00 0 00 000000 		SKIPA				;NO
  6948	036773	254 00 0 00 037002 		JRST	UUO06			;TESTS OK !
  6949						STOP1^
  6950	036774	254 04 0 00 036775 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  6951	036775	254 00 0 00 036776 		JRST	.+1			;INTO RIGHT HALF OF 40^
  6952						TGET^
  6953	036776	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6954	036777	302 00 0 00 036756 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6955						STOP2^^
  6956	037000	254 04 0 00 037001 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6957	037001	254 00 0 00 037002 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6958					^
  6959					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  6960					;MA SPECIAL BITS NOT SETTING
  6961					;AD MAGIC # 40 @ET1
  6962					;XCTF SET AT FETCH CYCLE
  6963					;AR IR ENABLE @ET1
  6964					;AR SIGN SMEAR
  6965					;AD MAGIC NUMBER ENABLE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-4
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0159

  6966					;AB AD EN @ET1
  6967					;INSTRUCTION FETCH @ET2
  6968	037002				UUO06:	XUUO	6B8,UUO07^
  6969
  6970					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6971					;ARE CORRECT.
  6972
  6973		006000	000000			MLUUO==6B8			;THE UUO TO BE EXECUTED
  6974						TSET^
  6975			037002			%X=.				;DEFINE %X TO SAVE
  6976	037002	201 00 0 00 037002 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  6977	037003	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  6978	037004	200 00 0 00 041575 	..0171:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  6979	037005	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  6980	037006	006000	000000			6B8				;EXECUTE A UUO
  6981	037007	254 04 0 00 037010 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  6982	037010	201 02 0 00 037007 		MOVEI	2,.-1			;GET UUO PC
  6983	037011	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  6984	037012	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  6985	037013	254 04 0 00 037014 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  6986	037014	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  6987	037015	312 00 0 00 041576 		CAME	0,[6B8!0]			;CORRECT UUO STORED IN 40?
  6988	037016	334 00 0 00 000000 		SKIPA				;NO
  6989	037017	254 00 0 00 037026 		JRST	UUO07			;TESTS OK !
  6990						STOP1^
  6991	037020	254 04 0 00 037021 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  6992	037021	254 00 0 00 037022 		JRST	.+1			;INTO RIGHT HALF OF 40^
  6993						TGET^
  6994	037022	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  6995	037023	302 00 0 00 037002 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  6996						STOP2^^
  6997	037024	254 04 0 00 037025 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  6998	037025	254 00 0 00 037026 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  6999					^
  7000					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7001					;MA SPECIAL BITS NOT SETTING
  7002					;AD MAGIC # 40 @ET1
  7003					;XCTF SET AT FETCH CYCLE
  7004					;AR IR ENABLE @ET1
  7005					;AR SIGN SMEAR
  7006					;AD MAGIC NUMBER ENABLE
  7007					;AB AD EN @ET1
  7008					;INSTRUCTION FETCH @ET2
  7009	037026				UUO07:	XUUO	7B8,UUO10^
  7010
  7011					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7012					;ARE CORRECT.
  7013
  7014		007000	000000			MLUUO==7B8			;THE UUO TO BE EXECUTED
  7015						TSET^
  7016			037026			%X=.				;DEFINE %X TO SAVE
  7017	037026	201 00 0 00 037026 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7018	037027	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7019	037030	200 00 0 00 041577 	..0172:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7020	037031	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-5
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0160

  7021	037032	007000	000000			7B8				;EXECUTE A UUO
  7022	037033	254 04 0 00 037034 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7023	037034	201 02 0 00 037033 		MOVEI	2,.-1			;GET UUO PC
  7024	037035	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7025	037036	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7026	037037	254 04 0 00 037040 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7027	037040	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7028	037041	312 00 0 00 041600 		CAME	0,[7B8!0]			;CORRECT UUO STORED IN 40?
  7029	037042	334 00 0 00 000000 		SKIPA				;NO
  7030	037043	254 00 0 00 037052 		JRST	UUO10			;TESTS OK !
  7031						STOP1^
  7032	037044	254 04 0 00 037045 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7033	037045	254 00 0 00 037046 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7034						TGET^
  7035	037046	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7036	037047	302 00 0 00 037026 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7037						STOP2^^
  7038	037050	254 04 0 00 037051 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7039	037051	254 00 0 00 037052 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7040					^
  7041					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7042					;MA SPECIAL BITS NOT SETTING
  7043					;AD MAGIC # 40 @ET1
  7044					;XCTF SET AT FETCH CYCLE
  7045					;AR IR ENABLE @ET1
  7046					;AR SIGN SMEAR
  7047					;AD MAGIC NUMBER ENABLE
  7048					;AB AD EN @ET1
  7049					;INSTRUCTION FETCH @ET2
  7050	037052				UUO10:	XUUO	10B8,UUO11^
  7051
  7052					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7053					;ARE CORRECT.
  7054
  7055		010000	000000			MLUUO==10B8			;THE UUO TO BE EXECUTED
  7056						TSET^
  7057			037052			%X=.				;DEFINE %X TO SAVE
  7058	037052	201 00 0 00 037052 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7059	037053	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7060	037054	200 00 0 00 041601 	..0173:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7061	037055	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7062	037056	010000	000000			10B8				;EXECUTE A UUO
  7063	037057	254 04 0 00 037060 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7064	037060	201 02 0 00 037057 		MOVEI	2,.-1			;GET UUO PC
  7065	037061	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7066	037062	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7067	037063	254 04 0 00 037064 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7068	037064	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7069	037065	312 00 0 00 041602 		CAME	0,[10B8!0]			;CORRECT UUO STORED IN 40?
  7070	037066	334 00 0 00 000000 		SKIPA				;NO
  7071	037067	254 00 0 00 037076 		JRST	UUO11			;TESTS OK !
  7072						STOP1^
  7073	037070	254 04 0 00 037071 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7074	037071	254 00 0 00 037072 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7075						TGET^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-6
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0161

  7076	037072	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7077	037073	302 00 0 00 037052 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7078						STOP2^^
  7079	037074	254 04 0 00 037075 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7080	037075	254 00 0 00 037076 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7081					^
  7082					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7083					;MA SPECIAL BITS NOT SETTING
  7084					;AD MAGIC # 40 @ET1
  7085					;XCTF SET AT FETCH CYCLE
  7086					;AR IR ENABLE @ET1
  7087					;AR SIGN SMEAR
  7088					;AD MAGIC NUMBER ENABLE
  7089					;AB AD EN @ET1
  7090					;INSTRUCTION FETCH @ET2
  7091	037076				UUO11:	XUUO	11B8,UUO12^
  7092
  7093					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7094					;ARE CORRECT.
  7095
  7096		011000	000000			MLUUO==11B8			;THE UUO TO BE EXECUTED
  7097						TSET^
  7098			037076			%X=.				;DEFINE %X TO SAVE
  7099	037076	201 00 0 00 037076 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7100	037077	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7101	037100	200 00 0 00 041603 	..0174:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7102	037101	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7103	037102	011000	000000			11B8				;EXECUTE A UUO
  7104	037103	254 04 0 00 037104 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7105	037104	201 02 0 00 037103 		MOVEI	2,.-1			;GET UUO PC
  7106	037105	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7107	037106	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7108	037107	254 04 0 00 037110 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7109	037110	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7110	037111	312 00 0 00 041604 		CAME	0,[11B8!0]			;CORRECT UUO STORED IN 40?
  7111	037112	334 00 0 00 000000 		SKIPA				;NO
  7112	037113	254 00 0 00 037122 		JRST	UUO12			;TESTS OK !
  7113						STOP1^
  7114	037114	254 04 0 00 037115 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7115	037115	254 00 0 00 037116 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7116						TGET^
  7117	037116	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7118	037117	302 00 0 00 037076 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7119						STOP2^^
  7120	037120	254 04 0 00 037121 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7121	037121	254 00 0 00 037122 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7122					^
  7123					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7124					;MA SPECIAL BITS NOT SETTING
  7125					;AD MAGIC # 40 @ET1
  7126					;XCTF SET AT FETCH CYCLE
  7127					;AR IR ENABLE @ET1
  7128					;AR SIGN SMEAR
  7129					;AD MAGIC NUMBER ENABLE
  7130					;AB AD EN @ET1
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-7
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0162

  7131					;INSTRUCTION FETCH @ET2
  7132	037122				UUO12:	XUUO	12B8,UUO13^
  7133
  7134					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7135					;ARE CORRECT.
  7136
  7137		012000	000000			MLUUO==12B8			;THE UUO TO BE EXECUTED
  7138						TSET^
  7139			037122			%X=.				;DEFINE %X TO SAVE
  7140	037122	201 00 0 00 037122 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7141	037123	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7142	037124	200 00 0 00 041605 	..0175:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7143	037125	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7144	037126	012000	000000			12B8				;EXECUTE A UUO
  7145	037127	254 04 0 00 037130 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7146	037130	201 02 0 00 037127 		MOVEI	2,.-1			;GET UUO PC
  7147	037131	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7148	037132	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7149	037133	254 04 0 00 037134 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7150	037134	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7151	037135	312 00 0 00 041606 		CAME	0,[12B8!0]			;CORRECT UUO STORED IN 40?
  7152	037136	334 00 0 00 000000 		SKIPA				;NO
  7153	037137	254 00 0 00 037146 		JRST	UUO13			;TESTS OK !
  7154						STOP1^
  7155	037140	254 04 0 00 037141 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7156	037141	254 00 0 00 037142 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7157						TGET^
  7158	037142	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7159	037143	302 00 0 00 037122 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7160						STOP2^^
  7161	037144	254 04 0 00 037145 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7162	037145	254 00 0 00 037146 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7163					^
  7164					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7165					;MA SPECIAL BITS NOT SETTING
  7166					;AD MAGIC # 40 @ET1
  7167					;XCTF SET AT FETCH CYCLE
  7168					;AR IR ENABLE @ET1
  7169					;AR SIGN SMEAR
  7170					;AD MAGIC NUMBER ENABLE
  7171					;AB AD EN @ET1
  7172					;INSTRUCTION FETCH @ET2
  7173	037146				UUO13:	XUUO	13B8,UUO14^
  7174
  7175					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7176					;ARE CORRECT.
  7177
  7178		013000	000000			MLUUO==13B8			;THE UUO TO BE EXECUTED
  7179						TSET^
  7180			037146			%X=.				;DEFINE %X TO SAVE
  7181	037146	201 00 0 00 037146 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7182	037147	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7183	037150	200 00 0 00 041607 	..0176:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7184	037151	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7185	037152	013000	000000			13B8				;EXECUTE A UUO
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-8
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0163

  7186	037153	254 04 0 00 037154 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7187	037154	201 02 0 00 037153 		MOVEI	2,.-1			;GET UUO PC
  7188	037155	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7189	037156	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7190	037157	254 04 0 00 037160 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7191	037160	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7192	037161	312 00 0 00 041610 		CAME	0,[13B8!0]			;CORRECT UUO STORED IN 40?
  7193	037162	334 00 0 00 000000 		SKIPA				;NO
  7194	037163	254 00 0 00 037172 		JRST	UUO14			;TESTS OK !
  7195						STOP1^
  7196	037164	254 04 0 00 037165 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7197	037165	254 00 0 00 037166 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7198						TGET^
  7199	037166	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7200	037167	302 00 0 00 037146 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7201						STOP2^^
  7202	037170	254 04 0 00 037171 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7203	037171	254 00 0 00 037172 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7204					^
  7205					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7206					;MA SPECIAL BITS NOT SETTING
  7207					;AD MAGIC # 40 @ET1
  7208					;XCTF SET AT FETCH CYCLE
  7209					;AR IR ENABLE @ET1
  7210					;AR SIGN SMEAR
  7211					;AD MAGIC NUMBER ENABLE
  7212					;AB AD EN @ET1
  7213					;INSTRUCTION FETCH @ET2
  7214	037172				UUO14:	XUUO	14B8,UUO15^
  7215
  7216					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7217					;ARE CORRECT.
  7218
  7219		014000	000000			MLUUO==14B8			;THE UUO TO BE EXECUTED
  7220						TSET^
  7221			037172			%X=.				;DEFINE %X TO SAVE
  7222	037172	201 00 0 00 037172 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7223	037173	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7224	037174	200 00 0 00 041611 	..0177:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7225	037175	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7226	037176	014000	000000			14B8				;EXECUTE A UUO
  7227	037177	254 04 0 00 037200 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7228	037200	201 02 0 00 037177 		MOVEI	2,.-1			;GET UUO PC
  7229	037201	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7230	037202	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7231	037203	254 04 0 00 037204 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7232	037204	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7233	037205	312 00 0 00 041612 		CAME	0,[14B8!0]			;CORRECT UUO STORED IN 40?
  7234	037206	334 00 0 00 000000 		SKIPA				;NO
  7235	037207	254 00 0 00 037216 		JRST	UUO15			;TESTS OK !
  7236						STOP1^
  7237	037210	254 04 0 00 037211 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7238	037211	254 00 0 00 037212 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7239						TGET^
  7240	037212	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-9
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0164

  7241	037213	302 00 0 00 037172 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7242						STOP2^^
  7243	037214	254 04 0 00 037215 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7244	037215	254 00 0 00 037216 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7245					^
  7246					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7247					;MA SPECIAL BITS NOT SETTING
  7248					;AD MAGIC # 40 @ET1
  7249					;XCTF SET AT FETCH CYCLE
  7250					;AR IR ENABLE @ET1
  7251					;AR SIGN SMEAR
  7252					;AD MAGIC NUMBER ENABLE
  7253					;AB AD EN @ET1
  7254					;INSTRUCTION FETCH @ET2
  7255	037216				UUO15:	XUUO	15B8,UUO16^
  7256
  7257					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7258					;ARE CORRECT.
  7259
  7260		015000	000000			MLUUO==15B8			;THE UUO TO BE EXECUTED
  7261						TSET^
  7262			037216			%X=.				;DEFINE %X TO SAVE
  7263	037216	201 00 0 00 037216 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7264	037217	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7265	037220	200 00 0 00 041613 	..0200:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7266	037221	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7267	037222	015000	000000			15B8				;EXECUTE A UUO
  7268	037223	254 04 0 00 037224 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7269	037224	201 02 0 00 037223 		MOVEI	2,.-1			;GET UUO PC
  7270	037225	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7271	037226	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7272	037227	254 04 0 00 037230 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7273	037230	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7274	037231	312 00 0 00 041614 		CAME	0,[15B8!0]			;CORRECT UUO STORED IN 40?
  7275	037232	334 00 0 00 000000 		SKIPA				;NO
  7276	037233	254 00 0 00 037242 		JRST	UUO16			;TESTS OK !
  7277						STOP1^
  7278	037234	254 04 0 00 037235 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7279	037235	254 00 0 00 037236 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7280						TGET^
  7281	037236	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7282	037237	302 00 0 00 037216 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7283						STOP2^^
  7284	037240	254 04 0 00 037241 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7285	037241	254 00 0 00 037242 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7286					^
  7287					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7288					;MA SPECIAL BITS NOT SETTING
  7289					;AD MAGIC # 40 @ET1
  7290					;XCTF SET AT FETCH CYCLE
  7291					;AR IR ENABLE @ET1
  7292					;AR SIGN SMEAR
  7293					;AD MAGIC NUMBER ENABLE
  7294					;AB AD EN @ET1
  7295					;INSTRUCTION FETCH @ET2
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-10
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0165

  7296	037242				UUO16:	XUUO	16B8,UUO17^
  7297
  7298					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7299					;ARE CORRECT.
  7300
  7301		016000	000000			MLUUO==16B8			;THE UUO TO BE EXECUTED
  7302						TSET^
  7303			037242			%X=.				;DEFINE %X TO SAVE
  7304	037242	201 00 0 00 037242 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7305	037243	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7306	037244	200 00 0 00 041615 	..0201:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7307	037245	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7308	037246	016000	000000			16B8				;EXECUTE A UUO
  7309	037247	254 04 0 00 037250 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7310	037250	201 02 0 00 037247 		MOVEI	2,.-1			;GET UUO PC
  7311	037251	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7312	037252	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7313	037253	254 04 0 00 037254 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7314	037254	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7315	037255	312 00 0 00 041616 		CAME	0,[16B8!0]			;CORRECT UUO STORED IN 40?
  7316	037256	334 00 0 00 000000 		SKIPA				;NO
  7317	037257	254 00 0 00 037266 		JRST	UUO17			;TESTS OK !
  7318						STOP1^
  7319	037260	254 04 0 00 037261 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7320	037261	254 00 0 00 037262 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7321						TGET^
  7322	037262	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7323	037263	302 00 0 00 037242 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7324						STOP2^^
  7325	037264	254 04 0 00 037265 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7326	037265	254 00 0 00 037266 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7327					^
  7328					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7329					;MA SPECIAL BITS NOT SETTING
  7330					;AD MAGIC # 40 @ET1
  7331					;XCTF SET AT FETCH CYCLE
  7332					;AR IR ENABLE @ET1
  7333					;AR SIGN SMEAR
  7334					;AD MAGIC NUMBER ENABLE
  7335					;AB AD EN @ET1
  7336					;INSTRUCTION FETCH @ET2
  7337	037266				UUO17:	XUUO	17B8,UUO20^
  7338
  7339					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7340					;ARE CORRECT.
  7341
  7342		017000	000000			MLUUO==17B8			;THE UUO TO BE EXECUTED
  7343						TSET^
  7344			037266			%X=.				;DEFINE %X TO SAVE
  7345	037266	201 00 0 00 037266 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7346	037267	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7347	037270	200 00 0 00 041617 	..0202:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7348	037271	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7349	037272	017000	000000			17B8				;EXECUTE A UUO
  7350	037273	254 04 0 00 037274 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-11
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0166

  7351	037274	201 02 0 00 037273 		MOVEI	2,.-1			;GET UUO PC
  7352	037275	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7353	037276	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7354	037277	254 04 0 00 037300 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7355	037300	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7356	037301	312 00 0 00 041620 		CAME	0,[17B8!0]			;CORRECT UUO STORED IN 40?
  7357	037302	334 00 0 00 000000 		SKIPA				;NO
  7358	037303	254 00 0 00 037312 		JRST	UUO20			;TESTS OK !
  7359						STOP1^
  7360	037304	254 04 0 00 037305 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7361	037305	254 00 0 00 037306 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7362						TGET^
  7363	037306	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7364	037307	302 00 0 00 037266 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7365						STOP2^^
  7366	037310	254 04 0 00 037311 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7367	037311	254 00 0 00 037312 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7368					^
  7369					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7370					;MA SPECIAL BITS NOT SETTING
  7371					;AD MAGIC # 40 @ET1
  7372					;XCTF SET AT FETCH CYCLE
  7373					;AR IR ENABLE @ET1
  7374					;AR SIGN SMEAR
  7375					;AD MAGIC NUMBER ENABLE
  7376					;AB AD EN @ET1
  7377					;INSTRUCTION FETCH @ET2
  7378	037312				UUO20:	XUUO	20B8,UUO21^
  7379
  7380					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7381					;ARE CORRECT.
  7382
  7383		020000	000000			MLUUO==20B8			;THE UUO TO BE EXECUTED
  7384						TSET^
  7385			037312			%X=.				;DEFINE %X TO SAVE
  7386	037312	201 00 0 00 037312 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7387	037313	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7388	037314	200 00 0 00 041621 	..0203:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7389	037315	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7390	037316	020000	000000			20B8				;EXECUTE A UUO
  7391	037317	254 04 0 00 037320 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7392	037320	201 02 0 00 037317 		MOVEI	2,.-1			;GET UUO PC
  7393	037321	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7394	037322	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7395	037323	254 04 0 00 037324 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7396	037324	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7397	037325	312 00 0 00 041622 		CAME	0,[20B8!0]			;CORRECT UUO STORED IN 40?
  7398	037326	334 00 0 00 000000 		SKIPA				;NO
  7399	037327	254 00 0 00 037336 		JRST	UUO21			;TESTS OK !
  7400						STOP1^
  7401	037330	254 04 0 00 037331 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7402	037331	254 00 0 00 037332 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7403						TGET^
  7404	037332	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7405	037333	302 00 0 00 037312 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-12
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0167

  7406						STOP2^^
  7407	037334	254 04 0 00 037335 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7408	037335	254 00 0 00 037336 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7409					^
  7410					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7411					;MA SPECIAL BITS NOT SETTING
  7412					;AD MAGIC # 40 @ET1
  7413					;XCTF SET AT FETCH CYCLE
  7414					;AR IR ENABLE @ET1
  7415					;AR SIGN SMEAR
  7416					;AD MAGIC NUMBER ENABLE
  7417					;AB AD EN @ET1
  7418					;INSTRUCTION FETCH @ET2
  7419	037336				UUO21:	XUUO	21B8,UUO22^
  7420
  7421					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7422					;ARE CORRECT.
  7423
  7424		021000	000000			MLUUO==21B8			;THE UUO TO BE EXECUTED
  7425						TSET^
  7426			037336			%X=.				;DEFINE %X TO SAVE
  7427	037336	201 00 0 00 037336 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7428	037337	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7429	037340	200 00 0 00 041623 	..0204:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7430	037341	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7431	037342	021000	000000			21B8				;EXECUTE A UUO
  7432	037343	254 04 0 00 037344 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7433	037344	201 02 0 00 037343 		MOVEI	2,.-1			;GET UUO PC
  7434	037345	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7435	037346	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7436	037347	254 04 0 00 037350 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7437	037350	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7438	037351	312 00 0 00 041624 		CAME	0,[21B8!0]			;CORRECT UUO STORED IN 40?
  7439	037352	334 00 0 00 000000 		SKIPA				;NO
  7440	037353	254 00 0 00 037362 		JRST	UUO22			;TESTS OK !
  7441						STOP1^
  7442	037354	254 04 0 00 037355 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7443	037355	254 00 0 00 037356 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7444						TGET^
  7445	037356	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7446	037357	302 00 0 00 037336 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7447						STOP2^^
  7448	037360	254 04 0 00 037361 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7449	037361	254 00 0 00 037362 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7450					^
  7451					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7452					;MA SPECIAL BITS NOT SETTING
  7453					;AD MAGIC # 40 @ET1
  7454					;XCTF SET AT FETCH CYCLE
  7455					;AR IR ENABLE @ET1
  7456					;AR SIGN SMEAR
  7457					;AD MAGIC NUMBER ENABLE
  7458					;AB AD EN @ET1
  7459					;INSTRUCTION FETCH @ET2
  7460	037362				UUO22:	XUUO	22B8,UUO23^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-13
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0168

  7461
  7462					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7463					;ARE CORRECT.
  7464
  7465		022000	000000			MLUUO==22B8			;THE UUO TO BE EXECUTED
  7466						TSET^
  7467			037362			%X=.				;DEFINE %X TO SAVE
  7468	037362	201 00 0 00 037362 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7469	037363	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7470	037364	200 00 0 00 041625 	..0205:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7471	037365	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7472	037366	022000	000000			22B8				;EXECUTE A UUO
  7473	037367	254 04 0 00 037370 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7474	037370	201 02 0 00 037367 		MOVEI	2,.-1			;GET UUO PC
  7475	037371	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7476	037372	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7477	037373	254 04 0 00 037374 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7478	037374	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7479	037375	312 00 0 00 041626 		CAME	0,[22B8!0]			;CORRECT UUO STORED IN 40?
  7480	037376	334 00 0 00 000000 		SKIPA				;NO
  7481	037377	254 00 0 00 037406 		JRST	UUO23			;TESTS OK !
  7482						STOP1^
  7483	037400	254 04 0 00 037401 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7484	037401	254 00 0 00 037402 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7485						TGET^
  7486	037402	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7487	037403	302 00 0 00 037362 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7488						STOP2^^
  7489	037404	254 04 0 00 037405 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7490	037405	254 00 0 00 037406 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7491					^
  7492					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7493					;MA SPECIAL BITS NOT SETTING
  7494					;AD MAGIC # 40 @ET1
  7495					;XCTF SET AT FETCH CYCLE
  7496					;AR IR ENABLE @ET1
  7497					;AR SIGN SMEAR
  7498					;AD MAGIC NUMBER ENABLE
  7499					;AB AD EN @ET1
  7500					;INSTRUCTION FETCH @ET2
  7501	037406				UUO23:	XUUO	23B8,UUO24^
  7502
  7503					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7504					;ARE CORRECT.
  7505
  7506		023000	000000			MLUUO==23B8			;THE UUO TO BE EXECUTED
  7507						TSET^
  7508			037406			%X=.				;DEFINE %X TO SAVE
  7509	037406	201 00 0 00 037406 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7510	037407	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7511	037410	200 00 0 00 041627 	..0206:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7512	037411	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7513	037412	023000	000000			23B8				;EXECUTE A UUO
  7514	037413	254 04 0 00 037414 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7515	037414	201 02 0 00 037413 		MOVEI	2,.-1			;GET UUO PC
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-14
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0169

  7516	037415	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7517	037416	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7518	037417	254 04 0 00 037420 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7519	037420	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7520	037421	312 00 0 00 041630 		CAME	0,[23B8!0]			;CORRECT UUO STORED IN 40?
  7521	037422	334 00 0 00 000000 		SKIPA				;NO
  7522	037423	254 00 0 00 037432 		JRST	UUO24			;TESTS OK !
  7523						STOP1^
  7524	037424	254 04 0 00 037425 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7525	037425	254 00 0 00 037426 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7526						TGET^
  7527	037426	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7528	037427	302 00 0 00 037406 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7529						STOP2^^
  7530	037430	254 04 0 00 037431 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7531	037431	254 00 0 00 037432 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7532					^
  7533					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7534					;MA SPECIAL BITS NOT SETTING
  7535					;AD MAGIC # 40 @ET1
  7536					;XCTF SET AT FETCH CYCLE
  7537					;AR IR ENABLE @ET1
  7538					;AR SIGN SMEAR
  7539					;AD MAGIC NUMBER ENABLE
  7540					;AB AD EN @ET1
  7541					;INSTRUCTION FETCH @ET2
  7542	037432				UUO24:	XUUO	24B8,UUO25^
  7543
  7544					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7545					;ARE CORRECT.
  7546
  7547		024000	000000			MLUUO==24B8			;THE UUO TO BE EXECUTED
  7548						TSET^
  7549			037432			%X=.				;DEFINE %X TO SAVE
  7550	037432	201 00 0 00 037432 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7551	037433	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7552	037434	200 00 0 00 041631 	..0207:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7553	037435	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7554	037436	024000	000000			24B8				;EXECUTE A UUO
  7555	037437	254 04 0 00 037440 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7556	037440	201 02 0 00 037437 		MOVEI	2,.-1			;GET UUO PC
  7557	037441	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7558	037442	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7559	037443	254 04 0 00 037444 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7560	037444	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7561	037445	312 00 0 00 041632 		CAME	0,[24B8!0]			;CORRECT UUO STORED IN 40?
  7562	037446	334 00 0 00 000000 		SKIPA				;NO
  7563	037447	254 00 0 00 037456 		JRST	UUO25			;TESTS OK !
  7564						STOP1^
  7565	037450	254 04 0 00 037451 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7566	037451	254 00 0 00 037452 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7567						TGET^
  7568	037452	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7569	037453	302 00 0 00 037432 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7570						STOP2^^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-15
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0170

  7571	037454	254 04 0 00 037455 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7572	037455	254 00 0 00 037456 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7573					^
  7574					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7575					;MA SPECIAL BITS NOT SETTING
  7576					;AD MAGIC # 40 @ET1
  7577					;XCTF SET AT FETCH CYCLE
  7578					;AR IR ENABLE @ET1
  7579					;AR SIGN SMEAR
  7580					;AD MAGIC NUMBER ENABLE
  7581					;AB AD EN @ET1
  7582					;INSTRUCTION FETCH @ET2
  7583	037456				UUO25:	XUUO	25B8,UUO26^
  7584
  7585					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7586					;ARE CORRECT.
  7587
  7588		025000	000000			MLUUO==25B8			;THE UUO TO BE EXECUTED
  7589						TSET^
  7590			037456			%X=.				;DEFINE %X TO SAVE
  7591	037456	201 00 0 00 037456 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7592	037457	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7593	037460	200 00 0 00 041633 	..0210:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7594	037461	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7595	037462	025000	000000			25B8				;EXECUTE A UUO
  7596	037463	254 04 0 00 037464 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7597	037464	201 02 0 00 037463 		MOVEI	2,.-1			;GET UUO PC
  7598	037465	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7599	037466	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7600	037467	254 04 0 00 037470 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7601	037470	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7602	037471	312 00 0 00 041634 		CAME	0,[25B8!0]			;CORRECT UUO STORED IN 40?
  7603	037472	334 00 0 00 000000 		SKIPA				;NO
  7604	037473	254 00 0 00 037502 		JRST	UUO26			;TESTS OK !
  7605						STOP1^
  7606	037474	254 04 0 00 037475 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7607	037475	254 00 0 00 037476 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7608						TGET^
  7609	037476	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7610	037477	302 00 0 00 037456 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7611						STOP2^^
  7612	037500	254 04 0 00 037501 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7613	037501	254 00 0 00 037502 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7614					^
  7615					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7616					;MA SPECIAL BITS NOT SETTING
  7617					;AD MAGIC # 40 @ET1
  7618					;XCTF SET AT FETCH CYCLE
  7619					;AR IR ENABLE @ET1
  7620					;AR SIGN SMEAR
  7621					;AD MAGIC NUMBER ENABLE
  7622					;AB AD EN @ET1
  7623					;INSTRUCTION FETCH @ET2
  7624	037502				UUO26:	XUUO	26B8,UUO27^
  7625
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-16
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0171

  7626					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7627					;ARE CORRECT.
  7628
  7629		026000	000000			MLUUO==26B8			;THE UUO TO BE EXECUTED
  7630						TSET^
  7631			037502			%X=.				;DEFINE %X TO SAVE
  7632	037502	201 00 0 00 037502 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7633	037503	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7634	037504	200 00 0 00 041635 	..0211:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7635	037505	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7636	037506	026000	000000			26B8				;EXECUTE A UUO
  7637	037507	254 04 0 00 037510 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7638	037510	201 02 0 00 037507 		MOVEI	2,.-1			;GET UUO PC
  7639	037511	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7640	037512	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7641	037513	254 04 0 00 037514 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7642	037514	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7643	037515	312 00 0 00 041636 		CAME	0,[26B8!0]			;CORRECT UUO STORED IN 40?
  7644	037516	334 00 0 00 000000 		SKIPA				;NO
  7645	037517	254 00 0 00 037526 		JRST	UUO27			;TESTS OK !
  7646						STOP1^
  7647	037520	254 04 0 00 037521 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7648	037521	254 00 0 00 037522 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7649						TGET^
  7650	037522	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7651	037523	302 00 0 00 037502 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7652						STOP2^^
  7653	037524	254 04 0 00 037525 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7654	037525	254 00 0 00 037526 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7655					^
  7656					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7657					;MA SPECIAL BITS NOT SETTING
  7658					;AD MAGIC # 40 @ET1
  7659					;XCTF SET AT FETCH CYCLE
  7660					;AR IR ENABLE @ET1
  7661					;AR SIGN SMEAR
  7662					;AD MAGIC NUMBER ENABLE
  7663					;AB AD EN @ET1
  7664					;INSTRUCTION FETCH @ET2
  7665	037526				UUO27:	XUUO	27B8,UUO30^
  7666
  7667					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7668					;ARE CORRECT.
  7669
  7670		027000	000000			MLUUO==27B8			;THE UUO TO BE EXECUTED
  7671						TSET^
  7672			037526			%X=.				;DEFINE %X TO SAVE
  7673	037526	201 00 0 00 037526 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7674	037527	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7675	037530	200 00 0 00 041637 	..0212:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7676	037531	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7677	037532	027000	000000			27B8				;EXECUTE A UUO
  7678	037533	254 04 0 00 037534 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7679	037534	201 02 0 00 037533 		MOVEI	2,.-1			;GET UUO PC
  7680	037535	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-17
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0172

  7681	037536	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7682	037537	254 04 0 00 037540 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7683	037540	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7684	037541	312 00 0 00 041640 		CAME	0,[27B8!0]			;CORRECT UUO STORED IN 40?
  7685	037542	334 00 0 00 000000 		SKIPA				;NO
  7686	037543	254 00 0 00 037552 		JRST	UUO30			;TESTS OK !
  7687						STOP1^
  7688	037544	254 04 0 00 037545 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7689	037545	254 00 0 00 037546 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7690						TGET^
  7691	037546	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7692	037547	302 00 0 00 037526 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7693						STOP2^^
  7694	037550	254 04 0 00 037551 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7695	037551	254 00 0 00 037552 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7696					^
  7697					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7698					;MA SPECIAL BITS NOT SETTING
  7699					;AD MAGIC # 40 @ET1
  7700					;XCTF SET AT FETCH CYCLE
  7701					;AR IR ENABLE @ET1
  7702					;AR SIGN SMEAR
  7703					;AD MAGIC NUMBER ENABLE
  7704					;AB AD EN @ET1
  7705					;INSTRUCTION FETCH @ET2
  7706	037552				UUO30:	XUUO	30B8,UUO31^
  7707
  7708					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7709					;ARE CORRECT.
  7710
  7711		030000	000000			MLUUO==30B8			;THE UUO TO BE EXECUTED
  7712						TSET^
  7713			037552			%X=.				;DEFINE %X TO SAVE
  7714	037552	201 00 0 00 037552 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7715	037553	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7716	037554	200 00 0 00 041641 	..0213:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7717	037555	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7718	037556	030000	000000			30B8				;EXECUTE A UUO
  7719	037557	254 04 0 00 037560 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7720	037560	201 02 0 00 037557 		MOVEI	2,.-1			;GET UUO PC
  7721	037561	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7722	037562	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7723	037563	254 04 0 00 037564 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7724	037564	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7725	037565	312 00 0 00 041642 		CAME	0,[30B8!0]			;CORRECT UUO STORED IN 40?
  7726	037566	334 00 0 00 000000 		SKIPA				;NO
  7727	037567	254 00 0 00 037576 		JRST	UUO31			;TESTS OK !
  7728						STOP1^
  7729	037570	254 04 0 00 037571 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7730	037571	254 00 0 00 037572 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7731						TGET^
  7732	037572	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7733	037573	302 00 0 00 037552 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7734						STOP2^^
  7735	037574	254 04 0 00 037575 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-18
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0173

  7736	037575	254 00 0 00 037576 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7737					^
  7738					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7739					;MA SPECIAL BITS NOT SETTING
  7740					;AD MAGIC # 40 @ET1
  7741					;XCTF SET AT FETCH CYCLE
  7742					;AR IR ENABLE @ET1
  7743					;AR SIGN SMEAR
  7744					;AD MAGIC NUMBER ENABLE
  7745					;AB AD EN @ET1
  7746					;INSTRUCTION FETCH @ET2
  7747	037576				UUO31:	XUUO	31B8,UUO32^
  7748
  7749					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7750					;ARE CORRECT.
  7751
  7752		031000	000000			MLUUO==31B8			;THE UUO TO BE EXECUTED
  7753						TSET^
  7754			037576			%X=.				;DEFINE %X TO SAVE
  7755	037576	201 00 0 00 037576 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7756	037577	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7757	037600	200 00 0 00 041643 	..0214:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7758	037601	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7759	037602	031000	000000			31B8				;EXECUTE A UUO
  7760	037603	254 04 0 00 037604 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7761	037604	201 02 0 00 037603 		MOVEI	2,.-1			;GET UUO PC
  7762	037605	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7763	037606	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7764	037607	254 04 0 00 037610 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7765	037610	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7766	037611	312 00 0 00 041644 		CAME	0,[31B8!0]			;CORRECT UUO STORED IN 40?
  7767	037612	334 00 0 00 000000 		SKIPA				;NO
  7768	037613	254 00 0 00 037622 		JRST	UUO32			;TESTS OK !
  7769						STOP1^
  7770	037614	254 04 0 00 037615 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7771	037615	254 00 0 00 037616 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7772						TGET^
  7773	037616	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7774	037617	302 00 0 00 037576 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7775						STOP2^^
  7776	037620	254 04 0 00 037621 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7777	037621	254 00 0 00 037622 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7778					^
  7779					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7780					;MA SPECIAL BITS NOT SETTING
  7781					;AD MAGIC # 40 @ET1
  7782					;XCTF SET AT FETCH CYCLE
  7783					;AR IR ENABLE @ET1
  7784					;AR SIGN SMEAR
  7785					;AD MAGIC NUMBER ENABLE
  7786					;AB AD EN @ET1
  7787					;INSTRUCTION FETCH @ET2
  7788	037622				UUO32:	XUUO	32B8,UUO33^
  7789
  7790					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-19
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0174

  7791					;ARE CORRECT.
  7792
  7793		032000	000000			MLUUO==32B8			;THE UUO TO BE EXECUTED
  7794						TSET^
  7795			037622			%X=.				;DEFINE %X TO SAVE
  7796	037622	201 00 0 00 037622 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7797	037623	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7798	037624	200 00 0 00 041645 	..0215:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7799	037625	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7800	037626	032000	000000			32B8				;EXECUTE A UUO
  7801	037627	254 04 0 00 037630 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7802	037630	201 02 0 00 037627 		MOVEI	2,.-1			;GET UUO PC
  7803	037631	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7804	037632	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7805	037633	254 04 0 00 037634 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7806	037634	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7807	037635	312 00 0 00 041646 		CAME	0,[32B8!0]			;CORRECT UUO STORED IN 40?
  7808	037636	334 00 0 00 000000 		SKIPA				;NO
  7809	037637	254 00 0 00 037646 		JRST	UUO33			;TESTS OK !
  7810						STOP1^
  7811	037640	254 04 0 00 037641 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7812	037641	254 00 0 00 037642 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7813						TGET^
  7814	037642	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7815	037643	302 00 0 00 037622 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7816						STOP2^^
  7817	037644	254 04 0 00 037645 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7818	037645	254 00 0 00 037646 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7819					^
  7820					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7821					;MA SPECIAL BITS NOT SETTING
  7822					;AD MAGIC # 40 @ET1
  7823					;XCTF SET AT FETCH CYCLE
  7824					;AR IR ENABLE @ET1
  7825					;AR SIGN SMEAR
  7826					;AD MAGIC NUMBER ENABLE
  7827					;AB AD EN @ET1
  7828					;INSTRUCTION FETCH @ET2
  7829	037646				UUO33:	XUUO	33B8,UUO34^
  7830
  7831					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7832					;ARE CORRECT.
  7833
  7834		033000	000000			MLUUO==33B8			;THE UUO TO BE EXECUTED
  7835						TSET^
  7836			037646			%X=.				;DEFINE %X TO SAVE
  7837	037646	201 00 0 00 037646 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7838	037647	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7839	037650	200 00 0 00 041647 	..0216:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7840	037651	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7841	037652	033000	000000			33B8				;EXECUTE A UUO
  7842	037653	254 04 0 00 037654 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7843	037654	201 02 0 00 037653 		MOVEI	2,.-1			;GET UUO PC
  7844	037655	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7845	037656	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-20
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0175

  7846	037657	254 04 0 00 037660 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7847	037660	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7848	037661	312 00 0 00 041650 		CAME	0,[33B8!0]			;CORRECT UUO STORED IN 40?
  7849	037662	334 00 0 00 000000 		SKIPA				;NO
  7850	037663	254 00 0 00 037672 		JRST	UUO34			;TESTS OK !
  7851						STOP1^
  7852	037664	254 04 0 00 037665 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7853	037665	254 00 0 00 037666 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7854						TGET^
  7855	037666	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7856	037667	302 00 0 00 037646 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7857						STOP2^^
  7858	037670	254 04 0 00 037671 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7859	037671	254 00 0 00 037672 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7860					^
  7861					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7862					;MA SPECIAL BITS NOT SETTING
  7863					;AD MAGIC # 40 @ET1
  7864					;XCTF SET AT FETCH CYCLE
  7865					;AR IR ENABLE @ET1
  7866					;AR SIGN SMEAR
  7867					;AD MAGIC NUMBER ENABLE
  7868					;AB AD EN @ET1
  7869					;INSTRUCTION FETCH @ET2
  7870	037672				UUO34:	XUUO	34B8,UUO35^
  7871
  7872					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7873					;ARE CORRECT.
  7874
  7875		034000	000000			MLUUO==34B8			;THE UUO TO BE EXECUTED
  7876						TSET^
  7877			037672			%X=.				;DEFINE %X TO SAVE
  7878	037672	201 00 0 00 037672 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7879	037673	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7880	037674	200 00 0 00 041651 	..0217:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7881	037675	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7882	037676	034000	000000			34B8				;EXECUTE A UUO
  7883	037677	254 04 0 00 037700 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7884	037700	201 02 0 00 037677 		MOVEI	2,.-1			;GET UUO PC
  7885	037701	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7886	037702	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7887	037703	254 04 0 00 037704 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7888	037704	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7889	037705	312 00 0 00 041652 		CAME	0,[34B8!0]			;CORRECT UUO STORED IN 40?
  7890	037706	334 00 0 00 000000 		SKIPA				;NO
  7891	037707	254 00 0 00 037716 		JRST	UUO35			;TESTS OK !
  7892						STOP1^
  7893	037710	254 04 0 00 037711 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7894	037711	254 00 0 00 037712 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7895						TGET^
  7896	037712	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7897	037713	302 00 0 00 037672 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7898						STOP2^^
  7899	037714	254 04 0 00 037715 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7900	037715	254 00 0 00 037716 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-21
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0176

  7901					^
  7902					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7903					;MA SPECIAL BITS NOT SETTING
  7904					;AD MAGIC # 40 @ET1
  7905					;XCTF SET AT FETCH CYCLE
  7906					;AR IR ENABLE @ET1
  7907					;AR SIGN SMEAR
  7908					;AD MAGIC NUMBER ENABLE
  7909					;AB AD EN @ET1
  7910					;INSTRUCTION FETCH @ET2
  7911	037716				UUO35:	XUUO	35B8,UUO36^
  7912
  7913					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7914					;ARE CORRECT.
  7915
  7916		035000	000000			MLUUO==35B8			;THE UUO TO BE EXECUTED
  7917						TSET^
  7918			037716			%X=.				;DEFINE %X TO SAVE
  7919	037716	201 00 0 00 037716 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7920	037717	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7921	037720	200 00 0 00 041653 	..0220:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7922	037721	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7923	037722	035000	000000			35B8				;EXECUTE A UUO
  7924	037723	254 04 0 00 037724 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7925	037724	201 02 0 00 037723 		MOVEI	2,.-1			;GET UUO PC
  7926	037725	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7927	037726	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7928	037727	254 04 0 00 037730 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7929	037730	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7930	037731	312 00 0 00 041654 		CAME	0,[35B8!0]			;CORRECT UUO STORED IN 40?
  7931	037732	334 00 0 00 000000 		SKIPA				;NO
  7932	037733	254 00 0 00 037742 		JRST	UUO36			;TESTS OK !
  7933						STOP1^
  7934	037734	254 04 0 00 037735 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7935	037735	254 00 0 00 037736 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7936						TGET^
  7937	037736	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7938	037737	302 00 0 00 037716 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7939						STOP2^^
  7940	037740	254 04 0 00 037741 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7941	037741	254 00 0 00 037742 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7942					^
  7943					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7944					;MA SPECIAL BITS NOT SETTING
  7945					;AD MAGIC # 40 @ET1
  7946					;XCTF SET AT FETCH CYCLE
  7947					;AR IR ENABLE @ET1
  7948					;AR SIGN SMEAR
  7949					;AD MAGIC NUMBER ENABLE
  7950					;AB AD EN @ET1
  7951					;INSTRUCTION FETCH @ET2
  7952	037742				UUO36:	XUUO	36B8,UUO37^
  7953
  7954					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7955					;ARE CORRECT.
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-22
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0177

  7956
  7957		036000	000000			MLUUO==36B8			;THE UUO TO BE EXECUTED
  7958						TSET^
  7959			037742			%X=.				;DEFINE %X TO SAVE
  7960	037742	201 00 0 00 037742 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  7961	037743	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  7962	037744	200 00 0 00 041655 	..0221:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  7963	037745	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  7964	037746	036000	000000			36B8				;EXECUTE A UUO
  7965	037747	254 04 0 00 037750 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  7966	037750	201 02 0 00 037747 		MOVEI	2,.-1			;GET UUO PC
  7967	037751	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  7968	037752	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  7969	037753	254 04 0 00 037754 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
  7970	037754	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  7971	037755	312 00 0 00 041656 		CAME	0,[36B8!0]			;CORRECT UUO STORED IN 40?
  7972	037756	334 00 0 00 000000 		SKIPA				;NO
  7973	037757	254 00 0 00 037766 		JRST	UUO37			;TESTS OK !
  7974						STOP1^
  7975	037760	254 04 0 00 037761 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  7976	037761	254 00 0 00 037762 		JRST	.+1			;INTO RIGHT HALF OF 40^
  7977						TGET^
  7978	037762	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  7979	037763	302 00 0 00 037742 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  7980						STOP2^^
  7981	037764	254 04 0 00 037765 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  7982	037765	254 00 0 00 037766 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  7983					^
  7984					;POSSIBLE CAUSES OF FAILURES IN LUUO FLOW.
  7985					;MA SPECIAL BITS NOT SETTING
  7986					;AD MAGIC # 40 @ET1
  7987					;XCTF SET AT FETCH CYCLE
  7988					;AR IR ENABLE @ET1
  7989					;AR SIGN SMEAR
  7990					;AD MAGIC NUMBER ENABLE
  7991					;AB AD EN @ET1
  7992					;INSTRUCTION FETCH @ET2
  7993	037766				UUO37:	XUUO	37B8,UUOPC^
  7994
  7995					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  7996					;ARE CORRECT.
  7997
  7998		037000	000000			MLUUO==37B8			;THE UUO TO BE EXECUTED
  7999						TSET^
  8000			037766			%X=.				;DEFINE %X TO SAVE
  8001	037766	201 00 0 00 037766 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8002	037767	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8003	037770	200 00 0 00 041657 	..0222:	MOVE	0,[JSP	1,.+4]		;TRAP INSTRUCTION
  8004	037771	202 00 0 00 000041 		MOVEM	0,41			;IN TO 41
  8005	037772	037000	000000			37B8				;EXECUTE A UUO
  8006	037773	254 04 0 00 037774 		HALT	.+1			;UUO DID NOT TRAP TO FORTY
  8007	037774	201 02 0 00 037773 		MOVEI	2,.-1			;GET UUO PC
  8008	037775	405 01 0 00 777777 		ANDI	1,-1			;MASK FLAGS OUT
  8009	037776	312 01 0 00 000002 		CAME	1,2			;PC CORRECT ?
  8010	037777	254 04 0 00 040000 		HALT	.+1			;PC OF UUO NOT = TO PC STORED
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 23-23
DBKAHM	MAC	18-Jan-79 11:21		LOCAL UUO TESTING (LUUO)                                                           SEQ 0178

  8011	040000	200 00 0 00 000040 		MOVE	0,40			;GET UUO !
  8012	040001	312 00 0 00 041660 		CAME	0,[37B8!0]			;CORRECT UUO STORED IN 40?
  8013	040002	334 00 0 00 000000 		SKIPA				;NO
  8014	040003	254 00 0 00 040013 		JRST	UUOPC			;TESTS OK !
  8015						STOP1^
  8016	040004	254 04 0 00 040005 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8017	040005	254 00 0 00 040006 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8018						TGET^
  8019	040006	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8020	040007	302 00 0 00 037766 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8021						STOP2^^
  8022	040010	254 04 0 00 040011 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8023	040011	254 00 0 00 040012 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8024					^
  8025
  8026	040012	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0179

  8027					SUBTTL	TEST UUO STORING CORRECTLY
  8028					;TEST THE MA PORTION OF THE UUO TO SEE IF BITS 18-35 ARE STORED CORRECTLY
  8029					;ROUTINE ROTATES A BIT LEFT THROUGH THE MA OF THE UUO
  8030					;THEN DOES ALTERNATING PATTERN, ALL ONES AND ALL ZEROS
  8031
  8032			000001			X=1
  8033	040013				UUOPC:
  8034	040013				UUOPCA:
  8035						REPEAT	^D18,<
  8036						XUUOA	X
  8037						X=X_1
  8038					>
  8039
  8040						XUUOA	X^
  8041
  8042					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8043
  8044			000001			EFIELD==X			;"E" WE ARE TESTING FOR
  8045						TSET^
  8046			040013			%X=.				;DEFINE %X TO SAVE
  8047	040013	201 00 0 00 040013 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8048	040014	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8049	040015	200 00 0 00 041661 	..0223:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8050	040016	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8051	040017	001000	000001			1B8!X				;EXECUTE A UUO
  8052	040020	254 04 0 00 040021 	..0224:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8053	040021	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8054	040022	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8055	040023	302 00 0 00 000001 		CAIE	X			;MA BITS CORRECT?
  8056	040024				..0225:	STOP1^
  8057	040024	254 04 0 00 040025 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8058	040025	254 00 0 00 040026 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8059						TGET^
  8060	040026	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8061	040027	302 00 0 00 040013 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8062						STOP2^^
  8063	040030	254 04 0 00 040031 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8064	040031	254 00 0 00 040032 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8065					^
  8066			000002			X=X_1
  8067
  8068
  8069						XUUOA	X^
  8070
  8071					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8072
  8073			000002			EFIELD==X			;"E" WE ARE TESTING FOR
  8074						TSET^
  8075			040032			%X=.				;DEFINE %X TO SAVE
  8076	040032	201 00 0 00 040032 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8077	040033	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8078	040034	200 00 0 00 041662 	..0226:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8079	040035	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8080	040036	001000	000002			1B8!X				;EXECUTE A UUO
  8081	040037	254 04 0 00 040040 	..0227:	HALT	.+1			;UUO DIDN'T TRAP TO 40
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-1
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0180

  8082	040040	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8083	040041	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8084	040042	302 00 0 00 000002 		CAIE	X			;MA BITS CORRECT?
  8085	040043				..0230:	STOP1^
  8086	040043	254 04 0 00 040044 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8087	040044	254 00 0 00 040045 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8088						TGET^
  8089	040045	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8090	040046	302 00 0 00 040032 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8091						STOP2^^
  8092	040047	254 04 0 00 040050 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8093	040050	254 00 0 00 040051 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8094					^
  8095			000004			X=X_1
  8096
  8097
  8098						XUUOA	X^
  8099
  8100					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8101
  8102			000004			EFIELD==X			;"E" WE ARE TESTING FOR
  8103						TSET^
  8104			040051			%X=.				;DEFINE %X TO SAVE
  8105	040051	201 00 0 00 040051 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8106	040052	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8107	040053	200 00 0 00 041663 	..0231:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8108	040054	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8109	040055	001000	000004			1B8!X				;EXECUTE A UUO
  8110	040056	254 04 0 00 040057 	..0232:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8111	040057	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8112	040060	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8113	040061	302 00 0 00 000004 		CAIE	X			;MA BITS CORRECT?
  8114	040062				..0233:	STOP1^
  8115	040062	254 04 0 00 040063 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8116	040063	254 00 0 00 040064 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8117						TGET^
  8118	040064	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8119	040065	302 00 0 00 040051 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8120						STOP2^^
  8121	040066	254 04 0 00 040067 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8122	040067	254 00 0 00 040070 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8123					^
  8124			000010			X=X_1
  8125
  8126
  8127						XUUOA	X^
  8128
  8129					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8130
  8131			000010			EFIELD==X			;"E" WE ARE TESTING FOR
  8132						TSET^
  8133			040070			%X=.				;DEFINE %X TO SAVE
  8134	040070	201 00 0 00 040070 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8135	040071	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8136	040072	200 00 0 00 041664 	..0234:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-2
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0181

  8137	040073	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8138	040074	001000	000010			1B8!X				;EXECUTE A UUO
  8139	040075	254 04 0 00 040076 	..0235:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8140	040076	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8141	040077	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8142	040100	302 00 0 00 000010 		CAIE	X			;MA BITS CORRECT?
  8143	040101				..0236:	STOP1^
  8144	040101	254 04 0 00 040102 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8145	040102	254 00 0 00 040103 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8146						TGET^
  8147	040103	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8148	040104	302 00 0 00 040070 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8149						STOP2^^
  8150	040105	254 04 0 00 040106 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8151	040106	254 00 0 00 040107 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8152					^
  8153			000020			X=X_1
  8154
  8155
  8156						XUUOA	X^
  8157
  8158					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8159
  8160			000020			EFIELD==X			;"E" WE ARE TESTING FOR
  8161						TSET^
  8162			040107			%X=.				;DEFINE %X TO SAVE
  8163	040107	201 00 0 00 040107 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8164	040110	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8165	040111	200 00 0 00 041665 	..0237:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8166	040112	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8167	040113	001000	000020			1B8!X				;EXECUTE A UUO
  8168	040114	254 04 0 00 040115 	..0240:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8169	040115	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8170	040116	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8171	040117	302 00 0 00 000020 		CAIE	X			;MA BITS CORRECT?
  8172	040120				..0241:	STOP1^
  8173	040120	254 04 0 00 040121 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8174	040121	254 00 0 00 040122 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8175						TGET^
  8176	040122	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8177	040123	302 00 0 00 040107 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8178						STOP2^^
  8179	040124	254 04 0 00 040125 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8180	040125	254 00 0 00 040126 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8181					^
  8182			000040			X=X_1
  8183
  8184
  8185						XUUOA	X^
  8186
  8187					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8188
  8189			000040			EFIELD==X			;"E" WE ARE TESTING FOR
  8190						TSET^
  8191			040126			%X=.				;DEFINE %X TO SAVE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-3
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0182

  8192	040126	201 00 0 00 040126 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8193	040127	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8194	040130	200 00 0 00 041666 	..0242:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8195	040131	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8196	040132	001000	000040			1B8!X				;EXECUTE A UUO
  8197	040133	254 04 0 00 040134 	..0243:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8198	040134	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8199	040135	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8200	040136	302 00 0 00 000040 		CAIE	X			;MA BITS CORRECT?
  8201	040137				..0244:	STOP1^
  8202	040137	254 04 0 00 040140 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8203	040140	254 00 0 00 040141 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8204						TGET^
  8205	040141	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8206	040142	302 00 0 00 040126 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8207						STOP2^^
  8208	040143	254 04 0 00 040144 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8209	040144	254 00 0 00 040145 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8210					^
  8211			000100			X=X_1
  8212
  8213
  8214						XUUOA	X^
  8215
  8216					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8217
  8218			000100			EFIELD==X			;"E" WE ARE TESTING FOR
  8219						TSET^
  8220			040145			%X=.				;DEFINE %X TO SAVE
  8221	040145	201 00 0 00 040145 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8222	040146	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8223	040147	200 00 0 00 041667 	..0245:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8224	040150	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8225	040151	001000	000100			1B8!X				;EXECUTE A UUO
  8226	040152	254 04 0 00 040153 	..0246:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8227	040153	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8228	040154	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8229	040155	302 00 0 00 000100 		CAIE	X			;MA BITS CORRECT?
  8230	040156				..0247:	STOP1^
  8231	040156	254 04 0 00 040157 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8232	040157	254 00 0 00 040160 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8233						TGET^
  8234	040160	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8235	040161	302 00 0 00 040145 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8236						STOP2^^
  8237	040162	254 04 0 00 040163 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8238	040163	254 00 0 00 040164 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8239					^
  8240			000200			X=X_1
  8241
  8242
  8243						XUUOA	X^
  8244
  8245					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8246
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-4
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0183

  8247			000200			EFIELD==X			;"E" WE ARE TESTING FOR
  8248						TSET^
  8249			040164			%X=.				;DEFINE %X TO SAVE
  8250	040164	201 00 0 00 040164 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8251	040165	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8252	040166	200 00 0 00 041670 	..0250:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8253	040167	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8254	040170	001000	000200			1B8!X				;EXECUTE A UUO
  8255	040171	254 04 0 00 040172 	..0251:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8256	040172	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8257	040173	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8258	040174	302 00 0 00 000200 		CAIE	X			;MA BITS CORRECT?
  8259	040175				..0252:	STOP1^
  8260	040175	254 04 0 00 040176 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8261	040176	254 00 0 00 040177 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8262						TGET^
  8263	040177	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8264	040200	302 00 0 00 040164 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8265						STOP2^^
  8266	040201	254 04 0 00 040202 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8267	040202	254 00 0 00 040203 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8268					^
  8269			000400			X=X_1
  8270
  8271
  8272						XUUOA	X^
  8273
  8274					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8275
  8276			000400			EFIELD==X			;"E" WE ARE TESTING FOR
  8277						TSET^
  8278			040203			%X=.				;DEFINE %X TO SAVE
  8279	040203	201 00 0 00 040203 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8280	040204	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8281	040205	200 00 0 00 041671 	..0253:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8282	040206	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8283	040207	001000	000400			1B8!X				;EXECUTE A UUO
  8284	040210	254 04 0 00 040211 	..0254:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8285	040211	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8286	040212	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8287	040213	302 00 0 00 000400 		CAIE	X			;MA BITS CORRECT?
  8288	040214				..0255:	STOP1^
  8289	040214	254 04 0 00 040215 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8290	040215	254 00 0 00 040216 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8291						TGET^
  8292	040216	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8293	040217	302 00 0 00 040203 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8294						STOP2^^
  8295	040220	254 04 0 00 040221 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8296	040221	254 00 0 00 040222 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8297					^
  8298			001000			X=X_1
  8299
  8300
  8301						XUUOA	X^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-5
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0184

  8302
  8303					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8304
  8305			001000			EFIELD==X			;"E" WE ARE TESTING FOR
  8306						TSET^
  8307			040222			%X=.				;DEFINE %X TO SAVE
  8308	040222	201 00 0 00 040222 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8309	040223	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8310	040224	200 00 0 00 041672 	..0256:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8311	040225	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8312	040226	001000	001000			1B8!X				;EXECUTE A UUO
  8313	040227	254 04 0 00 040230 	..0257:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8314	040230	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8315	040231	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8316	040232	302 00 0 00 001000 		CAIE	X			;MA BITS CORRECT?
  8317	040233				..0260:	STOP1^
  8318	040233	254 04 0 00 040234 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8319	040234	254 00 0 00 040235 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8320						TGET^
  8321	040235	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8322	040236	302 00 0 00 040222 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8323						STOP2^^
  8324	040237	254 04 0 00 040240 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8325	040240	254 00 0 00 040241 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8326					^
  8327			002000			X=X_1
  8328
  8329
  8330						XUUOA	X^
  8331
  8332					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8333
  8334			002000			EFIELD==X			;"E" WE ARE TESTING FOR
  8335						TSET^
  8336			040241			%X=.				;DEFINE %X TO SAVE
  8337	040241	201 00 0 00 040241 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8338	040242	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8339	040243	200 00 0 00 041673 	..0261:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8340	040244	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8341	040245	001000	002000			1B8!X				;EXECUTE A UUO
  8342	040246	254 04 0 00 040247 	..0262:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8343	040247	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8344	040250	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8345	040251	302 00 0 00 002000 		CAIE	X			;MA BITS CORRECT?
  8346	040252				..0263:	STOP1^
  8347	040252	254 04 0 00 040253 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8348	040253	254 00 0 00 040254 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8349						TGET^
  8350	040254	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8351	040255	302 00 0 00 040241 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8352						STOP2^^
  8353	040256	254 04 0 00 040257 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8354	040257	254 00 0 00 040260 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8355					^
  8356			004000			X=X_1
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-6
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0185

  8357
  8358
  8359						XUUOA	X^
  8360
  8361					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8362
  8363			004000			EFIELD==X			;"E" WE ARE TESTING FOR
  8364						TSET^
  8365			040260			%X=.				;DEFINE %X TO SAVE
  8366	040260	201 00 0 00 040260 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8367	040261	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8368	040262	200 00 0 00 041674 	..0264:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8369	040263	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8370	040264	001000	004000			1B8!X				;EXECUTE A UUO
  8371	040265	254 04 0 00 040266 	..0265:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8372	040266	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8373	040267	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8374	040270	302 00 0 00 004000 		CAIE	X			;MA BITS CORRECT?
  8375	040271				..0266:	STOP1^
  8376	040271	254 04 0 00 040272 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8377	040272	254 00 0 00 040273 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8378						TGET^
  8379	040273	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8380	040274	302 00 0 00 040260 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8381						STOP2^^
  8382	040275	254 04 0 00 040276 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8383	040276	254 00 0 00 040277 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8384					^
  8385			010000			X=X_1
  8386
  8387
  8388						XUUOA	X^
  8389
  8390					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8391
  8392			010000			EFIELD==X			;"E" WE ARE TESTING FOR
  8393						TSET^
  8394			040277			%X=.				;DEFINE %X TO SAVE
  8395	040277	201 00 0 00 040277 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8396	040300	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8397	040301	200 00 0 00 041675 	..0267:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8398	040302	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8399	040303	001000	010000			1B8!X				;EXECUTE A UUO
  8400	040304	254 04 0 00 040305 	..0270:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8401	040305	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8402	040306	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8403	040307	302 00 0 00 010000 		CAIE	X			;MA BITS CORRECT?
  8404	040310				..0271:	STOP1^
  8405	040310	254 04 0 00 040311 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8406	040311	254 00 0 00 040312 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8407						TGET^
  8408	040312	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8409	040313	302 00 0 00 040277 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8410						STOP2^^
  8411	040314	254 04 0 00 040315 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-7
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0186

  8412	040315	254 00 0 00 040316 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8413					^
  8414			020000			X=X_1
  8415
  8416
  8417						XUUOA	X^
  8418
  8419					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8420
  8421			020000			EFIELD==X			;"E" WE ARE TESTING FOR
  8422						TSET^
  8423			040316			%X=.				;DEFINE %X TO SAVE
  8424	040316	201 00 0 00 040316 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8425	040317	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8426	040320	200 00 0 00 041676 	..0272:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8427	040321	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8428	040322	001000	020000			1B8!X				;EXECUTE A UUO
  8429	040323	254 04 0 00 040324 	..0273:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8430	040324	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8431	040325	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8432	040326	302 00 0 00 020000 		CAIE	X			;MA BITS CORRECT?
  8433	040327				..0274:	STOP1^
  8434	040327	254 04 0 00 040330 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8435	040330	254 00 0 00 040331 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8436						TGET^
  8437	040331	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8438	040332	302 00 0 00 040316 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8439						STOP2^^
  8440	040333	254 04 0 00 040334 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8441	040334	254 00 0 00 040335 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8442					^
  8443			040000			X=X_1
  8444
  8445
  8446						XUUOA	X^
  8447
  8448					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8449
  8450			040000			EFIELD==X			;"E" WE ARE TESTING FOR
  8451						TSET^
  8452			040335			%X=.				;DEFINE %X TO SAVE
  8453	040335	201 00 0 00 040335 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8454	040336	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8455	040337	200 00 0 00 041677 	..0275:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8456	040340	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8457	040341	001000	040000			1B8!X				;EXECUTE A UUO
  8458	040342	254 04 0 00 040343 	..0276:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8459	040343	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8460	040344	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8461	040345	302 00 0 00 040000 		CAIE	X			;MA BITS CORRECT?
  8462	040346				..0277:	STOP1^
  8463	040346	254 04 0 00 040347 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8464	040347	254 00 0 00 040350 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8465						TGET^
  8466	040350	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-8
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0187

  8467	040351	302 00 0 00 040335 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8468						STOP2^^
  8469	040352	254 04 0 00 040353 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8470	040353	254 00 0 00 040354 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8471					^
  8472			100000			X=X_1
  8473
  8474
  8475						XUUOA	X^
  8476
  8477					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8478
  8479			100000			EFIELD==X			;"E" WE ARE TESTING FOR
  8480						TSET^
  8481			040354			%X=.				;DEFINE %X TO SAVE
  8482	040354	201 00 0 00 040354 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8483	040355	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8484	040356	200 00 0 00 041700 	..0300:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8485	040357	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8486	040360	001000	100000			1B8!X				;EXECUTE A UUO
  8487	040361	254 04 0 00 040362 	..0301:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8488	040362	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8489	040363	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8490	040364	302 00 0 00 100000 		CAIE	X			;MA BITS CORRECT?
  8491	040365				..0302:	STOP1^
  8492	040365	254 04 0 00 040366 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8493	040366	254 00 0 00 040367 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8494						TGET^
  8495	040367	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8496	040370	302 00 0 00 040354 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8497						STOP2^^
  8498	040371	254 04 0 00 040372 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8499	040372	254 00 0 00 040373 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8500					^
  8501			200000			X=X_1
  8502
  8503
  8504						XUUOA	X^
  8505
  8506					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8507
  8508			200000			EFIELD==X			;"E" WE ARE TESTING FOR
  8509						TSET^
  8510			040373			%X=.				;DEFINE %X TO SAVE
  8511	040373	201 00 0 00 040373 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8512	040374	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8513	040375	200 00 0 00 041701 	..0303:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8514	040376	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8515	040377	001000	200000			1B8!X				;EXECUTE A UUO
  8516	040400	254 04 0 00 040401 	..0304:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8517	040401	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8518	040402	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8519	040403	302 00 0 00 200000 		CAIE	X			;MA BITS CORRECT?
  8520	040404				..0305:	STOP1^
  8521	040404	254 04 0 00 040405 		HALT	.+1			;UUO FAILED TO STORE MA BITS
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-9
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0188

  8522	040405	254 00 0 00 040406 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8523						TGET^
  8524	040406	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8525	040407	302 00 0 00 040373 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8526						STOP2^^
  8527	040410	254 04 0 00 040411 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8528	040411	254 00 0 00 040412 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8529					^
  8530			400000			X=X_1
  8531
  8532
  8533						XUUOA	X^
  8534
  8535					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8536
  8537			400000			EFIELD==X			;"E" WE ARE TESTING FOR
  8538						TSET^
  8539			040412			%X=.				;DEFINE %X TO SAVE
  8540	040412	201 00 0 00 040412 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8541	040413	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8542	040414	200 00 0 00 041702 	..0306:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8543	040415	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8544	040416	001000	400000			1B8!X				;EXECUTE A UUO
  8545	040417	254 04 0 00 040420 	..0307:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8546	040420	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8547	040421	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8548	040422	302 00 0 00 400000 		CAIE	X			;MA BITS CORRECT?
  8549	040423				..0310:	STOP1^
  8550	040423	254 04 0 00 040424 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8551	040424	254 00 0 00 040425 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8552						TGET^
  8553	040425	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8554	040426	302 00 0 00 040412 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8555						STOP2^^
  8556	040427	254 04 0 00 040430 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8557	040430	254 00 0 00 040431 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8558					^
  8559		000001	000000			X=X_1
  8560
  8561			777777			X=777777
  8562						XUUOA	X^
  8563
  8564					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8565
  8566			777777			EFIELD==X			;"E" WE ARE TESTING FOR
  8567						TSET^
  8568			040431			%X=.				;DEFINE %X TO SAVE
  8569	040431	201 00 0 00 040431 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8570	040432	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8571	040433	200 00 0 00 041703 	..0311:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8572	040434	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8573	040435	001000	777777			1B8!X				;EXECUTE A UUO
  8574	040436	254 04 0 00 040437 	..0312:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8575	040437	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8576	040440	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-10
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0189

  8577	040441	302 00 0 00 777777 		CAIE	X			;MA BITS CORRECT?
  8578	040442				..0313:	STOP1^
  8579	040442	254 04 0 00 040443 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8580	040443	254 00 0 00 040444 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8581						TGET^
  8582	040444	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8583	040445	302 00 0 00 040431 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8584						STOP2^^
  8585	040446	254 04 0 00 040447 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8586	040447	254 00 0 00 040450 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8587					^
  8588
  8589			000000			X=0
  8590						XUUOA	X^
  8591
  8592					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8593
  8594			000000			EFIELD==X			;"E" WE ARE TESTING FOR
  8595						TSET^
  8596			040450			%X=.				;DEFINE %X TO SAVE
  8597	040450	201 00 0 00 040450 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8598	040451	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8599	040452	200 00 0 00 041704 	..0314:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8600	040453	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8601	040454	001000	000000			1B8!X				;EXECUTE A UUO
  8602	040455	254 04 0 00 040456 	..0315:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8603	040456	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8604	040457	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8605	040460	302 00 0 00 000000 		CAIE	X			;MA BITS CORRECT?
  8606	040461				..0316:	STOP1^
  8607	040461	254 04 0 00 040462 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8608	040462	254 00 0 00 040463 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8609						TGET^
  8610	040463	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8611	040464	302 00 0 00 040450 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8612						STOP2^^
  8613	040465	254 04 0 00 040466 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8614	040466	254 00 0 00 040467 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8615					^
  8616
  8617			252525			X=252525
  8618						XUUOA	X^
  8619
  8620					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8621
  8622			252525			EFIELD==X			;"E" WE ARE TESTING FOR
  8623						TSET^
  8624			040467			%X=.				;DEFINE %X TO SAVE
  8625	040467	201 00 0 00 040467 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8626	040470	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8627	040471	200 00 0 00 041705 	..0317:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8628	040472	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8629	040473	001000	252525			1B8!X				;EXECUTE A UUO
  8630	040474	254 04 0 00 040475 	..0320:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8631	040475	200 00 0 00 000040 		MOVE	0,40			;GET UUO
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 24-11
DBKAHM	MAC	18-Jan-79 11:21		TEST UUO STORING CORRECTLY                                                         SEQ 0190

  8632	040476	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8633	040477	302 00 0 00 252525 		CAIE	X			;MA BITS CORRECT?
  8634	040500				..0321:	STOP1^
  8635	040500	254 04 0 00 040501 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8636	040501	254 00 0 00 040502 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8637						TGET^
  8638	040502	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8639	040503	302 00 0 00 040467 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8640						STOP2^^
  8641	040504	254 04 0 00 040505 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8642	040505	254 00 0 00 040506 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8643					^
  8644
  8645			525252			X=525252
  8646						XUUOA	X^
  8647
  8648					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  8649
  8650			525252			EFIELD==X			;"E" WE ARE TESTING FOR
  8651						TSET^
  8652			040506			%X=.				;DEFINE %X TO SAVE
  8653	040506	201 00 0 00 040506 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8654	040507	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8655	040510	200 00 0 00 041706 	..0322:	MOVE	[JRST	.+4]		;SET A TRAP INSTRUCTION
  8656	040511	202 00 0 00 000041 		MOVEM	41			;INTO 41
  8657	040512	001000	525252			1B8!X				;EXECUTE A UUO
  8658	040513	254 04 0 00 040514 	..0323:	HALT	.+1			;UUO DIDN'T TRAP TO 40
  8659	040514	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8660	040515	405 00 0 00 777777 		ANDI	0,-1			;MASK OUT UUO FOR MA BITS
  8661	040516	302 00 0 00 525252 		CAIE	X			;MA BITS CORRECT?
  8662	040517				..0324:	STOP1^
  8663	040517	254 04 0 00 040520 		HALT	.+1			;UUO FAILED TO STORE MA BITS
  8664	040520	254 00 0 00 040521 		JRST	.+1			;INTO RIGHT HALF OF 40^
  8665						TGET^
  8666	040521	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8667	040522	302 00 0 00 040506 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8668						STOP2^^
  8669	040523	254 04 0 00 040524 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8670	040524	254 00 0 00 040525 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8671					^
  8672			000000			X=0
  8673	040525	255 00 0 00 000000 		JFCL
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 25
DBKAHM	MAC	18-Jan-79 11:21		TEST CLEARING OF INDEX AND INDIRECT BITS ON UUO                                    SEQ 0191

  8674					SUBTTL	TEST CLEARING OF INDEX AND INDIRECT BITS ON UUO
  8675
  8676					;TEST THAT THE INDEX BITS ARE CLEARED WHEN EXECUTING A UUO
  8677
  8678	040526				UUOIND:	CLRBTH^
  8679	040526	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  8680	040527	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  8681	040530	400 17 0 00 000000 		SETZ	17,			;CLEAR INDEX FIELD
  8682	040531	200 00 0 00 041707 		MOVE	[JRST .+4]		;SET UP UUO TRAP INSTR.
  8683	040532	202 00 0 00 000041 		MOVEM	41			;INTO TRAP LOCATION
  8684	040533	001017	000000			1B8!(17)			;EXECUTE A UUO WITH INDEXING
  8685	040534	254 04 0 00 040535 		HALT	.+1			;UUO DID NOT TRAP
  8686	040535	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8687	040536	603 00 0 00 000017 		TLNE	0,17			;INDEX FIELD CLEAR?
  8688						STOP^
  8689	040537	254 04 0 00 040540 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8690	040540	254 00 0 00 040541 		JRST	.+1			;WITH JRST BACK^
  8691
  8692					;TEST THAT THE INDIRECT BIT IS CLEARED WHEN EXECUTING A UUO
  8693
  8694	040541				UUOINX:	CLRBTH^
  8695	040541	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  8696	040542	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  8697	040543	403 17 0 00 000000 		SETZB	17,0			;CLEAR INDEX FIELD
  8698	040544	200 00 0 00 041710 		MOVE	[JRST .+4]		;SET UUO TRAP INSTR.
  8699	040545	202 00 0 00 000041 		MOVEM	41			;INTO TRAP LOCATION
  8700	040546	001020	000017			1B8!@17				;EXECUTE A UUO WITH INDIRECTING
  8701	040547	254 04 0 00 040550 		HALT	.+1			;UUO DID NOT TRAP
  8702	040550	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8703	040551	603 00 0 00 000020 		TLNE	0,20			;INDIRECT BIT CLEAR?
  8704						STOP^
  8705	040552	254 04 0 00 040553 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8706	040553	254 00 0 00 040554 		JRST	.+1			;WITH JRST BACK^
  8707
  8708					;TEST THAT BOTH INDEX AND INDIRECT BITS CLEAR WHEN EXECUTING A UUO
  8709
  8710	040554				UUOBTH:	CLRBTH^
  8711	040554	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  8712	040555	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  8713	040556	403 17 0 00 000000 		SETZB	17,0			;CLEAR INDEX FIELD
  8714	040557	200 00 0 00 041711 		MOVE	[JRST .+4]		;SET UP TRAP INSTR.
  8715	040560	202 00 0 00 000041 		MOVEM	41			;INTO TRAP LOCATION
  8716	040561	001037	000017			1B8!@17(17)			;EXECUTE WITH INDIRECT AND INDEX
  8717	040562	254 04 0 00 040563 		HALT	.+1			;UUO DID NOT TRAP
  8718	040563	200 00 0 00 000040 		MOVE	0,40			;GET UUO
  8719	040564	603 00 0 00 000037 		TLNE	0,37			;INDIRECT OR INDEX BITS STILL SET?
  8720						STOP^
  8721	040565	254 04 0 00 040566 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8722	040566	254 00 0 00 040567 		JRST	.+1			;WITH JRST BACK^
  8723
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 26
DBKAHM	MAC	18-Jan-79 11:21		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0192

  8724					SUBTTL	TEST UUOS OUT OF FAST MEMORY
  8725
  8726						FMUUO	0^
  8727
  8728					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8729					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8730					;CORRECT PC.
  8731
  8732			000000			AC=0				;TESTED AC
  8733
  8734						TSET^
  8735			040567			%X=.				;DEFINE %X TO SAVE
  8736	040567	201 00 0 00 040567 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8737	040570	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8738	040571	200 00 0 00 041564 		MOVE	0,[XWD 1000,0]		;SET UP UUO INTO AC 0 TO EXECUTE
  8739	040572	200 13 0 00 041712 		MOVE	13,[JSP 11,..0325] ;SET UP UUO TRAP INSTRUCTION
  8740	040573	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8741	040574	200 01 0 00 041713 		MOVE	0+1,[JRST ..0326] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8742	040575	254 00 0 00 000000 		JRST	0			;GO EXECUTE  UUO
  8743	040576	254 04 0 00 040577 	..0326:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8744	040577	254 00 0 00 040600 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8745	040600	405 11 0 00 777777 	..0325:	ANDI	11,-1			;MASK FLAGS
  8746	040601	302 11 0 00 000001 		CAIE	11,0+1			;PC STORED SHOULD = 0 +1
  8747						STOP^
  8748	040602	254 04 0 00 040603 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8749	040603	254 00 0 00 040604 		JRST	.+1			;WITH JRST BACK^
  8750						TGET^
  8751	040604	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8752	040605	302 00 0 00 040567 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8753						STOP2^^
  8754	040606	254 04 0 00 040607 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8755	040607	254 00 0 00 040610 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8756					^
  8757
  8758						FMUUO	1^
  8759
  8760					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8761					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8762					;CORRECT PC.
  8763
  8764			000001			AC=1				;TESTED AC
  8765
  8766						TSET^
  8767			040610			%X=.				;DEFINE %X TO SAVE
  8768	040610	201 00 0 00 040610 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8769	040611	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8770	040612	200 01 0 00 041564 		MOVE	1,[XWD 1000,0]		;SET UP UUO INTO AC 1 TO EXECUTE
  8771	040613	200 13 0 00 041714 		MOVE	13,[JSP 11,..0327] ;SET UP UUO TRAP INSTRUCTION
  8772	040614	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8773	040615	200 02 0 00 041715 		MOVE	1+1,[JRST ..0330] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8774	040616	254 00 0 00 000001 		JRST	1			;GO EXECUTE  UUO
  8775	040617	254 04 0 00 040620 	..0330:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8776	040620	254 00 0 00 040621 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8777	040621	405 11 0 00 777777 	..0327:	ANDI	11,-1			;MASK FLAGS
  8778	040622	302 11 0 00 000002 		CAIE	11,1+1			;PC STORED SHOULD = 1 +1
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 26-1
DBKAHM	MAC	18-Jan-79 11:21		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0193

  8779						STOP^
  8780	040623	254 04 0 00 040624 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8781	040624	254 00 0 00 040625 		JRST	.+1			;WITH JRST BACK^
  8782						TGET^
  8783	040625	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8784	040626	302 00 0 00 040610 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8785						STOP2^^
  8786	040627	254 04 0 00 040630 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8787	040630	254 00 0 00 040631 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8788					^
  8789
  8790						FMUUO	2^
  8791
  8792					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8793					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8794					;CORRECT PC.
  8795
  8796			000002			AC=2				;TESTED AC
  8797
  8798						TSET^
  8799			040631			%X=.				;DEFINE %X TO SAVE
  8800	040631	201 00 0 00 040631 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8801	040632	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8802	040633	200 02 0 00 041564 		MOVE	2,[XWD 1000,0]		;SET UP UUO INTO AC 2 TO EXECUTE
  8803	040634	200 13 0 00 041716 		MOVE	13,[JSP 11,..0331] ;SET UP UUO TRAP INSTRUCTION
  8804	040635	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8805	040636	200 03 0 00 041717 		MOVE	2+1,[JRST ..0332] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8806	040637	254 00 0 00 000002 		JRST	2			;GO EXECUTE  UUO
  8807	040640	254 04 0 00 040641 	..0332:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8808	040641	254 00 0 00 040642 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8809	040642	405 11 0 00 777777 	..0331:	ANDI	11,-1			;MASK FLAGS
  8810	040643	302 11 0 00 000003 		CAIE	11,2+1			;PC STORED SHOULD = 2 +1
  8811						STOP^
  8812	040644	254 04 0 00 040645 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8813	040645	254 00 0 00 040646 		JRST	.+1			;WITH JRST BACK^
  8814						TGET^
  8815	040646	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8816	040647	302 00 0 00 040631 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8817						STOP2^^
  8818	040650	254 04 0 00 040651 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8819	040651	254 00 0 00 040652 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8820					^
  8821
  8822						FMUUO	4^
  8823
  8824					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8825					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8826					;CORRECT PC.
  8827
  8828			000004			AC=4				;TESTED AC
  8829
  8830						TSET^
  8831			040652			%X=.				;DEFINE %X TO SAVE
  8832	040652	201 00 0 00 040652 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8833	040653	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 26-2
DBKAHM	MAC	18-Jan-79 11:21		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0194

  8834	040654	200 04 0 00 041564 		MOVE	4,[XWD 1000,0]		;SET UP UUO INTO AC 4 TO EXECUTE
  8835	040655	200 13 0 00 041720 		MOVE	13,[JSP 11,..0333] ;SET UP UUO TRAP INSTRUCTION
  8836	040656	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8837	040657	200 05 0 00 041721 		MOVE	4+1,[JRST ..0334] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8838	040660	254 00 0 00 000004 		JRST	4			;GO EXECUTE  UUO
  8839	040661	254 04 0 00 040662 	..0334:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8840	040662	254 00 0 00 040663 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8841	040663	405 11 0 00 777777 	..0333:	ANDI	11,-1			;MASK FLAGS
  8842	040664	302 11 0 00 000005 		CAIE	11,4+1			;PC STORED SHOULD = 4 +1
  8843						STOP^
  8844	040665	254 04 0 00 040666 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8845	040666	254 00 0 00 040667 		JRST	.+1			;WITH JRST BACK^
  8846						TGET^
  8847	040667	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8848	040670	302 00 0 00 040652 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8849						STOP2^^
  8850	040671	254 04 0 00 040672 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8851	040672	254 00 0 00 040673 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8852					^
  8853
  8854						FMUUO	5^
  8855
  8856					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8857					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8858					;CORRECT PC.
  8859
  8860			000005			AC=5				;TESTED AC
  8861
  8862						TSET^
  8863			040673			%X=.				;DEFINE %X TO SAVE
  8864	040673	201 00 0 00 040673 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8865	040674	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8866	040675	200 05 0 00 041564 		MOVE	5,[XWD 1000,0]		;SET UP UUO INTO AC 5 TO EXECUTE
  8867	040676	200 13 0 00 041722 		MOVE	13,[JSP 11,..0335] ;SET UP UUO TRAP INSTRUCTION
  8868	040677	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8869	040700	200 06 0 00 041723 		MOVE	5+1,[JRST ..0336] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8870	040701	254 00 0 00 000005 		JRST	5			;GO EXECUTE  UUO
  8871	040702	254 04 0 00 040703 	..0336:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8872	040703	254 00 0 00 040704 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8873	040704	405 11 0 00 777777 	..0335:	ANDI	11,-1			;MASK FLAGS
  8874	040705	302 11 0 00 000006 		CAIE	11,5+1			;PC STORED SHOULD = 5 +1
  8875						STOP^
  8876	040706	254 04 0 00 040707 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8877	040707	254 00 0 00 040710 		JRST	.+1			;WITH JRST BACK^
  8878						TGET^
  8879	040710	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8880	040711	302 00 0 00 040673 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8881						STOP2^^
  8882	040712	254 04 0 00 040713 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8883	040713	254 00 0 00 040714 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8884					^
  8885
  8886						FMUUO	10^
  8887
  8888					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 26-3
DBKAHM	MAC	18-Jan-79 11:21		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0195

  8889					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8890					;CORRECT PC.
  8891
  8892			000010			AC=10				;TESTED AC
  8893
  8894						TSET^
  8895			040714			%X=.				;DEFINE %X TO SAVE
  8896	040714	201 00 0 00 040714 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8897	040715	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8898	040716	200 10 0 00 041564 		MOVE	10,[XWD 1000,0]		;SET UP UUO INTO AC 10 TO EXECUTE
  8899	040717	200 13 0 00 041724 		MOVE	13,[JSP 11,..0337] ;SET UP UUO TRAP INSTRUCTION
  8900	040720	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8901	040721	200 11 0 00 041725 		MOVE	10+1,[JRST ..0340] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8902	040722	254 00 0 00 000010 		JRST	10			;GO EXECUTE  UUO
  8903	040723	254 04 0 00 040724 	..0340:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8904	040724	254 00 0 00 040725 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8905	040725	405 11 0 00 777777 	..0337:	ANDI	11,-1			;MASK FLAGS
  8906	040726	302 11 0 00 000011 		CAIE	11,10+1			;PC STORED SHOULD = 10 +1
  8907						STOP^
  8908	040727	254 04 0 00 040730 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8909	040730	254 00 0 00 040731 		JRST	.+1			;WITH JRST BACK^
  8910						TGET^
  8911	040731	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8912	040732	302 00 0 00 040714 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8913						STOP2^^
  8914	040733	254 04 0 00 040734 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8915	040734	254 00 0 00 040735 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8916					^
  8917
  8918						FMUUO	12^
  8919
  8920					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8921					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8922					;CORRECT PC.
  8923
  8924			000012			AC=12				;TESTED AC
  8925
  8926						TSET^
  8927			040735			%X=.				;DEFINE %X TO SAVE
  8928	040735	201 00 0 00 040735 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8929	040736	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8930	040737	200 12 0 00 041564 		MOVE	12,[XWD 1000,0]		;SET UP UUO INTO AC 12 TO EXECUTE
  8931	040740	200 13 0 00 041726 		MOVE	13,[JSP 11,..0341] ;SET UP UUO TRAP INSTRUCTION
  8932	040741	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8933	040742	200 13 0 00 041727 		MOVE	12+1,[JRST ..0342] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8934	040743	254 00 0 00 000012 		JRST	12			;GO EXECUTE  UUO
  8935	040744	254 04 0 00 040745 	..0342:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8936	040745	254 00 0 00 040746 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8937	040746	405 11 0 00 777777 	..0341:	ANDI	11,-1			;MASK FLAGS
  8938	040747	302 11 0 00 000013 		CAIE	11,12+1			;PC STORED SHOULD = 12 +1
  8939						STOP^
  8940	040750	254 04 0 00 040751 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8941	040751	254 00 0 00 040752 		JRST	.+1			;WITH JRST BACK^
  8942						TGET^
  8943	040752	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 26-4
DBKAHM	MAC	18-Jan-79 11:21		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0196

  8944	040753	302 00 0 00 040735 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8945						STOP2^^
  8946	040754	254 04 0 00 040755 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8947	040755	254 00 0 00 040756 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8948					^
  8949
  8950						FMUUO	17^
  8951
  8952					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  8953					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  8954					;CORRECT PC.
  8955
  8956			000017			AC=17				;TESTED AC
  8957
  8958						TSET^
  8959			040756			%X=.				;DEFINE %X TO SAVE
  8960	040756	201 00 0 00 040756 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8961	040757	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8962	040760	200 17 0 00 041564 		MOVE	17,[XWD 1000,0]		;SET UP UUO INTO AC 17 TO EXECUTE
  8963	040761	200 13 0 00 041730 		MOVE	13,[JSP 11,..0343] ;SET UP UUO TRAP INSTRUCTION
  8964	040762	202 13 0 00 000041 		MOVEM	13,41			;INTO LOCATION 41
  8965	040763	200 00 0 00 041731 		MOVE	17+1,[JRST ..0344] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  8966	040764	254 00 0 00 000017 		JRST	17			;GO EXECUTE  UUO
  8967	040765	254 04 0 00 040766 	..0344:	HALT	.+1			;UUO DID NOT TRAP FROM FAST MEMORY
  8968	040766	254 00 0 00 040767 		JRST	.+1			;LOOP TO %FMUUO IF ERROR
  8969	040767	405 11 0 00 777777 	..0343:	ANDI	11,-1			;MASK FLAGS
  8970	040770	302 11 0 00 000020 		CAIE	11,17+1			;PC STORED SHOULD = 17 +1
  8971						STOP^
  8972	040771	254 04 0 00 040772 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  8973	040772	254 00 0 00 040773 		JRST	.+1			;WITH JRST BACK^
  8974						TGET^
  8975	040773	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  8976	040774	302 00 0 00 040756 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  8977						STOP2^^
  8978	040775	254 04 0 00 040776 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  8979	040776	254 00 0 00 040777 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
  8980					^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 27
DBKAHM	MAC	18-Jan-79 11:21		SIMPLE MUUO TEST                                                                   SEQ 0197

  8981					SUBTTL	SIMPLE MUUO TEST
  8982					;TEST MONITOR UUO "0" TO SEE IF IT TRAPS AT ALL
  8983					;TRAPPING TO 40 CAUSES IT TO HALT. TRAPPING TO SUPERVISOR KERNAL PUBLIC
  8984					;OR CONCEALED IS ALLOWED AND IS CONSIERED CORRECT.
  8985
  8986						TSET^
  8987			040777			%X=.				;DEFINE %X TO SAVE
  8988	040777	201 00 0 00 040777 		MOVEI	%X			;SAVE THIS PC IN CASE OF WILD TRANSFER
  8989	041000	202 00 0 00 041742 		MOVEM	TNUMB#			;BECAUSE OF PC MOD OR INTERRUPT^
  8990	041001	265 00 0 00 041002 		JSP	.+1			;GET FLAGS
  8991	041002	603 00 0 00 010000 		TLNE	USERF			;IF USER MODE THEN EXIT
  8992	041003	254 00 0 00 041045 		JRST	USRIO0			;SKIP IF USER MODE TO USER IO TEST
  8993
  8994						CLRBTH^
  8995	041004	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  8996	041005	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  8997	041006	201 00 0 00 041031 	XMUUO:	MOVEI	XMUPC			;SET UP A TRAP FOR MONITOR UUO
  8998	041007	202 00 0 00 000430 		MOVEM	KNTRP			;INTO ALL POSSIBLE TRAP LOCATIONS
  8999	041010	202 00 0 00 000431 		MOVEM	KTRP
  9000	041011	202 00 0 00 000432 		MOVEM	SNTRP
  9001	041012	202 00 0 00 000433 		MOVEM	STRP
  9002	041013	202 00 0 00 000434 		MOVEM	CNTRP
  9003	041014	202 00 0 00 000435 		MOVEM	CTRP
  9004	041015	202 00 0 00 000436 		MOVEM	PNTRP
  9005	041016	202 00 0 00 000437 		MOVEM	PTRP
  9006	041017	476 00 0 00 000424 		SETOM	MUUO			;SET THE TRAP LOCATIONS
  9007	041020	476 00 0 00 000425 		SETOM	MUUO+1			;TO ENABLE CHECKING
  9008	041021	200 00 0 00 041732 		MOVE	[JRST	MUHLT]		;SET UP A LUUO TRAP HALT
  9009	041022	202 00 0 00 000041 		MOVEM	41
  9010	041023	402 00 0 00 041024 		SETZM	.+1			;MAKE A MUUO IN THE NEXT LOCATION
  9011	041024	000000	000000		XMUUO0:	0				;THIS IS A MONITOR UUO
  9012	041025	254 04 0 00 041026 		HALT	.+1			;THE UUO DIDN'T TRAP
  9013	041026	254 04 0 00 041027 		HALT	.+1			;MUUO SKIPPED?
  9014	041027	254 04 0 00 041030 	MUHLT:	HALT	.+1			;UUO TRAPPED TO 40(DECODE AS LUUO?)
  9015	041030	254 04 0 00 041031 		HALT	.+1			;SPARE HALT
  9016	041031	332 00 0 00 000424 	XMUPC:	SKIPE	MUUO			;MON UUO "0" DIDN'T STORE A ZERO
  9017						STOP^
  9018	041032	254 04 0 00 041033 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  9019	041033	254 00 0 00 041034 		JRST	.+1			;WITH JRST BACK^
  9020	041034	550 00 0 00 000425 		HRRZ	MUUO+1			;GET THE STORED PC
  9021	041035	302 00 0 00 041025 		CAIE	XMUUO0+1		;DID WE STORE THE CORRECT PC?
  9022						STOP^
  9023	041036	254 04 0 00 041037 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  9024	041037	254 00 0 00 041040 		JRST	.+1			;WITH JRST BACK^
  9025	041040	255 00 0 00 000000 		JFCL
  9026						TGET^
  9027	041041	200 00 0 00 041742 		MOVE	TNUMB			;GET LAST PC STORED AND CHECK TO SEE
  9028	041042	302 00 0 00 040777 		CAIE	%X			;IF ITS WHERE WE REALLY SHOULD BE
  9029						STOP2^^
  9030	041043	254 04 0 00 041044 		HALT	.+1			;HALT IF WE SHOULDN'T BE HERE
  9031	041044	254 00 0 00 041045 		JRST	.+1			;WILD TRANSFER CAUSED THIS HALT.^
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 28
DBKAHM	MAC	18-Jan-79 11:21		TEST THE USER IOT BIT                                                              SEQ 0198

  9032					SUBTTL	TEST THE USER IOT BIT
  9033					;CHECK CLEARING AND SETTING OF THE USER IOT BIT
  9034
  9035	041045				USRIO0:	CLRBTH^
  9036	041045	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  9037	041046	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  9038	041047	336 00 0 00 030042 		SKIPN	MONFLG			;IN SPECIAL USER MODE?
  9039	041050	254 00 0 00 041072 		JRST	ENDIT			;YES LOOP TEST
  9040	041051	254 02 1 00 041052 		JRSTF	@.+1			;CLEAR BITS
  9041	041052	000000	041053			0,,.+1				;PC AND FLAGS
  9042	041053	265 00 0 00 041054 		JSP	.+1			;CHECK WHY USER I/O FLAG IS SET
  9043	041054	603 00 0 00 004000 		TLNE	EXIOT			;SHOULD BE CLEAR VIA JRSTF
  9044						STOP^
  9045	041055	254 04 0 00 041056 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  9046	041056	254 00 0 00 041057 		JRST	.+1			;WITH JRST BACK^
  9047	041057	336 00 0 00 030042 		SKIPN	MONFLG			;IN USER MODE?
  9048	041060	254 00 0 00 041072 		JRST	ENDIT			;YES CANNOT SET USER IO FLAG
  9049										;IN USER MODE
  9050
  9051	041061				USRIO1:	CLRBTH^
  9052	041061	7 000 20 0 00 325300 		CLRAPR^CONO APR,IOCLR!ITMDIS!IASRTC!CLKDIS!CLKCLR!IIOPFC!INXCLR^
  9053	041062	7 004 20 0 00 731577 		CLRPI^^CONO PI,PWFCLR!PARCLR!PARDIS!IRQCLR!PICLR!CHNOFF!PIOFF!177^
  9054	041063	400 00 0 00 000000 		SETZ	0			;CLEAR 0
  9055	041064	200 01 0 00 041733 		MOVE	1,[1B6!.+2]		;FLAGS AND PC
  9056	041065	254 02 0 01 000000 		JRSTF	(1)			;USER I/O FLAG DID
  9057	041066	265 00 0 00 041067 		JSP	.+1			;NOT SET
  9058	041067	607 00 0 00 004000 		TLNN	EXIOT			;CHECK WHY BIT IS NOT SET
  9059						STOP^
  9060	041070	254 04 0 00 041071 		HALT	.+1			;INSTRUCTION FAILED REPLACE
  9061	041071	254 00 0 00 041072 		JRST	.+1			;WITH JRST BACK^
  9062
  9063	041072	402 00 0 00 041742 	ENDIT:	SETZM	TNUMB			;CLEAR TEST NUMBER FLAG
  9064	041073	254 00 0 00 030057 		JRST	BEGEND			;GO TO BEG/END SEQUENCE
  9065	041074	254 04 0 00 030057 	$PGMIN:	HALT	BEGEND
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 29
DBKAHM	MAC	18-Jan-79 11:21		DBKAH SUBROUTINES                                                                  SEQ 0199

  9066					SUBTTL	DBKAH SUBROUTINES
  9067					;HERE ARE SOME USEFUL SUBROUTINES FOR THE DIAGNOSTIC
  9068
  9069					;THIS ROUTINE CLEARS ALL THE TRAP LOCATIONS(42-56)
  9070
  9071	041075	000000	000000		TRPCLR:	0				;FOR PC RETURN
  9072	041076	202 15 0 00 041745 		MOVEM	15,XAC15#		;SAVE AC15
  9073	041077	201 15 0 00 000042 		MOVEI	15,42
  9074	041100	402 00 1 00 000015 		SETZM	@15			;CLEAR LOCATION
  9075	041101	271 15 0 00 000001 		ADDI	15,1			;BUMP POINTER
  9076	041102	307 15 0 00 000056 		CAIG	15,56			;DONE LAST?
  9077	041103	254 00 0 00 041100 		JRST	.-3			;LOOP
  9078	041104	200 15 0 00 041745 		MOVE	15,XAC15		;RESTORE AC15
  9079	041105	254 00 1 00 041075 		JRST	@TRPCLR
  9080
  9081					;THIS ROUTINE PUTS A JSP TO A HALT INTO EACH TRAP LOCATION (42-57)
  9082
  9083	041106	000000	000000		HALTPI:	0				;FOR RETURN PC
  9084	041107	202 00 0 00 041743 		MOVEM	0,XAC0#			;SAVE AC0
  9085	041110	202 01 0 00 041744 		MOVEM	1,XAC1#			;SAVE AC1
  9086	041111	200 00 0 00 041734 		MOVE	[JSP 1,HLTCK]		;PUT JSP INTO EACH TRAP LOCATION
  9087	041112	201 01 0 00 000042 		MOVEI	1,42			;IN CASE INCORRECT INTERRUPT
  9088	041113	202 00 1 00 000001 		MOVEM	@1			;STORE
  9089	041114	271 00 0 00 000002 		ADDI	2
  9090	041115	271 01 0 00 000002 		ADDI	1,2
  9091	041116	305 01 0 00 000060 		CAIGE	1,60			;DONE?
  9092	041117	254 00 0 00 041113 		JRST	.-4
  9093	041120	200 00 0 00 041743 		MOVE	0,XAC0			;RESTORE AC0
  9094	041121	200 01 0 00 041744 		MOVE	1,XAC1			;AND AC1
  9095	041122	254 00 1 00 041106 		JRST	@HALTPI			;RETURN
  9096
  9097					;THIS ROUTINE PUTS A JSP INTO EACH INTERRUPT LOCATION WHICH WILL
  9098					;IGNORE INTERRUPTS..
  9099
  9100	041123	000000	000000		TRAPPI:	0				;FOR JSR
  9101	041124	202 00 0 00 041743 		MOVEM	0,XAC0#			;SAVE AC0
  9102	041125	202 01 0 00 041744 		MOVEM	1,XAC1#			;SAVE AC1
  9103	041126	200 00 0 00 041735 		MOVE	[JSP 1,TRPFIL]		;SET UP TRAP INSTRUCTION
  9104	041127	201 01 0 00 000042 		MOVEI	1,42
  9105	041130	202 00 1 00 000001 		MOVEM	@1
  9106	041131	271 01 0 00 000002 		ADDI	1,2
  9107	041132	271 00 0 00 000002 		ADDI	0,2			;STORAGE POINTER
  9108	041133	305 01 0 00 000060 		CAIGE	1,60			;DONE?
  9109	041134	254 00 0 00 041130 		JRST	.-4			;NO LOOP
  9110	041135	200 00 0 00 041743 		MOVE	0,XAC0			;RESTORE AC0
  9111	041136	200 01 0 00 041744 		MOVE	1,XAC1			;AND AC1
  9112	041137	254 00 1 00 041123 		JRST	@TRAPPI			;RETURN
  9113
  9114					;THIS ROUTINE PLACES THE VALUE OF THE CHANNEL WHICH INTERRUPTED INTO
  9115					;AC0. IT DOES NOTHING ELSE (IT EFFECTIVLY IGNORES THE INTERRUPT).
  9116
  9117	041140	201 00 0 00 000001 	TRPFIL:	MOVEI	1			;POINTER
  9118	041141	254 00 0 00 041157 		JRST	TPEND
  9119	041142	201 00 0 00 000002 		MOVEI	2
  9120	041143	254 00 0 00 041157 		JRST	TPEND
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 29-1
DBKAHM	MAC	18-Jan-79 11:21		DBKAH SUBROUTINES                                                                  SEQ 0200

  9121	041144	201 00 0 00 000003 		MOVEI	3
  9122	041145	254 00 0 00 041157 		JRST	TPEND
  9123	041146	201 00 0 00 000004 		MOVEI	4
  9124	041147	254 00 0 00 041157 		JRST	TPEND
  9125	041150	201 00 0 00 000005 		MOVEI	5
  9126	041151	254 00 0 00 041157 		JRST	TPEND
  9127	041152	201 00 0 00 000006 		MOVEI	6
  9128	041153	254 00 0 00 041157 		JRST	TPEND
  9129	041154	201 00 0 00 000007 		MOVEI	7
  9130	041155	254 00 0 00 041157 		JRST	TPEND
  9131	041156	254 04 0 00 041157 		HALT	TPEND			;"JRST @" OR "JRSTF @" FAILS
  9132
  9133	041157	332 00 0 00 030042 	TPEND:	SKIPE	MONFLG			;IN USER MODE?
  9134	041160	254 00 1 00 000001 		JRST	@1			;RETURN
  9135	041161	254 02 1 00 000001 		JRSTF	@1			;RESTORE FLAGS
  9136	041162	254 04 0 00 041162 		HALT	.			;JRST @ OR JRSTF FAILS ?
  9137
  9138					;THIS ROUTINE PLACES THE VALUE OF THE CHANNEL WHICH INTERRUPTED
  9139					;INTO AC0. AFTER WHICH IT WILL HALT. THIS ROUTINE IS CALLED WHENEVER AN
  9140					;INTERRUPT OCCURS ON AN INCORRECT CHANNEL.
  9141	041163	201 00 0 00 000001 	HLTCK:	MOVEI	1
  9142	041164	254 04 1 00 000001 		HALT	@1
  9143	041165	201 00 0 00 000002 		MOVEI	2
  9144	041166	254 04 1 00 000001 		HALT	@1
  9145	041167	201 00 0 00 000003 		MOVEI	3
  9146	041170	254 04 1 00 000001 		HALT	@1
  9147	041171	201 00 0 00 000004 		MOVEI	4
  9148	041172	254 04 1 00 000001 		HALT	@1
  9149	041173	201 00 0 00 000005 		MOVEI	5
  9150	041174	254 04 1 00 000001 		HALT	@1
  9151	041175	201 00 0 00 000006 		MOVEI	6
  9152	041176	254 04 1 00 000001 		HALT	@1
  9153	041177	201 00 0 00 000007 		MOVEI	7
  9154	041200	254 04 1 00 000007 		HALT	@7
  9155	041201	474 00 0 00 000000 		SETO	0
  9156	041202	254 04 0 00 041202 		HALT	.			;SHOULD NEVER GET HERE
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 30
DBKAHM	MAC	18-Jan-79 11:21		DBKAH TRAPS                                                                        SEQ 0201

  9157					SUBTTL	DBKAH TRAPS
  9158					;HERE LIE THE VARIOUS TRAPS  TRAPS HERE REPRESENT ERRORS
  9159					;NOT CHECKED IN THE DIAGNOSTIC. THE LISTING SHOWS THE CAUSE OF THE
  9160					;TRAP.
  9161
  9162	041203	254 04 0 00 041203 	UUO:	HALT	.			;ERROR-UUO (LOC 0 HAS PC OF UUO)
  9163	041204	254 04 1 00 000425 	MACHTP:	HALT	@425			;KERNAL NO TRAP
  9164	041205	254 04 1 00 000425 		HALT	@425			;KERNAL TRAP
  9165	041206	254 04 1 00 000425 		HALT	@425			;SUPERVISOR NO TRAP
  9166	041207	254 04 1 00 000425 		HALT	@425			;SUPERVISOR TRAP
  9167	041210	254 04 1 00 000425 		HALT	@425			;CONCEAL NO TRAP
  9168	041211	254 04 1 00 000425 		HALT	@425			;CONCEAL TRAP
  9169	041212	254 04 1 00 000425 		HALT	@425			;PUBLIC NO TRAP
  9170	041213	254 04 1 00 000425 		HALT	@425			;PUBLIC TRAP
  9171
  9172	041214	254 04 0 00 041214 	TABLE:	HALT	.			;PAGE FAILURE TRAP
  9173	041215	255 00 0 00 000000 		JFCL				;IGNORE ARITHMETIC TRAPS
  9174	041216	254 04 0 00 041216 		HALT	.
  9175	041217	254 04 0 00 041217 		HALT	.
  9176	041220	777777	777777			-1				;IF UUO THEN NOT =O-1
  9177	041221	777777	777777			-1
  9178	041222	000000	000000			0
  9179	041223	000000	000000			0
  9180	041224	000000	041204			MACHTP
  9181	041225	000000	041205			MACHTP+1
  9182	041226	000000	041206			MACHTP+2
  9183	041227	000000	041207			MACHTP+3
  9184	041230	000000	041210			MACHTP+4
  9185	041231	000000	041211			MACHTP+5
  9186	041232	000000	041212			MACHTP+6
  9187	041233	000000	041213			MACHTP+7
  9188
  9189	041234	000000	000000		TRPSET:	0				;FOR JSR
  9190	041235	202 00 0 00 041743 		MOVEM	0,XAC0#			;SAVE AC0
  9191	041236	202 01 0 00 041744 		MOVEM	1,XAC1#			;SAVE AC1
  9192	041237	202 16 0 00 041746 		MOVEM	16,XAC16#		;SAVE AC16
  9193	041240	201 00 0 00 041214 		MOVEI	0,TABLE			;TRAP TABLE POINTER
  9194	041241	201 01 0 00 000420 		MOVEI	1,420			;STORAGE ADRESS
  9195	041242	200 16 1 00 000000 		MOVE	16,@0			;PUT TRAP WORD INTO
  9196	041243	202 16 0 01 000000 		MOVEM	16,(1)			;TRAP LOCATION
  9197	041244	271 00 0 00 000001 		ADDI	0,1			;BUMP
  9198	041245	271 01 0 00 000001 		ADDI	1,1			;POINTERS
  9199	041246	302 01 0 00 000440 		CAIE	1,440			;DONE LAST
  9200	041247	254 00 0 00 041242 		JRST	.-5			;NO KEEP LOOPING
  9201	041250	200 00 0 00 041743 		MOVE	0,XAC0			;RESTORE AC0
  9202	041251	200 01 0 00 041744 		MOVE	1,XAC1			;AND AC1
  9203	041252	200 16 0 00 041746 		MOVE	16,XAC16		;AND AC16
  9204	041253	254 00 1 00 041234 		JRST	@TRPSET			;RETURN TO CALLER
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 31
DBKAHM	MAC	18-Jan-79 11:21		BASIC CONSOLE TTY TEST                                                             SEQ 0202

  9205					SUBTTL	BASIC CONSOLE TTY TEST
  9206					;THIS IS A BASIC TTY TEST TO SEE IF THE CONSOLE TTY LOGIC IS
  9207					;UP TO TYPING OUT VARIOUS ERROR MESSAGES IN THE DIAGNOSTICS TO 
  9208					;FOLLOW.  THE ROUTINE TYPES THE ALPHABET 10 TIMES ETC. AND THEN ENTERS ECHO
  9209					;MODE. YOU MAY THEN TYPE CHARACTERS ON THE TTY AND THEY WILL ECHO
  9210					;TYPING A ^Z(CONTROL AND Z KEYS DEPRESSED AT THE SAME TIME) WILL CAUSE
  9211					;ALL YOUR INPUT TO BE TYPED OUT TO YOU UNTILL ANOTHER CHARACTER IS
  9212					;TYPED ON THE CONSOLE.  WHEN THAT HAPPENS YOU WILL ENTER ECHO MODE
  9213					;AGAIN
  9214			041750			TTYBUF=END+1			;TTY TEST DATA BUFFER
  9215
  9216	041254	201 10 0 00 000012 	TTYBEG:	MOVEI	10,^D10			;TIMES TO DO THIS TEST
  9217	041255	7 000 20 0 00 200000 		CONO	200000			;RESET APR ETC.
  9218	041256	200 16 0 00 041736 		MOVE	16,[IOWD TTYEND+1-TTYDAT,TTYDAT] ;SET UP BLKO POINTER
  9219	041257	7 120 10 0 00 000016 		BLKO	TTY,16			;DO IT
  9220	041260	254 00 0 00 041264 		JRST	TTYECH			;ALL DONE - DO ECHO
  9221	041261	7 120 34 0 00 000010 		CONSO	TTY,10			;TTY DONE
  9222	041262	254 00 0 00 041261 		JRST	.-1			;NO
  9223	041263	254 00 0 00 041257 		JRST	.-4			;FINISH!
  9224	041264	367 10 0 00 041255 	TTYECH:	SOJG	10,TTYBEG+1		;LOOP 10 TIMES
  9225	041265	254 00 0 00 041270 		JRST	.+3			;ECHO TEST!
  9226	041266	400 04 0 00 000000 	TTY01:	SETZ	4,			;CLEAR CHARACTER COUNTER
  9227	041267	7 120 34 0 00 000040 		CONSO	TTY,40			;INPUT DONE?
  9228	041270	254 00 0 00 041267 		JRST	.-1			;LOOP
  9229	041271	7 120 20 0 00 001000 		CONO	TTY,1B26		;RESET INPUT DONE!
  9230	041272	7 120 14 0 00 041335 		DATAO	TTY,TTYDAT		;CARRIAGE RETURN
  9231	041273	7 120 34 0 00 000010 		CONSO	TTY,10			;DONE?
  9232	041274	254 00 0 00 041273 		JRST	.-1
  9233	041275	7 120 14 0 00 041336 		DATAO	TTY,TTYDAT+1		;LINE FEED
  9234	041276	7 120 34 0 00 000010 		CONSO 	TTY,10
  9235	041277	254 00 0 00 041276 		JRST	.-1
  9236	041300	201 01 0 00 041750 		MOVEI	1,TTYBUF		;TTY I/O POINTER
  9237	041301	7 120 34 0 00 000100 	TTY02:	CONSO	TTY,100			;TTY BUSY
  9238	041302	254 00 0 00 041301 		JRST	.-1			;WAIT FOR INPUT
  9239	041303	7 120 34 0 00 000040 		CONSO	TTY,40			;TTY DONE INPUT
  9240	041304	254 00 0 00 041303 		JRST	.-1
  9241	041305	7 120 04 0 01 000000 		DATAI	TTY,(1)			;INPUT CHAR
  9242	041306	7 120 14 0 01 000000 		DATAO	TTY,(1)			;ECHO
  9243	041307	7 120 34 0 00 000010 		CONSO	TTY,10
  9244	041310	254 00 0 00 041307 		JRST	.-1
  9245	041311	200 05 0 01 000000 		MOVE	5,(1)			;GET CHAR.
  9246	041312	306 05 0 00 000232 		CAIN	5,232			;CNTRL Z??
  9247	041313	254 00 0 00 041321 		JRST	TTY03
  9248	041314	271 04 0 00 000001 		ADDI	4,1			;BUMP CHAR. COUNTER
  9249	041315	303 04 0 00 001442 		CAILE	4,^D802			;DONE 10 LINES?
  9250	041316	254 00 0 00 041321 		JRST	TTY03
  9251	041317	271 01 0 00 000001 		ADDI	1,1			;BUMP POINTER
  9252	041320	254 00 0 00 041301 		JRST	TTY02			;LOOP UNTILL ^Z
  9253	041321	7 120 04 0 00 000001 	TTY03:	DATAI	TTY,1			;CLEAR FLAGS
  9254	041322	201 01 0 00 041750 		MOVEI	1,TTYBUF		;OUTPUT POINTER
  9255	041323	200 00 0 01 000000 	TTY04:	MOVE	0,(1)			;GET CHARACTER
  9256	041324	306 00 0 00 000232 		CAIN	232			;REACHED END OF BUFFER?
  9257	041325	254 00 0 00 041321 		JRST	TTY03			;LOOP FOREVER
  9258	041326	7 120 14 0 00 000000 		DATAO	TTY,			;OUTPUT CHARACTER
  9259	041327	7 120 34 0 00 000010 		CONSO	TTY,10			;DONE?
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 31-1
DBKAHM	MAC	18-Jan-79 11:21		BASIC CONSOLE TTY TEST                                                             SEQ 0203

  9260	041330	254 00 0 00 041327 		JRST	.-1			;NO LOOP
  9261	041331	7 120 30 0 00 000100 		CONSZ	TTY,100			;DID HE STRIKE A KEY
  9262	041332	254 00 0 00 041266 		JRST	TTY01			;YES GET NEW DATA
  9263	041333	271 01 0 00 000001 		ADDI	1,1			;BUMP OUTPUT POINTER
  9264	041334	254 00 0 00 041323 		JRST	TTY04			;LOOP TILL DONE
  9265
  9266	041335	000000	000215		TTYDAT:	215				;CARRIAGE RETURN
  9267	041336	000000	000012			12				;LINE FEED
  9268	041337	000000	000101			"A"
  9269	041340	000000	000102			"B"
  9270	041341	000000	000103			"C"
  9271	041342	000000	000104			"D"
  9272	041343	000000	000105			"E"
  9273	041344	000000	000106			"F"
  9274	041345	000000	000107			"G"
  9275	041346	000000	000110			"H"
  9276	041347	000000	000111			"I"
  9277	041350	000000	000112			"J"
  9278	041351	000000	000113			"K"
  9279	041352	000000	000114			"L"
  9280	041353	000000	000115			"M"
  9281	041354	000000	000116			"N"
  9282	041355	000000	000117			"O"
  9283	041356	000000	000120			"P"
  9284	041357	000000	000121			"Q"
  9285	041360	000000	000122			"R"
  9286	041361	000000	000123			"S"
  9287	041362	000000	000124			"T"
  9288	041363	000000	000125			"U"
  9289	041364	000000	000126			"V"
  9290	041365	000000	000127			"W"
  9291	041366	000000	000130			"X"
  9292	041367	000000	000131			"Y"
  9293	041370	000000	000132			"Z"
  9294	041371	000000	000040			" "				;SPACE
  9295	041372	000000	000061			"1"
  9296	041373	000000	000062			"2"
  9297	041374	000000	000063			"3"
  9298	041375	000000	000064			"4"
  9299	041376	000000	000065			"5"
  9300	041377	000000	000066			"6"
  9301	041400	000000	000067			"7"
  9302	041401	000000	000070			"8"
  9303	041402	000000	000071			"9"
  9304	041403	000000	000060			"0"
  9305	041404	000000	000072			":"
  9306	041405	000000	000055			"-"
  9307	041406	000000	000073			";"
  9308	041407	000000	000057			"/"
  9309	041410	000000	000056			"."
  9310	041411	000000	000054			","
  9311	041412	000000	000041			"!"
  9312	041413	000000	000043			"#"
  9313	041414	000000	000044			"$"
  9314	041415	000000	000045			"%"
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 31-2
DBKAHM	MAC	18-Jan-79 11:21		BASIC CONSOLE TTY TEST                                                             SEQ 0204

  9315	041416	000000	000046			"&"
  9316	041417	000000	000047			"'"
  9317	041420	000000	000050			"("
  9318	041421	000000	000051			")"
  9319	041422	000000	000052			"*"
  9320	041423	000000	000075			"="
  9321	041424	000000	000100			"@"
  9322	041425	000000	000133			"["
  9323	041426	000000	000134			"\"
  9324	041427	000000	000074			"<"
  9325	041430	000000	000076			">"
  9326	041431	000000	000077			"?"
  9327	041432	000000	000135			"]"
  9328	041433	000000	000136			"^"
  9329	041434	000000	000000		TTYEND:	0				;END TEST PATTERN
  9330
  9331	041435	000000	000000		TTYCHR:	0
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 32
DBKAHM	MAC	18-Jan-79 11:21		DBKAH STORAGE                                                                      SEQ 0205

  9332					SUBTTL	DBKAH STORAGE
  9333
  9334	041436	254 04 0 00 030000 	$ERHL1:	HALT	BEGIN
  9335	041437				PGMNAM:	ASCIZ/
  9336	041437	015 012 104 102 113 	DBKAH PI,UUO AND IOT TEST
  9337	041440	101 110 040 120 111 
  9338	041441	054 125 125 117 040 
  9339	041442	101 116 104 040 111 
  9340	041443	117 124 040 124 105 
  9341	041444	123 124 015 012 000 	/
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1
STOR	KLM	19-Jul-77 17:01		*STOR* RESERVED STORAGE, JULY 19,1977                                              SEQ 0206

  9342					SUBTTL	*STOR* RESERVED STORAGE, JULY 19,1977
  9343
  9344					;PROGRAM LITERALS
  9345
  9346						XLIST
  9347					IFNDEF	$LPAPER,<LIST>
  9348	041445					LIT
  9349	041445	000001	000001
  9350	041446	254 00 0 00 030705 
  9351	041447	777777	777777
  9352	041450	123456	654321
  9353	041451	000000	000000
  9354	041452	265 00 0 00 041203 
  9355	041453	265 00 0 00 033553 
  9356	041454	265 00 0 00 033571 
  9357	041455	265 00 0 00 033607 
  9358	041456	265 00 0 00 033625 
  9359	041457	265 00 0 00 033643 
  9360	041460	265 00 0 00 033661 
  9361	041461	265 00 0 00 033677 
  9362	041462	265 00 0 00 033722 
  9363	041463	265 00 0 00 033737 
  9364	041464	265 00 0 00 033754 
  9365	041465	265 00 0 00 033771 
  9366	041466	265 00 0 00 034006 
  9367	041467	265 00 0 00 034023 
  9368	041470	265 00 0 00 034040 
  9369	041471	265 00 0 00 034065 
  9370	041472	265 00 0 00 034103 
  9371	041473	265 00 0 00 034121 
  9372	041474	265 00 0 00 034137 
  9373	041475	265 00 0 00 034155 
  9374	041476	265 00 0 00 034173 
  9375	041477	265 00 0 00 034211 
  9376	041500	265 00 0 00 034241 
  9377	041501	265 00 0 00 034265 
  9378	041502	265 00 0 00 034311 
  9379	041503	265 00 0 00 034335 
  9380	041504	265 00 0 00 034361 
  9381	041505	265 00 0 00 034405 
  9382	041506	265 00 0 00 034431 
  9383	041507	265 00 0 00 034455 
  9384	041510	265 00 0 00 034501 
  9385	041511	265 00 0 00 034525 
  9386	041512	265 00 0 00 034551 
  9387	041513	265 00 0 00 034575 
  9388	041514	265 00 0 00 034621 
  9389	041515	265 00 0 00 034645 
  9390	041516	265 00 0 00 034671 
  9391	041517	265 00 0 00 034715 
  9392	041520	265 00 0 00 034741 
  9393	041521	265 00 0 00 034765 
  9394	041522	265 00 0 00 035011 
  9395	041523	265 00 0 00 035035 
  9396	041524	265 00 0 00 035062 
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-1
STOR	KLM	19-Jul-77 17:01		*STOR* RESERVED STORAGE, JULY 19,1977                                              SEQ 0207

  9397	041525	352 00 0 00 000000 
  9398	041526	265 01 0 00 035105 
  9399	041527	332 00 0 00 000000 
  9400	041530	265 01 0 00 035127 
  9401	041531	265 01 0 00 035151 
  9402	041532	265 01 0 00 035173 
  9403	041533	265 01 0 00 035215 
  9404	041534	265 01 0 00 035237 
  9405	041535	265 01 0 00 035261 
  9406	041536	265 01 0 00 035303 
  9407	041537	265 01 0 00 035325 
  9408	041540	265 01 0 00 035347 
  9409	041541	265 01 0 00 035371 
  9410	041542	265 01 0 00 035413 
  9411	041543	265 01 0 00 035435 
  9412	041544	265 01 0 00 035457 
  9413	041545	265 01 0 00 035474 
  9414	041546	265 01 0 00 035517 
  9415	041547	265 01 0 00 035542 
  9416	041550	265 01 0 00 035565 
  9417	041551	265 01 0 00 035610 
  9418	041552	265 01 0 00 035633 
  9419	041553	265 01 0 00 035656 
  9420	041554	265 01 0 00 036402 
  9421	041555	265 01 0 00 036432 
  9422	041556	265 01 0 00 036462 
  9423	041557	265 01 0 00 036512 
  9424	041560	265 01 0 00 036542 
  9425	041561	265 01 0 00 036572 
  9426	041562	265 01 0 00 036622 
  9427	041563	265 01 0 00 036644 
  9428	041564	001000	000000
  9429	041565	265 01 0 00 036670 
  9430	041566	002000	000000
  9431	041567	265 01 0 00 036714 
  9432	041570	003000	000000
  9433	041571	265 01 0 00 036740 
  9434	041572	004000	000000
  9435	041573	265 01 0 00 036764 
  9436	041574	005000	000000
  9437	041575	265 01 0 00 037010 
  9438	041576	006000	000000
  9439	041577	265 01 0 00 037034 
  9440	041600	007000	000000
  9441	041601	265 01 0 00 037060 
  9442	041602	010000	000000
  9443	041603	265 01 0 00 037104 
  9444	041604	011000	000000
  9445	041605	265 01 0 00 037130 
  9446	041606	012000	000000
  9447	041607	265 01 0 00 037154 
  9448	041610	013000	000000
  9449	041611	265 01 0 00 037200 
  9450	041612	014000	000000
  9451	041613	265 01 0 00 037224 
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-2
STOR	KLM	19-Jul-77 17:01		*STOR* RESERVED STORAGE, JULY 19,1977                                              SEQ 0208

  9452	041614	015000	000000
  9453	041615	265 01 0 00 037250 
  9454	041616	016000	000000
  9455	041617	265 01 0 00 037274 
  9456	041620	017000	000000
  9457	041621	265 01 0 00 037320 
  9458	041622	020000	000000
  9459	041623	265 01 0 00 037344 
  9460	041624	021000	000000
  9461	041625	265 01 0 00 037370 
  9462	041626	022000	000000
  9463	041627	265 01 0 00 037414 
  9464	041630	023000	000000
  9465	041631	265 01 0 00 037440 
  9466	041632	024000	000000
  9467	041633	265 01 0 00 037464 
  9468	041634	025000	000000
  9469	041635	265 01 0 00 037510 
  9470	041636	026000	000000
  9471	041637	265 01 0 00 037534 
  9472	041640	027000	000000
  9473	041641	265 01 0 00 037560 
  9474	041642	030000	000000
  9475	041643	265 01 0 00 037604 
  9476	041644	031000	000000
  9477	041645	265 01 0 00 037630 
  9478	041646	032000	000000
  9479	041647	265 01 0 00 037654 
  9480	041650	033000	000000
  9481	041651	265 01 0 00 037700 
  9482	041652	034000	000000
  9483	041653	265 01 0 00 037724 
  9484	041654	035000	000000
  9485	041655	265 01 0 00 037750 
  9486	041656	036000	000000
  9487	041657	265 01 0 00 037774 
  9488	041660	037000	000000
  9489	041661	254 00 0 00 040021 
  9490	041662	254 00 0 00 040040 
  9491	041663	254 00 0 00 040057 
  9492	041664	254 00 0 00 040076 
  9493	041665	254 00 0 00 040115 
  9494	041666	254 00 0 00 040134 
  9495	041667	254 00 0 00 040153 
  9496	041670	254 00 0 00 040172 
  9497	041671	254 00 0 00 040211 
  9498	041672	254 00 0 00 040230 
  9499	041673	254 00 0 00 040247 
  9500	041674	254 00 0 00 040266 
  9501	041675	254 00 0 00 040305 
  9502	041676	254 00 0 00 040324 
  9503	041677	254 00 0 00 040343 
  9504	041700	254 00 0 00 040362 
  9505	041701	254 00 0 00 040401 
  9506	041702	254 00 0 00 040420 
DBKAH PDP-10 KI10 PI AND UUO DIAGNOSTIC VERSION 0,3	MACRO %53(1020) 11:21 18-Jan-79 Page 1-3
STOR	KLM	19-Jul-77 17:01		*STOR* RESERVED STORAGE, JULY 19,1977                                              SEQ 0209

  9507	041703	254 00 0 00 040437 
  9508	041704	254 00 0 00 040456 
  9509	041705	254 00 0 00 040475 
  9510	041706	254 00 0 00 040514 
  9511	041707	254 00 0 00 040535 
  9512	041710	254 00 0 00 040550 
  9513	041711	254 00 0 00 040563 
  9514	041712	265 11 0 00 040600 
  9515	041713	254 00 0 00 040576 
  9516	041714	265 11 0 00 040621 
  9517	041715	254 00 0 00 040617 
  9518	041716	265 11 0 00 040642 
  9519	041717	254 00 0 00 040640 
  9520	041720	265 11 0 00 040663 
  9521	041721	254 00 0 00 040661 
  9522	041722	265 11 0 00 040704 
  9523	041723	254 00 0 00 040702 
  9524	041724	265 11 0 00 040725 
  9525	041725	254 00 0 00 040723 
  9526	041726	265 11 0 00 040746 
  9527	041727	254 00 0 00 040744 
  9528	041730	265 11 0 00 040767 
  9529	041731	254 00 0 00 040765 
  9530	041732	254 00 0 00 041027 
  9531	041733	004000	041066
  9532	041734	265 01 0 00 041163 
  9533	041735	265 01 0 00 041140 
  9534	041736	777700	041334
  9535						LIST
  9536	041737	000000	000000		ENDSLD:	0
  9537
  9538					IFDEF	DEBUG,<
  9539					PATCH:	BLOCK DEBUG		;PATCHING AREA
  9540					>
  9541
  9542					;PROGRAM VARIABLES
  9543	041740					VAR
  9544
  9545					IFDEF	PGMEND,<
  9546	041747	000000	000000		END:	0
  9547			030000			END	BEGIN	>

NO ERRORS DETECTED

PROGRAM BREAK IS 000000
ABSOLUTE BREAK IS 041750
CPU TIME USED 00:36.431

28P CORE USED

AABCLR	   333#
AADRBK	   333#                                                                                                            SEQ 0210
AAPRC1	   333#
ABORT	    65#
AC	  8732#	  8764#	  8796#	  8828#	  8860#	  8892#	  8924#	  8956#
AC0	   666#
AFOCLR	   333#
AFODIS	   333#
AFOENB	   333#
AFOV	   333#
ALTMGO	   419#
AMCLRB	   333#
AMPCLR	   333#
AMPV	   333#
ANXCLR	   333#
ANXM	   333#
AOVCLR	   333#
AOVDIS	   333#
AOVENB	   333#
AOVFLO	   333#
APAREN	   333#
APARER	   333#
APDCLR	   333#
APDLOV	   333#
APR	  1554	  1555	  1556	  1561	  1562	  1609	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030
	  2062	  2094	  2126	  2158	  2190	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574
	  2594	  2616	  2638	  2659	  2685	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881
	  2907	  2927	  2949	  2971	  2992	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193
	  3214	  3240	  3260	  3282	  3304	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504
	  3526	  3547	  3573	  3593	  3615	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889
	  3919	  3937	  3958	  3979	  4000	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168
	  4186	  4205	  4217	  4354	  4379	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712
	  4749	  4786	  4823	  4860	  4897	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180
	  5193	  5212	  5229	  5248	  5261	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416
	  5433	  5452	  5465	  5484	  5501	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707
	  5743	  5779	  5815	  5851	  5887	  5905	  5912	  5949	  5953	  5956	  5972	  5976	  5979	  5995
	  5999	  6002	  6018	  6022	  6025	  6041	  6045	  6048	  6064	  6068	  6071	  6087	  6091	  6094
	  6108	  6111	  6119	  6121	  6123	  6144	  6147	  6153	  6162	  6165	  6171	  6180	  6183	  6189
	  6198	  6201	  6207	  6216	  6219	  6225	  6234	  6237	  6243	  6252	  6255	  6261	  6270	  6273
	  6279	  6288	  6291	  6297	  6306	  6309	  6315	  6324	  6327	  6333	  6342	  6345	  6351	  6360
	  6363	  6369	  6378	  6381	  6387	  6396	  6399	  6405	  6414	  6417	  6423	  6432	  6435	  6441
	  6450	  6453	  6459	  6483	  6486	  6503	  6523	  6526	  6543	  6563	  6566	  6583	  6603	  6606
	  6623	  6643	  6646	  6663	  6683	  6686	  6703	  6723	  6726	  6743	  8679	  8695	  8711	  8995
	  9036	  9052
APWRFL	   333#
AROV	   333#
AROVTP	   333#
AROVU	   333#
AST	   534#
ATRPOS	   333#
ATSIN	   535#
AUSRIO	   333#
BEGEND	   415#	  9064	  9065
BEGIN	    32	    33	    34	    35	    36	    37	    38	    39	    40	    41	   280	   281	   346#	   709
	   817	  9334	  9547                                                                                             SEQ 0211
BEGIN1	   362#	   416
BELL	   538#
BIGPI1	  2565#
BIGPI2	  2676#
BIGPI3	  2787#
BIGPI4	  2898#
BIGPI5	  3009#
BIGPI6	  3120#
BIGPI7	  3231#
BIGPIX	  3342#
BIGPIY	  3453#
BIGPIZ	  3564#
BIS	   333#	  1581	  1584
C2A	  4363#
C2B	  4382	  4392#
C2C	  4419	  4429#
C2D	  4456	  4466#
C2E	  4493	  4503#
C2F	  4530	  4540#
C2G	  4567	  4577#
C2H	  4604	  4614#
C2I	  4641	  4651#
C2J	  4678	  4688#
C2K	  4715	  4725#
C2L	  4752	  4762#
C2M	  4789	  4799#
C2N	  4826	  4836#
C2O	  4863	  4873#
C2P	  4900	  4910#
C2Q	  4937	  4947#
C2R	  4974	  4984#
C2S	  5011	  5021#
C2T	  5048	  5058#
C2U	  5085	  5095#
C2V	  5122	  5133#
CCA	   333#
CHAIN	    85#
CHNOFF	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2598	  2617	  2639	  2660
	  2663	  2686	  2706	  2709	  2728	  2750	  2771	  2774	  2797	  2817	  2820	  2839	  2861	  2882
	  2885	  2908	  2928	  2931	  2950	  2972	  2993	  2996	  3019	  3039	  3042	  3061	  3083	  3104
	  3107	  3130	  3150	  3153	  3172	  3194	  3215	  3218	  3241	  3261	  3264	  3283	  3305	  3326
	  3329	  3352	  3372	  3375	  3394	  3416	  3437	  3440	  3463	  3483	  3486	  3505	  3527	  3548
	  3551	  3574	  3594	  3597	  3616	  3638	  3659	  3662	  3704	  3735	  3766	  3797	  3828	  3859
	  3890	  3918	  3936	  3957	  3978	  3999	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149
	  4167	  4185	  4204	  4218	  4355	  4380	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676
	  4713	  4750	  4787	  4824	  4861	  4898	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162
	  5181	  5194	  5213	  5230	  5249	  5262	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398
	  5417	  5434	  5453	  5466	  5485	  5502	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5672
	  5708	  5744	  5780	  5816	  5852	  5888	  5906	  5950	  5973	  5996	  6019	  6042	  6065	  6088
	  6109	  6120	  6145	  6163	  6181	  6199	  6217	  6235	  6253	  6271	  6289	  6307	  6325	  6343
	  6361	  6379	  6397	  6415	  6433	  6451	  6484	  6504	  6524	  6544	  6564	  6584	  6604	  6624
	  6644	  6664	  6684	  6704	  6724	  6744	  8680	  8696	  8712	  8996	  9037	  9053                     SEQ 0212
CHNON	   333#	  2576	  2597	  2619	  2641	  2662	  2687	  2708	  2730	  2752	  2773	  2798	  2819	  2841
	  2863	  2884	  2909	  2930	  2952	  2974	  2995	  3020	  3041	  3063	  3085	  3106	  3131	  3152
	  3174	  3196	  3217	  3242	  3263	  3285	  3307	  3328	  3353	  3374	  3396	  3418	  3439	  3464
	  3485	  3507	  3529	  3550	  3575	  3596	  3618	  3640	  3661	  4223	  4242	  4261	  4280	  4299
	  4318	  4337	  4384	  4421	  4458	  4495	  4532	  4569	  4606	  4643	  4680	  4717	  4754	  4791
	  4828	  4865	  4902	  4939	  4976	  5013	  5050	  5087	  5124	  5169	  5201	  5237	  5269	  5305
	  5337	  5373	  5405	  5441	  5473	  5509	  5541	  5577	  5609	  5653	  5658	  5689	  5694	  5725
	  5730	  5761	  5766	  5797	  5802	  5833	  5838	  5869	  5874	  5911	  5955	  5978	  6001	  6024
	  6047	  6070	  6093	  6110	  6146	  6164	  6182	  6200	  6218	  6236	  6254	  6272	  6290	  6308
	  6326	  6344	  6362	  6380	  6398	  6416	  6434	  6452
CKCK0	  5904#
CKCK1	  5926#
CKI01	  4080	  4089#
CKI02	  4098	  4107#
CKI03	  4116	  4125#
CKI04	  4134	  4143#
CKI05	  4152	  4161#
CKI06	  4170	  4179#
CKI07	  4188	  4197#
CLK	   333#	  1596	  1599	  1612	  4225	  4244	  4263	  4282	  4301	  4320	  4339	  5908	  5953	  5976
	  5999	  6022	  6045	  6068	  6091
CLKCLR	   333#	  1614	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158
	  2190	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659
	  2685	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971
	  2992	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282
	  3304	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593
	  3615	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  4073	  4078	  4096	  4114
	  4132	  4150	  4168	  4186	  4205	  4354	  4379	  4416	  4453	  4490	  4527	  4564	  4601	  4638
	  4675	  4712	  4749	  4786	  4823	  4860	  4897	  4934	  4971	  5008	  5045	  5082	  5119	  5140
	  5161	  5180	  5193	  5212	  5229	  5248	  5261	  5280	  5297	  5316	  5329	  5348	  5365	  5384
	  5397	  5416	  5433	  5452	  5465	  5484	  5501	  5520	  5533	  5552	  5569	  5588	  5601	  5620
	  5671	  5707	  5743	  5779	  5815	  5851	  5887	  5905	  5949	  5972	  5995	  6018	  6041	  6064
	  6087	  6108	  6119	  6144	  6162	  6180	  6198	  6216	  6234	  6252	  6270	  6288	  6306	  6324
	  6342	  6360	  6378	  6396	  6414	  6432	  6450	  6503	  6543	  6583	  6623	  6663	  6703	  6743
	  8679	  8695	  8711	  8995	  9036	  9052
CLKDIS	   333#	  1532	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158
	  2190	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659
	  2685	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971
	  2992	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282
	  3304	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593
	  3615	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  3919	  3937	  3958	  3979
	  4000	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168	  4186	  4205	  4217	  4354
	  4379	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712	  4749	  4786	  4823	  4860
	  4897	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180	  5193	  5212	  5229	  5248
	  5261	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416	  5433	  5452	  5465	  5484
	  5501	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707	  5743	  5779	  5815	  5851
	  5887	  5905	  5949	  5956	  5972	  5979	  5995	  6002	  6018	  6025	  6041	  6048	  6064	  6071
	  6087	  6094	  6108	  6119	  6144	  6162	  6180	  6198	  6216	  6234	  6252	  6270	  6288	  6306
	  6324	  6342	  6360	  6378	  6396	  6414	  6432	  6450	  6483	  6503	  6523	  6543	  6563	  6583
	  6603	  6623	  6643	  6663	  6683	  6703	  6723	  6743	  8679	  8695	  8711	  8995	  9036	  9052
CLKENB	   333#	  1533	  4227	  4246	  4265	  4284	  4303	  4322	  4341	  5912	  6486	  6526	  6566	  6606
	  6646	  6686	  6726
CLKU	   333#                                                                                                            SEQ 0213
CLOCKF	   401#
CNTLC	   418#
CNTRP	   333#	  9002
COMMA	   527#
CONSW	   402#
COUNTX	  6479#	  6479	  6500	  6519#	  6519	  6540	  6559#	  6559	  6580	  6599#	  6599	  6620	  6639#	  6639
	  6660	  6679#	  6679	  6700	  6719#	  6719	  6740
CPOPJ	   422#
CPOPJ1	   420#
CRLF	   215	   216	   522#
CRLF2	   219	   220	   524#
CRY0	   333#
CRY1	   333#
CSHFLG	   581#
CSHMEM	   582#
CTRP	   333#	  9003
CYCL60	   575#
DCK	   333#
DDT	   668#
DDTLNK	    99#	   360
DDTSRT	   360#
DEBUG	  9538
DECVER	    11#	    12	    14	   381
DF22F	   486#
DIAGMN	   349#
DIAGNO	   667#
DIAMON	   669#
DING	    71#
DOLLAR	   541#
DONG11	   670#	   801	   814
DSKUPD	   386
DTE	   674#	   801	   814
DTE0	   675#
DTE1	   676#
DTE2	   677#
DTE3	   678#
EFIELD	  8044#	  8073#	  8102#	  8131#	  8160#	  8189#	  8218#	  8247#	  8276#	  8305#	  8334#	  8363#	  8392#	  8421#
	  8450#	  8479#	  8508#	  8537#	  8566#	  8594#	  8622#	  8650#
END	  9214	  9546#
ENDFIX	   661#
ENDIT	  9039	  9048	  9063#
ENDSLD	  9536#
ERMORE	   435#
ERRPC	   406#
ERRTLS	   407#
ERSTOP	    74#
EXCASB	    26#	   384
EXCMEM	   333#
EXCPFW	   333#
EXIOT	   333#	  9043	  9058
FOV	   333#
FOVU	   333#
FRDLNK	    97#                                                                                                            SEQ 0214
FSELNK	    96#
FXU	   333#
HALTPI	   826	   826#	  9083#	  9095
HLTCK	  9086	  9141#
HYPEN	   532#
IADBRK	   333#
IADEXC	   333#
IADSTP	   333#
IADUSR	   333#
IAPRC1	   333#
IAPRE1	   333#
IASRTC	   333#	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158	  2190
	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659	  2685
	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971	  2992
	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282	  3304
	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593	  3615
	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  3919	  3937	  3958	  3979	  4000
	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168	  4186	  4205	  4217	  4354	  4379
	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712	  4749	  4786	  4823	  4860	  4897
	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180	  5193	  5212	  5229	  5248	  5261
	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416	  5433	  5452	  5465	  5484	  5501
	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707	  5743	  5779	  5815	  5851	  5887
	  5905	  5949	  5972	  5995	  6018	  6041	  6064	  6087	  6108	  6119	  6144	  6162	  6180	  6198
	  6216	  6234	  6252	  6270	  6288	  6306	  6324	  6342	  6360	  6378	  6396	  6414	  6432	  6450
	  6483	  6503	  6523	  6543	  6563	  6583	  6603	  6623	  6643	  6663	  6683	  6703	  6723	  6743
	  8679	  8695	  8711	  8995	  9036	  9052
IASRTE	   333#
IASRTS	   333#
ICNSLL	   333#
ICNSLR	   333#
IDATAF	   333#
IEVNPR	   333#
IFMMAN	   333#
IINSTF	   333#
IIOPFC	   333#	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158	  2190
	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659	  2685
	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971	  2992
	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282	  3304
	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593	  3615
	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  3919	  3937	  3958	  3979	  4000
	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168	  4186	  4205	  4217	  4354	  4379
	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712	  4749	  4786	  4823	  4860	  4897
	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180	  5193	  5212	  5229	  5248	  5261
	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416	  5433	  5452	  5465	  5484	  5501
	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707	  5743	  5779	  5815	  5851	  5887
	  5905	  5949	  5972	  5995	  6018	  6041	  6064	  6087	  6108	  6119	  6144	  6162	  6180	  6198
	  6216	  6234	  6252	  6270	  6288	  6306	  6324	  6342	  6360	  6378	  6396	  6414	  6432	  6450
	  6483	  6503	  6523	  6543	  6563	  6583	  6603	  6623	  6643	  6663	  6683	  6703	  6723	  6743
	  8679	  8695	  8711	  8995	  9036	  9052
IIOPFL	   333#
IMAINT	   333#	  1610
IMGINM	   333#
IMGNLO	   333#                                                                                                            SEQ 0215
IMGNOF	   333#
IMGNON	   333#
IMIPGD	   333#
IMLAPD	   333#
INHCSH	    82#
INHPAG	    79#
INXCLR	   333#	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158	  2190
	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659	  2685
	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971	  2992
	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282	  3304
	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593	  3615
	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  3919	  3937	  3958	  3979	  4000
	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168	  4186	  4205	  4217	  4354	  4379
	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712	  4749	  4786	  4823	  4860	  4897
	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180	  5193	  5212	  5229	  5248	  5261
	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416	  5433	  5452	  5465	  5484	  5501
	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707	  5743	  5779	  5815	  5851	  5887
	  5905	  5949	  5972	  5995	  6018	  6041	  6064	  6087	  6108	  6119	  6144	  6162	  6180	  6198
	  6216	  6234	  6252	  6270	  6288	  6306	  6324	  6342	  6360	  6378	  6396	  6414	  6432	  6450
	  6483	  6503	  6523	  6543	  6563	  6583	  6603	  6623	  6643	  6663	  6683	  6703	  6723	  6743
	  8679	  8695	  8711	  8995	  9036	  9052
INXM	   333#
INXSTP	   333#
IOCLR	   333#	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158	  2190
	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659	  2685
	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971	  2992
	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282	  3304
	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593	  3615
	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  3919	  3937	  3958	  3979	  4000
	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168	  4186	  4205	  4217	  4354	  4379
	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712	  4749	  4786	  4823	  4860	  4897
	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180	  5193	  5212	  5229	  5248	  5261
	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416	  5433	  5452	  5465	  5484	  5501
	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707	  5743	  5779	  5815	  5851	  5887
	  5905	  5949	  5972	  5995	  6018	  6041	  6064	  6087	  6108	  6111	  6119	  6144	  6162	  6180
	  6198	  6216	  6234	  6252	  6270	  6288	  6306	  6324	  6342	  6360	  6378	  6396	  6414	  6432
	  6450	  6483	  6503	  6523	  6543	  6563	  6583	  6603	  6623	  6643	  6663	  6683	  6703	  6723
	  6743	  8679	  8695	  8711	  8995	  9036	  9052
IOT0	    52	  1194#
IOT1	  1203#
IOT10	  1318#
IOT11	  1331#
IOT12	  1349#
IOT13	  1356#
IOT14	  1358#
IOT15	  1369#
IOT15A	  1377#
IOT16	  1385#
IOT16A	  1393#
IOT17	  1401#
IOT17A	  1409#
IOT18	  1416#
IOT19	  1424#                                                                                                            SEQ 0216
IOT2	  1210#
IOT20	  1432#
IOT21	  1440#
IOT22	  1448#
IOT23	  1456#
IOT24	  1476#
IOT25	  1495#
IOT26	  1513#
IOT27	  1532#
IOT28	  1539#
IOT29	  1551#
IOT3	  1217#
IOT30	  1561#
IOT31	  1580#
IOT31A	  1552	  1568#
IOT32	  1594#
IOT33	  1596#
IOT33A	  1612#
IOT33B	  1611	  1622#
IOT34	  1630#
IOT35	  1637#
IOT36	  1645#
IOT37	  1652#
IOT38	  1673#
IOT39	  1680#
IOT4	  1224#
IOT40	  1688#
IOT41	  1695#
IOT42	  1702#
IOT43	  1709#
IOT44	  1717#
IOT45	  1724#
IOT46	  1732#
IOT47	  1739#
IOT48	  1747#
IOT49	  1754#
IOT5	  1231#
IOT50	  1762#
IOT51	  1769#
IOT6	  1242#
IOT7	  1260#
IOT8	  1278#
IOT9	  1297#
IOTXX	  1184	  1193#
IOTXXX	    51	  1178#
IOTXYZ	  1777#
IP50HZ	   333#
IPAREN	   333#
IPARER	   333#
IPRSTP	   333#
IPWRFL	   333#
IPWRLO	   333#
IRQCLR	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191     SEQ 0217
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2617	  2639	  2660	  2686
	  2706	  2728	  2750	  2771	  2797	  2817	  2839	  2861	  2882	  2908	  2928	  2950	  2972	  2993
	  3019	  3039	  3061	  3083	  3104	  3130	  3150	  3172	  3194	  3215	  3241	  3261	  3283	  3305
	  3326	  3352	  3372	  3394	  3416	  3437	  3463	  3483	  3505	  3527	  3548	  3574	  3594	  3616
	  3638	  3659	  3704	  3735	  3766	  3797	  3828	  3859	  3890	  3918	  3936	  3957	  3978	  3999
	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380
	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898
	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262
	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502
	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5658	  5672	  5694	  5708	  5730	  5744	  5766
	  5780	  5802	  5816	  5838	  5852	  5874	  5888	  5906	  5950	  5973	  5996	  6019	  6042	  6065
	  6088	  6109	  6120	  6145	  6163	  6181	  6199	  6217	  6235	  6253	  6271	  6289	  6307	  6325
	  6343	  6361	  6379	  6397	  6415	  6433	  6451	  6484	  6504	  6524	  6544	  6564	  6584	  6604
	  6624	  6644	  6664	  6684	  6704	  6724	  6744	  8680	  8696	  8712	  8996	  9037	  9053
ISPDOF	   333#
ISPDON	   333#
ITERAT	   379	  1178#	  1178
ITMDIS	   333#	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158	  2190
	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659	  2685
	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971	  2992
	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282	  3304
	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593	  3615
	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  3919	  3937	  3958	  3979	  4000
	  4021	  4043	  4073	  4078	  4096	  4114	  4132	  4150	  4168	  4186	  4205	  4217	  4354	  4379
	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675	  4712	  4749	  4786	  4823	  4860	  4897
	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161	  5180	  5193	  5212	  5229	  5248	  5261
	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397	  5416	  5433	  5452	  5465	  5484	  5501
	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671	  5707	  5743	  5779	  5815	  5851	  5887
	  5905	  5949	  5972	  5995	  6018	  6041	  6064	  6087	  6108	  6119	  6144	  6162	  6180	  6198
	  6216	  6234	  6252	  6270	  6288	  6306	  6324	  6342	  6360	  6378	  6396	  6414	  6432	  6450
	  6483	  6503	  6523	  6543	  6563	  6583	  6603	  6623	  6643	  6663	  6683	  6703	  6723	  6743
	  8679	  8695	  8711	  8995	  9036	  9052
ITMENB	   333#
ITMOEN	   333#
ITMOUT	   333#
ITMSET	   333#
ITRCH1	   439#
ITRCNT	   379#	   755	   776	   780	   788	   789	   793
IWRITE	   333#
JENDIS	  5636#
JOB41	   333#
JOBAPR	   333#
JOBCNI	   333#
JOBDDT	   333#
JOBFF	   333#
JOBOPC	   333#
JOBREL	   333#
JOBREN	   333#
JOBSA	   333#
JOBSYM	   333#
JOBTPC	   333#
JOBUSY	   333#
JOBUUO	   333#                                                                                                            SEQ 0218
JOBVER	   333#
KA10	   333	  1185#
KAHZ50	    87#
KAIFLG	   396#
KI10	    25#	   333
KL10	   333
KLFLG	   397#	   756	   767	   786
KLOLD	   295
KNTRP	   333#	  8998
KTRP	   333#	  8999
LAST	   821#	  1224	  1225	  1231	  1232	  1260	  1261	  1278	  1279	  1298	  1332	  1350	  1582	  6148
	  6166	  6184	  6202	  6220	  6238	  6256	  6274	  6292	  6310	  6328	  6346	  6364	  6382	  6400
	  6418	  6436	  6454
LDEXCB	   333#
LDLNK	    98#	   349	   351
LDUSRB	   333#
LFP	   536#
LIP	   333#
LOOPER	    73#
LUUO	   333#
LUUO1	   466	   467
LUUO10	   466	   471
LUUO11	   466	   471
LUUO12	   466	   472
LUUO13	   466	   472
LUUO14	   466	   473
LUUO15	   466	   473
LUUO16	   466	   474
LUUO17	   466	   474
LUUO2	   466	   468
LUUO20	   466	   475
LUUO21	   466	   475
LUUO22	   466	   476
LUUO23	   466	   476
LUUO24	   466	   477
LUUO25	   466	   477
LUUO26	   466	   478
LUUO27	   466	   478
LUUO3	   466	   468
LUUO30	   466	   479
LUUO31	   466	   479
LUUO32	   466	   480
LUUO33	   466	   480
LUUO4	   466	   469
LUUO5	   466	   469
LUUO6	   466	   470
LUUO7	   466	   470
LUUOI	   333#
MACHTP	  9163#	  9180	  9181	  9182	  9183	  9184	  9185	  9186	  9187
MAPNEW	   487#
MARGIN	   409#	  1551
MCNVER	    11#	    12	    14	   381
MEMLOW	   489#                                                                                                            SEQ 0219
MEMMAP	   387
MEMSIZ	   490#
MEMTOT	   488#
MINUS	   531#
MLUUO	  6768#	  6809#	  6850#	  6891#	  6932#	  6973#	  7014#	  7055#	  7096#	  7137#	  7178#	  7219#	  7260#	  7301#
	  7342#	  7383#	  7424#	  7465#	  7506#	  7547#	  7588#	  7629#	  7670#	  7711#	  7752#	  7793#	  7834#	  7875#
	  7916#	  7957#	  7998#
MODDVC	    81#
MODDVL	   280	   280#	   382
MODDVU	   281	   281#	   383
MODLNK	   100#	   346
MONCTL	   399#	   796
MONFLG	   398#	   749	  3932	  3953	  3974	  3995	  4016	  4038	  4059	  4090	  4108	  4126	  4144	  4162
	  4180	  4198	  4234	  4253	  4272	  4291	  4310	  4329	  4348	  4374	  4411	  4448	  4485	  4522
	  4559	  4596	  4633	  4670	  4707	  4744	  4781	  4818	  4855	  4892	  4929	  4966	  5003	  5040
	  5077	  5114	  9038	  9047	  9133
MONTEN	   400#	   754	   782	   808
MONTYP	   613#
MPVU	   333#
MUHLT	  9008	  9014#
MULT0	  4335	  4347#
MULT1	  4316	  4328#
MULT2	  4297	  4309#
MULT3	  4278	  4290#
MULT4	  4259	  4271#
MULT5	  4240	  4252#
MULT6	  4221	  4233#
MULTI	  4070	  4216#
MUUO	   333#	  9006	  9007	  9016	  9020
MUUOPC	   333#
NOPNT	    69#
NXMU	   333#
OPRSEL	    83#
OPTIME	   501#
P	   126	   127	   128	   129	   333#	   421
PAG	   333#
PALERS	    75#
PARCLR	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2617	  2639	  2660	  2686
	  2706	  2728	  2750	  2771	  2797	  2817	  2839	  2861	  2882	  2908	  2928	  2950	  2972	  2993
	  3019	  3039	  3061	  3083	  3104	  3130	  3150	  3172	  3194	  3215	  3241	  3261	  3283	  3305
	  3326	  3352	  3372	  3394	  3416	  3437	  3463	  3483	  3505	  3527	  3548	  3574	  3594	  3616
	  3638	  3659	  3704	  3735	  3766	  3797	  3828	  3859	  3890	  3918	  3936	  3957	  3978	  3999
	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380
	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898
	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262
	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502
	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5672	  5708	  5744	  5780	  5816	  5852	  5888
	  5906	  5950	  5973	  5996	  6019	  6042	  6065	  6088	  6109	  6120	  6145	  6163	  6181	  6199
	  6217	  6235	  6253	  6271	  6289	  6307	  6325	  6343	  6361	  6379	  6397	  6415	  6433	  6451
	  6484	  6504	  6524	  6544	  6564	  6584	  6604	  6624	  6644	  6664	  6684	  6704	  6724	  6744
	  8680	  8696	  8712	  8996	  9037	  9053
PARDIS	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191     SEQ 0220
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2617	  2639	  2660	  2686
	  2706	  2728	  2750	  2771	  2797	  2817	  2839	  2861	  2882	  2908	  2928	  2950	  2972	  2993
	  3019	  3039	  3061	  3083	  3104	  3130	  3150	  3172	  3194	  3215	  3241	  3261	  3283	  3305
	  3326	  3352	  3372	  3394	  3416	  3437	  3463	  3483	  3505	  3527	  3548	  3574	  3594	  3616
	  3638	  3659	  3704	  3735	  3766	  3797	  3828	  3859	  3890	  3918	  3936	  3957	  3978	  3999
	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380
	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898
	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262
	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502
	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5672	  5708	  5744	  5780	  5816	  5852	  5888
	  5906	  5950	  5973	  5996	  6019	  6042	  6065	  6088	  6109	  6120	  6145	  6163	  6181	  6199
	  6217	  6235	  6253	  6271	  6289	  6307	  6325	  6343	  6361	  6379	  6397	  6415	  6433	  6451
	  6484	  6504	  6524	  6544	  6564	  6584	  6604	  6624	  6644	  6664	  6684	  6704	  6724	  6744
	  8680	  8696	  8712	  8996	  9037	  9053
PAREA0	    43#
PAREA1	    44#	   377
PAREA2	    45#	   378
PAREA3	    46#	   375
PAREA4	    47#	   376
PAREA5	    48#	   388
PAREA6	    49#	   389
PAREA7	   388#
PAREA8	   389#
PARENB	   333#
PARU	   333#
PASCNT	   403#	   775
PDISF	   498#
PDLOVU	   333#
PDOVTP	   333#
PDP6	  1181	  1186#
PERIOD	   528#
PFSTRT	   355#
PGFTRP	   333#
PGMEND	    27#	    53#	  9545
PGMNAM	   380	  9335#
PI	   788	  1358	  1623	  1630	  1631	  1637	  1638	  1639	  1645	  1652	  1673	  1674	  1680	  1681
	  1688	  1689	  1695	  1696	  1697	  1702	  1703	  1709	  1710	  1711	  1717	  1718	  1724	  1725
	  1726	  1732	  1733	  1739	  1740	  1741	  1747	  1748	  1754	  1755	  1756	  1762	  1763	  1769
	  1770	  1771	  1803	  1804	  1808	  1833	  1834	  1838	  1863	  1864	  1868	  1893	  1894	  1898
	  1923	  1924	  1928	  1953	  1954	  1958	  1983	  1984	  1988	  2031	  2032	  2036	  2063	  2064
	  2068	  2095	  2096	  2100	  2127	  2128	  2132	  2159	  2160	  2164	  2191	  2192	  2196	  2223
	  2224	  2228	  2279	  2280	  2282	  2321	  2322	  2324	  2363	  2364	  2366	  2405	  2406	  2408
	  2447	  2448	  2450	  2489	  2490	  2492	  2531	  2532	  2534	  2575	  2576	  2577	  2595	  2597
	  2598	  2599	  2617	  2619	  2620	  2621	  2639	  2641	  2642	  2660	  2662	  2663	  2664	  2686
	  2687	  2688	  2706	  2708	  2709	  2710	  2728	  2730	  2731	  2732	  2750	  2752	  2753	  2771
	  2773	  2774	  2775	  2797	  2798	  2799	  2817	  2819	  2820	  2821	  2839	  2841	  2842	  2843
	  2861	  2863	  2864	  2882	  2884	  2885	  2886	  2908	  2909	  2910	  2928	  2930	  2931	  2932
	  2950	  2952	  2953	  2954	  2972	  2974	  2975	  2993	  2995	  2996	  2997	  3019	  3020	  3021
	  3039	  3041	  3042	  3043	  3061	  3063	  3064	  3065	  3083	  3085	  3086	  3104	  3106	  3107
	  3108	  3130	  3131	  3132	  3150	  3152	  3153	  3154	  3172	  3174	  3175	  3176	  3194	  3196
	  3197	  3215	  3217	  3218	  3219	  3241	  3242	  3243	  3261	  3263	  3264	  3265	  3283	  3285
	  3286	  3287	  3305	  3307	  3308	  3326	  3328	  3329	  3330	  3352	  3353	  3354	  3372	  3374
	  3375	  3376	  3394	  3396	  3397	  3398	  3416	  3418	  3419	  3437	  3439	  3440	  3441	  3463     SEQ 0221
	  3464	  3465	  3483	  3485	  3486	  3487	  3505	  3507	  3508	  3509	  3527	  3529	  3530	  3548
	  3550	  3551	  3552	  3574	  3575	  3576	  3594	  3596	  3597	  3598	  3616	  3618	  3619	  3620
	  3638	  3640	  3641	  3659	  3661	  3662	  3663	  3704	  3705	  3709	  3710	  3735	  3736	  3740
	  3741	  3766	  3767	  3771	  3772	  3797	  3798	  3802	  3803	  3828	  3829	  3833	  3834	  3859
	  3860	  3864	  3865	  3890	  3891	  3895	  3896	  3918	  3924	  3936	  3945	  3957	  3966	  3978
	  3987	  3999	  4008	  4020	  4030	  4042	  4051	  4074	  4077	  4082	  4095	  4100	  4113	  4118
	  4131	  4136	  4149	  4154	  4167	  4172	  4185	  4190	  4204	  4218	  4223	  4242	  4261	  4280
	  4299	  4318	  4337	  4355	  4380	  4384	  4385	  4417	  4421	  4422	  4454	  4458	  4459	  4491
	  4495	  4496	  4528	  4532	  4533	  4565	  4569	  4570	  4602	  4606	  4607	  4639	  4643	  4644
	  4676	  4680	  4681	  4713	  4717	  4718	  4750	  4754	  4755	  4787	  4791	  4792	  4824	  4828
	  4829	  4861	  4865	  4866	  4898	  4902	  4903	  4935	  4939	  4940	  4972	  4976	  4977	  5009
	  5013	  5014	  5046	  5050	  5051	  5083	  5087	  5088	  5120	  5124	  5125	  5141	  5162	  5169
	  5181	  5194	  5201	  5213	  5230	  5237	  5249	  5262	  5269	  5281	  5298	  5305	  5317	  5330
	  5337	  5349	  5366	  5373	  5385	  5398	  5405	  5417	  5434	  5441	  5453	  5466	  5473	  5485
	  5502	  5509	  5521	  5534	  5541	  5553	  5570	  5577	  5589	  5602	  5609	  5621	  5653	  5658
	  5660	  5672	  5689	  5694	  5696	  5708	  5725	  5730	  5732	  5744	  5761	  5766	  5768	  5780
	  5797	  5802	  5804	  5816	  5833	  5838	  5840	  5852	  5869	  5874	  5876	  5888	  5906	  5911
	  5950	  5955	  5973	  5978	  5996	  6001	  6019	  6024	  6042	  6047	  6065	  6070	  6088	  6093
	  6109	  6110	  6112	  6120	  6122	  6145	  6146	  6149	  6163	  6164	  6167	  6181	  6182	  6185
	  6199	  6200	  6203	  6217	  6218	  6221	  6235	  6236	  6239	  6253	  6254	  6257	  6271	  6272
	  6275	  6289	  6290	  6293	  6307	  6308	  6311	  6325	  6326	  6329	  6343	  6344	  6347	  6361
	  6362	  6365	  6379	  6380	  6383	  6397	  6398	  6401	  6415	  6416	  6419	  6433	  6434	  6437
	  6451	  6452	  6455	  6484	  6485	  6504	  6524	  6525	  6544	  6564	  6565	  6584	  6604	  6605
	  6624	  6644	  6645	  6664	  6684	  6685	  6704	  6724	  6725	  6744	  8680	  8696	  8712	  8996
	  9037	  9053
PICHN1	   333#
PICHN2	   333#
PICHN3	   333#
PICHN4	   333#
PICHN5	   333#
PICHN6	   333#
PICHN7	   333#
PICHNA	   333#
PICLR	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191
	  2223	  2279	  2282	  2321	  2324	  2363	  2366	  2405	  2408	  2447	  2450	  2489	  2492	  2531
	  2534	  2575	  2595	  2617	  2620	  2639	  2660	  2686	  2706	  2728	  2731	  2750	  2771	  2797
	  2817	  2839	  2842	  2861	  2882	  2908	  2928	  2950	  2953	  2972	  2993	  3019	  3039	  3061
	  3064	  3083	  3104	  3130	  3150	  3172	  3175	  3194	  3215	  3241	  3261	  3283	  3286	  3305
	  3326	  3352	  3372	  3394	  3397	  3416	  3437	  3463	  3483	  3505	  3508	  3527	  3548	  3574
	  3594	  3616	  3619	  3638	  3659	  3704	  3709	  3735	  3740	  3766	  3771	  3797	  3802	  3828
	  3833	  3859	  3864	  3890	  3895	  3918	  3936	  3957	  3978	  3999	  4020	  4042	  4074	  4077
	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380	  4417	  4454	  4491	  4528
	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898	  4935	  4972	  5009	  5046
	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262	  5281	  5298	  5317	  5330
	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502	  5521	  5534	  5553	  5570
	  5589	  5602	  5621	  5672	  5708	  5744	  5780	  5816	  5852	  5888	  5906	  5950	  5973	  5996
	  6019	  6042	  6065	  6088	  6109	  6120	  6122	  6145	  6163	  6181	  6199	  6217	  6235	  6253
	  6271	  6289	  6307	  6325	  6343	  6361	  6379	  6397	  6415	  6433	  6451	  6484	  6504	  6524
	  6544	  6564	  6584	  6604	  6624	  6644	  6664	  6684	  6704	  6724	  6744	  8680	  8696	  8712
	  8996	  9037	  9053
PIOFF	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2617	  2639	  2660	  2686
	  2706	  2728	  2750	  2771	  2797	  2817	  2839	  2861	  2882	  2908	  2928	  2950	  2972	  2993     SEQ 0222
	  3019	  3039	  3061	  3083	  3104	  3130	  3150	  3172	  3194	  3215	  3241	  3261	  3283	  3305
	  3326	  3352	  3372	  3394	  3416	  3437	  3463	  3483	  3505	  3527	  3548	  3574	  3594	  3616
	  3638	  3659	  3704	  3735	  3766	  3797	  3828	  3859	  3890	  3918	  3936	  3957	  3978	  3999
	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380
	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898
	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262
	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502
	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5672	  5708	  5744	  5780	  5816	  5852	  5888
	  5906	  5950	  5973	  5996	  6019	  6042	  6065	  6088	  6109	  6120	  6145	  6163	  6181	  6199
	  6217	  6235	  6253	  6271	  6289	  6307	  6325	  6343	  6361	  6379	  6397	  6415	  6433	  6451
	  6484	  6504	  6524	  6544	  6564	  6584	  6604	  6624	  6644	  6664	  6684	  6704	  6724	  6744
	  8680	  8696	  8712	  8996	  9037	  9053
PION	   333#	  1804	  1834	  1864	  1894	  1924	  1954	  1984	  3705	  3736	  3767	  3798	  3829	  3860
	  3891	  4223	  4242	  4261	  4280	  4299	  4318	  4337	  4384	  4421	  4458	  4495	  4532	  4569
	  4606	  4643	  4680	  4717	  4754	  4791	  4828	  4865	  4902	  4939	  4976	  5013	  5050	  5087
	  5124	  5169	  5201	  5237	  5269	  5305	  5337	  5373	  5405	  5441	  5473	  5509	  5541	  5577
	  5609	  5653	  5658	  5689	  5694	  5725	  5730	  5761	  5766	  5797	  5802	  5833	  5838	  5869
	  5874	  5911	  5955	  5978	  6001	  6024	  6047	  6070	  6093	  6110	  6112	  6146	  6149	  6164
	  6167	  6182	  6185	  6200	  6203	  6218	  6221	  6236	  6239	  6254	  6257	  6272	  6275	  6290
	  6293	  6308	  6311	  6326	  6329	  6344	  6347	  6362	  6365	  6380	  6383	  6398	  6401	  6416
	  6419	  6434	  6437	  6452	  6455
PIOT00	  1786#
PIOT01	  2012#
PIOT02	  2252#
PIOT03	  3688#
PLIST	   567#	   567
PLISTE	   567	   569#
PLISTS	   568#
PLUS	   533#
PNTENB	   497#
PNTEXT	   376#
PNTFLG	   496#
PNTINH	   499#
PNTLPT	    70#
PNTNAM	   375#
PNTRP	   333#	  9004
PNTSPC	   500#
PTRP	   333#	  9005
PVPAGI	   594#
PWFCLR	   333#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2617	  2639	  2660	  2686
	  2706	  2728	  2750	  2771	  2797	  2817	  2839	  2861	  2882	  2908	  2928	  2950	  2972	  2993
	  3019	  3039	  3061	  3083	  3104	  3130	  3150	  3172	  3194	  3215	  3241	  3261	  3283	  3305
	  3326	  3352	  3372	  3394	  3416	  3437	  3463	  3483	  3505	  3527	  3548	  3574	  3594	  3616
	  3638	  3659	  3704	  3735	  3766	  3797	  3828	  3859	  3890	  3918	  3936	  3957	  3978	  3999
	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380
	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898
	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262
	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502
	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5672	  5708	  5744	  5780	  5816	  5852	  5888
	  5906	  5950	  5973	  5996	  6019	  6042	  6065	  6088	  6109	  6120	  6145	  6163	  6181	  6199
	  6217	  6235	  6253	  6271	  6289	  6307	  6325	  6343	  6361	  6379	  6397	  6415	  6433	  6451
	  6484	  6504	  6524	  6544	  6564	  6584	  6604	  6624	  6644	  6664	  6684	  6704	  6724	  6744     SEQ 0223
	  8680	  8696	  8712	  8996	  9037	  9053
QUEST	   539#
RADIX	   542#
RADLSC	   544#
RADLSP	   543#
RANDBS	   377#
REENTR	   357#
RELIAB	    77#
REPT	   333#
REPT1	   333#
REPTU	   455#
REQSET	   333#	  2032	  2064	  2096	  2128	  2160	  2192	  2224	  2280	  2322	  2364	  2406	  2448	  2490
	  2532	  3705	  3736	  3767	  3798	  3829	  3860	  3891	  4385	  4422	  4459	  4496	  4533	  4570
	  4607	  4644	  4681	  4718	  4755	  4792	  4829	  4866	  4903	  4940	  4977	  5014	  5051	  5088
	  5125	  5169	  5201	  5237	  5269	  5305	  5337	  5373	  5405	  5441	  5473	  5509	  5541	  5577
	  5609	  5653	  5689	  5725	  5761	  5797	  5833	  5869
RESET1	  6107#
RESET2	  6118#
RESET3	  6129#
RESRT1	   432#
RESRT2	   433#
RETURN	   364#	   784	   791	   809
RSTART	    66#
RTP	   537#
RUNFLG	   404#
SADR1	    31#	   353
SADR10	    40#	   369
SADR11	    41#	   370
SADR2	    32#	   355
SADR3	    33#	   357
SADR4	    34#
SADR5	    35#	   418
SADR6	    36#	   419
SADR7	    37#	   366
SADR8	    38#	   367
SADR9	    39#	   368
SBINIT	   139	   363#
SCOPE	   456#
SENSE1	   333#
SENSE2	   333#
SENSE3	   333#
SENSE4	   333#
SENSE5	   333#
SENSE6	   333#
SFSTRT	   353#
SKIPNO	  5148#
SLASH	   540#
SM10	   644#
SMLUSR	   333#
SNTRP	   333#	  9000
SPACE	   529#
SRTDDT	   359#
START	    51#	   347	   752	   760	   768	   772                                                                     SEQ 0224
START1	   366#
START2	   367#
START3	   368#
START4	   369#
START5	   370#
STARTA	    52#	   362	   770	   781	   790	   797	   804
STRP	   333#	  9001
SUBLNK	   101#	   363
SWPTAB	   650#
SWTEXR	   378#
SYSEXR	   351#
TAB	   530#
TABLE	  9172#	  9193
TESTPC	   405#
TICKS	   408#
TN0	   333#
TN1	   333#
TNUMB	  1241#	  1241	  1250	  1259#	  1259	  1268	  1277#	  1277	  1287	  1296#	  1296	  1308	  1317#	  1317
	  1321	  1330#	  1330	  1339	  1348#	  1348	  1466	  1475#	  1475	  1485	  1494#	  1494	  1503	  1512#
	  1512	  1522	  1531#	  1531	  1570	  1579#	  1579	  1589	  1800#	  1800	  1813	  1830#	  1830	  1843
	  1860#	  1860	  1873	  1890#	  1890	  1903	  1920#	  1920	  1933	  1950#	  1950	  1963	  1980#	  1980
	  1993	  2028#	  2028	  2041	  2060#	  2060	  2073	  2092#	  2092	  2105	  2124#	  2124	  2137	  2156#
	  2156	  2169	  2188#	  2188	  2201	  2220#	  2220	  2233	  2276#	  2276	  2291	  2318#	  2318	  2333
	  2360#	  2360	  2375	  2402#	  2402	  2417	  2444#	  2444	  2459	  2486#	  2486	  2501	  2528#	  2528
	  2543	  2572#	  2572	  2583	  2592#	  2592	  2605	  2614#	  2614	  2627	  2636#	  2636	  2648	  2657#
	  2657	  2669	  2683#	  2683	  2694	  2703#	  2703	  2716	  2725#	  2725	  2738	  2747#	  2747	  2759
	  2768#	  2768	  2780	  2794#	  2794	  2805	  2814#	  2814	  2827	  2836#	  2836	  2849	  2858#	  2858
	  2870	  2879#	  2879	  2891	  2905#	  2905	  2916	  2925#	  2925	  2938	  2947#	  2947	  2960	  2969#
	  2969	  2981	  2990#	  2990	  3002	  3016#	  3016	  3027	  3036#	  3036	  3049	  3058#	  3058	  3071
	  3080#	  3080	  3092	  3101#	  3101	  3113	  3127#	  3127	  3138	  3147#	  3147	  3160	  3169#	  3169
	  3182	  3191#	  3191	  3203	  3212#	  3212	  3224	  3238#	  3238	  3249	  3258#	  3258	  3271	  3280#
	  3280	  3293	  3302#	  3302	  3314	  3323#	  3323	  3335	  3349#	  3349	  3360	  3369#	  3369	  3382
	  3391#	  3391	  3404	  3413#	  3413	  3425	  3434#	  3434	  3446	  3460#	  3460	  3471	  3480#	  3480
	  3493	  3502#	  3502	  3515	  3524#	  3524	  3536	  3545#	  3545	  3557	  3571#	  3571	  3582	  3591#
	  3591	  3604	  3613#	  3613	  3626	  3635#	  3635	  3647	  3656#	  3656	  3668	  3701#	  3701	  3715
	  3732#	  3732	  3746	  3763#	  3763	  3777	  3794#	  3794	  3808	  3825#	  3825	  3839	  3856#	  3856
	  3870	  3887#	  3887	  3901	  4366#	  4366	  4394	  4403#	  4403	  4431	  4440#	  4440	  4468	  4477#
	  4477	  4505	  4514#	  4514	  4542	  4551#	  4551	  4579	  4588#	  4588	  4616	  4625#	  4625	  4653
	  4662#	  4662	  4690	  4699#	  4699	  4727	  4736#	  4736	  4764	  4773#	  4773	  4801	  4810#	  4810
	  4838	  4847#	  4847	  4875	  4884#	  4884	  4912	  4921#	  4921	  4949	  4958#	  4958	  4986	  4995#
	  4995	  5023	  5032#	  5032	  5060	  5069#	  5069	  5097	  5106#	  5106	  5134	  5650#	  5650	  5665
	  5686#	  5686	  5701	  5722#	  5722	  5737	  5758#	  5758	  5773	  5794#	  5794	  5809	  5830#	  5830
	  5845	  5866#	  5866	  5881	  6477#	  6477	  6490	  6517#	  6517	  6530	  6557#	  6557	  6570	  6597#
	  6597	  6610	  6637#	  6637	  6650	  6677#	  6677	  6690	  6717#	  6717	  6730	  6772#	  6772	  6789
	  6813#	  6813	  6830	  6854#	  6854	  6871	  6895#	  6895	  6912	  6936#	  6936	  6953	  6977#	  6977
	  6994	  7018#	  7018	  7035	  7059#	  7059	  7076	  7100#	  7100	  7117	  7141#	  7141	  7158	  7182#
	  7182	  7199	  7223#	  7223	  7240	  7264#	  7264	  7281	  7305#	  7305	  7322	  7346#	  7346	  7363
	  7387#	  7387	  7404	  7428#	  7428	  7445	  7469#	  7469	  7486	  7510#	  7510	  7527	  7551#	  7551
	  7568	  7592#	  7592	  7609	  7633#	  7633	  7650	  7674#	  7674	  7691	  7715#	  7715	  7732	  7756#
	  7756	  7773	  7797#	  7797	  7814	  7838#	  7838	  7855	  7879#	  7879	  7896	  7920#	  7920	  7937
	  7961#	  7961	  7978	  8002#	  8002	  8019	  8048#	  8048	  8060	  8077#	  8077	  8089	  8106#	  8106
	  8118	  8135#	  8135	  8147	  8164#	  8164	  8176	  8193#	  8193	  8205	  8222#	  8222	  8234	  8251#
	  8251	  8263	  8280#	  8280	  8292	  8309#	  8309	  8321	  8338#	  8338	  8350	  8367#	  8367	  8379     SEQ 0225
	  8396#	  8396	  8408	  8425#	  8425	  8437	  8454#	  8454	  8466	  8483#	  8483	  8495	  8512#	  8512
	  8524	  8541#	  8541	  8553	  8570#	  8570	  8582	  8598#	  8598	  8610	  8626#	  8626	  8638	  8654#
	  8654	  8666	  8737#	  8737	  8751	  8769#	  8769	  8783	  8801#	  8801	  8815	  8833#	  8833	  8847
	  8865#	  8865	  8879	  8897#	  8897	  8911	  8929#	  8929	  8943	  8961#	  8961	  8975	  8989#	  8989
	  9027	  9063
TOTALS	    67#
TPEND	  9118	  9120	  9122	  9124	  9126	  9128	  9130	  9131	  9133#
TRAPPI	   825	  9100#	  9112
TRP0A	  3922	  3931#
TRP1A	  3943	  3952#
TRP2A	  3964	  3973#
TRP3A	  3985	  3994#
TRP3TP	   333#
TRP4A	  4006	  4015#
TRP5A	  4028	  4037#
TRP6A	  4049	  4058#
TRPCLR	   827	  9071#	  9079
TRPENB	   333#
TRPFIL	  9103	  9117#
TRPSET	  1194	  9189#	  9204
TTNBRF	   588#
TTY	  9219	  9221	  9227	  9229	  9230	  9231	  9233	  9234	  9237	  9239	  9241	  9242	  9243	  9253
	  9258	  9259	  9261
TTY01	  9226#	  9262
TTY02	  9237#	  9252
TTY03	  9247	  9250	  9253#	  9257
TTY04	  9255#	  9264
TTYBEG	    31	  9216#	  9224
TTYBUF	  9214#	  9236	  9254
TTYCHR	  9331#
TTYDAT	  9218	  9230	  9233	  9266#
TTYECH	  9220	  9224#
TTYEND	  9218	  9329#
TTYFIL	   504#
TTYSPD	   505#
TXTINH	    78#
UOLIP	   333#
UOUSR	   333#
USER	   395#	   745	   748	   750	   751	   777
USERF	   333#	   747	  3935	  3956	  3977	  3998	  4019	  4041	  4062	  4069	  4093	  4111	  4129	  4147
	  4165	  4183	  4201	  4237	  4256	  4275	  4294	  4313	  4332	  4351	  4377	  4414	  4451	  4488
	  4525	  4562	  4599	  4636	  4673	  4710	  4747	  4784	  4821	  4858	  4895	  4932	  4969	  5006
	  5043	  5080	  5117	  8991
USRASB	   385
USRCMP	   333#
USRCRF	   514#
USRIO0	  8992	  9035#
USRIO1	  9051#
USRLFF	   513#
USRPFW	   333#
UUO	  3920	  9162#
UUO01	  6763#
UUO02	  6784	  6804#                                                                                                    SEQ 0226
UUO03	  6825	  6845#
UUO04	  6866	  6886#
UUO05	  6907	  6927#
UUO06	  6948	  6968#
UUO07	  6989	  7009#
UUO10	  7030	  7050#
UUO11	  7071	  7091#
UUO12	  7112	  7132#
UUO13	  7153	  7173#
UUO14	  7194	  7214#
UUO15	  7235	  7255#
UUO16	  7276	  7296#
UUO17	  7317	  7337#
UUO20	  7358	  7378#
UUO21	  7399	  7419#
UUO22	  7440	  7460#
UUO23	  7481	  7501#
UUO24	  7522	  7542#
UUO25	  7563	  7583#
UUO26	  7604	  7624#
UUO27	  7645	  7665#
UUO30	  7686	  7706#
UUO31	  7727	  7747#
UUO32	  7768	  7788#
UUO33	  7809	  7829#
UUO34	  7850	  7870#
UUO35	  7891	  7911#
UUO36	  7932	  7952#
UUO37	  7973	  7993#
UUOBTH	  8710#
UUODIS	   467#
UUOEXT	   423#
UUOIND	  8678#
UUOINX	  8694#
UUOPC	  8014	  8033#
UUOPCA	  8034#
UUORTN	   424#
UUOSKP	   421#
X	  1778#	  1808	  1819	  1819#	  1838	  1849	  1849#	  1868	  1879	  1879#	  1898	  1909	  1909#	  1928
	  1939	  1939#	  1958	  1969	  1969#	  1988	  1999	  1999#	  2010#	  2036	  2047	  2047#	  2068	  2079
	  2079#	  2100	  2111	  2111#	  2132	  2143	  2143#	  2164	  2175	  2175#	  2196	  2207	  2207#	  2228
	  2239	  2239#	  2251#	  2280	  2282	  2297	  2297#	  2322	  2324	  2339	  2339#	  2364	  2366	  2381
	  2381#	  2406	  2408	  2423	  2423#	  2448	  2450	  2465	  2465#	  2490	  2492	  2507	  2507#	  2532
	  2534	  2549	  2549#	  3686#	  3710	  3721	  3721#	  3741	  3752	  3752#	  3772	  3783	  3783#	  3803
	  3814	  3814#	  3834	  3845	  3845#	  3865	  3876	  3876#	  3896	  3907	  3907#	  5146#	  5169	  5201
	  5220	  5220#	  5237	  5269	  5288	  5288#	  5305	  5337	  5356	  5356#	  5373	  5405	  5424	  5424#
	  5441	  5473	  5492	  5492#	  5509	  5541	  5560	  5560#	  5577	  5609	  5628	  5628#	  5634#	  5652
	  5675	  5675#	  5688	  5711	  5711#	  5724	  5747	  5747#	  5760	  5783	  5783#	  5796	  5819	  5819#
	  5832	  5855	  5855#	  5868	  5891	  5891#	  5925#	  5956	  5964	  5964#	  5979	  5987	  5987#	  6002
	  6010	  6010#	  6025	  6033	  6033#	  6048	  6056	  6056#	  6071	  6079	  6079#	  6094	  6102	  6102#
	  6128#	  6148	  6157	  6157#	  6166	  6175	  6175#	  6184	  6193	  6193#	  6202	  6211	  6211#	  6220
	  6229	  6229#	  6238	  6247	  6247#	  6256	  6265	  6265#	  6274	  6283	  6283#	  6292	  6301	  6301#
	  6310	  6319	  6319#	  6328	  6337	  6337#	  6346	  6355	  6355#	  6364	  6373	  6373#	  6382	  6391     SEQ 0227
	  6391#	  6400	  6409	  6409#	  6418	  6427	  6427#	  6436	  6445	  6445#	  6454	  6463	  6463#	  8032#
	  8044	  8051	  8055	  8066	  8066#	  8073	  8080	  8084	  8095	  8095#	  8102	  8109	  8113	  8124
	  8124#	  8131	  8138	  8142	  8153	  8153#	  8160	  8167	  8171	  8182	  8182#	  8189	  8196	  8200
	  8211	  8211#	  8218	  8225	  8229	  8240	  8240#	  8247	  8254	  8258	  8269	  8269#	  8276	  8283
	  8287	  8298	  8298#	  8305	  8312	  8316	  8327	  8327#	  8334	  8341	  8345	  8356	  8356#	  8363
	  8370	  8374	  8385	  8385#	  8392	  8399	  8403	  8414	  8414#	  8421	  8428	  8432	  8443	  8443#
	  8450	  8457	  8461	  8472	  8472#	  8479	  8486	  8490	  8501	  8501#	  8508	  8515	  8519	  8530
	  8530#	  8537	  8544	  8548	  8559	  8559#	  8561#	  8566	  8573	  8577	  8589#	  8594	  8601	  8605
	  8617#	  8622	  8629	  8633	  8645#	  8650	  8657	  8661	  8672#
XAC0	  9084#	  9084	  9093	  9101#	  9101	  9110	  9190#	  9190	  9201
XAC1	  9085#	  9085	  9094	  9102#	  9102	  9111	  9191#	  9191	  9202
XAC15	  9072#	  9072	  9078
XAC16	  9192#	  9192	  9203
XMUPC	  8997	  9016#
XMUUO	  8997#
XMUUO0	  9011#	  9021
Y	  2011#	  2032	  2048	  2048#	  2064	  2080	  2080#	  2096	  2112	  2112#	  2128	  2144	  2144#	  2160
	  2176	  2176#	  2192	  2208	  2208#	  2224	  2240	  2240#	  3687#	  3705	  3722	  3722#	  3736	  3753
	  3753#	  3767	  3784	  3784#	  3798	  3815	  3815#	  3829	  3846	  3846#	  3860	  3877	  3877#	  3891
	  3908	  3908#	  5147#	  5165	  5167	  5197	  5199	  5219	  5219#	  5233	  5235	  5265	  5267	  5287
	  5287#	  5301	  5303	  5333	  5335	  5355	  5355#	  5369	  5371	  5401	  5403	  5423	  5423#	  5437
	  5439	  5469	  5471	  5491	  5491#	  5505	  5507	  5537	  5539	  5559	  5559#	  5573	  5575	  5605
	  5607	  5627	  5627#
Z1	  5635#	  5653	  5658	  5676	  5676#	  5689	  5694	  5712	  5712#	  5725	  5730	  5748	  5748#	  5761
	  5766	  5784	  5784#	  5797	  5802	  5820	  5820#	  5833	  5838	  5856	  5856#	  5869	  5874	  5892
	  5892#
$$420	   719#
$$421	   720#
$$422	   721#
$$423	   722#
$$424	   723#
$$425	   724#
$$426	   725#
$$427	   726#
$$430	   727#
$$431	   728#
$$432	   729#
$$433	   730#
$$434	   731#
$$435	   732#
$$436	   733#
$$437	   734#
$$500	   737#
$$501	   738#
$$502	   739#
$$503	   740#
$$BEGI	   705#
$$DTE0	   765	   801#
$$DTE2	   766	   814#
$$LOC	   702#	   741
$$MUUO	   619#
$$OUTE	   625#
$$STAR	   705	   706	   745#                                                                                            SEQ 0228
$$TAX1	   637#
$$TAX2	   638#
$$TOGG	   631#
$$UUO	   608#
$ACC0	   446#
$BEGEN	   714#
$BEND1	   416#
$BEND2	   417#
$CHRIN	   507#
$CRLF	   509#
$DDT	   683#
$DEVCH	   333#
$DSKUP	   386#
$DTCHR	   695#
$DTCI	   689#
$DTCLK	   688#	   763
$DTCMD	   692#	   799	   812
$DTF11	   691#
$DTFLG	   687#	   762	   800	   802	   813	   815
$DTMTD	   696#
$DTMTI	   697#
$DTOPR	   694#	   764
$DTSEQ	   693#
$DTSWR	   699#
$DTT11	   690#
$DVCH1	   333#
$DVOFF	   503#
$EMODE	   384#
$ERHL1	  9334#
$FFF	   511#
$IBUF	   559#
$INEXT	   561#
$INNM	   560#
$ITRHL	   427#
$ITRX1	   428#
$LPAPE	  9347
$MMAP	   387#
$MODVL	   382#
$MODVU	   383#
$OBUF	   550#
$ONETM	   410#
$OUTEX	   552#
$OUTNM	   551#
$PAPER	   333
$PARER	   434#
$PGMIN	  9065#
$PNAME	   380#
$PSHER	   438#
$PVER	   381#
$RSRTX	   430#
$RSRTY	   431#
$SPAG1	   450#
$SPB1	   771	   777#                                                                                                    SEQ 0229
$SPBEN	   714	   775#
$SPBEX	   778	   786#
$SPBKL	   787	   793#
$SPBUS	   780#
$SPEC	   711	   770#
$SPKLD	   794	   808#
$START	   347#
$STD	   682#	   709#
$STKIL	   754#
$STKL	   762#
$STL	   684#
$STM	   685#	   711#
$SVAPR	   448#
$SVPAG	   449#
$SVPI	   447#
$SVUPC	   453#
$SVUUO	   452#
$TABF	   510#
$TTCHR	   506#
$TWCNT	   502#
$TYPNB	   508#
$UMODE	   385#
$UORTX	   425#
$USRHL	   429#
$UUOER	   426#	   467
$VTF	   512#
%ACTFL	   459#
%ACTUL	   460#
%COREC	   458#
%CORFL	   457#
%DISCR	   461#
%ERHI1	   600#
%ERHI2	   601#
%ERHI3	   602#
%X	  1239#	  1240	  1251	  1257#	  1258	  1269	  1275#	  1276	  1288	  1294#	  1295	  1309	  1315#	  1316
	  1322	  1328#	  1329	  1340	  1346#	  1347	  1467	  1473#	  1474	  1486	  1492#	  1493	  1504	  1510#
	  1511	  1523	  1529#	  1530	  1571	  1577#	  1578	  1590	  1798#	  1799	  1814	  1828#	  1829	  1844
	  1858#	  1859	  1874	  1888#	  1889	  1904	  1918#	  1919	  1934	  1948#	  1949	  1964	  1978#	  1979
	  1994	  2026#	  2027	  2042	  2058#	  2059	  2074	  2090#	  2091	  2106	  2122#	  2123	  2138	  2154#
	  2155	  2170	  2186#	  2187	  2202	  2218#	  2219	  2234	  2274#	  2275	  2292	  2316#	  2317	  2334
	  2358#	  2359	  2376	  2400#	  2401	  2418	  2442#	  2443	  2460	  2484#	  2485	  2502	  2526#	  2527
	  2544	  2570#	  2571	  2584	  2590#	  2591	  2606	  2612#	  2613	  2628	  2634#	  2635	  2649	  2655#
	  2656	  2670	  2681#	  2682	  2695	  2701#	  2702	  2717	  2723#	  2724	  2739	  2745#	  2746	  2760
	  2766#	  2767	  2781	  2792#	  2793	  2806	  2812#	  2813	  2828	  2834#	  2835	  2850	  2856#	  2857
	  2871	  2877#	  2878	  2892	  2903#	  2904	  2917	  2923#	  2924	  2939	  2945#	  2946	  2961	  2967#
	  2968	  2982	  2988#	  2989	  3003	  3014#	  3015	  3028	  3034#	  3035	  3050	  3056#	  3057	  3072
	  3078#	  3079	  3093	  3099#	  3100	  3114	  3125#	  3126	  3139	  3145#	  3146	  3161	  3167#	  3168
	  3183	  3189#	  3190	  3204	  3210#	  3211	  3225	  3236#	  3237	  3250	  3256#	  3257	  3272	  3278#
	  3279	  3294	  3300#	  3301	  3315	  3321#	  3322	  3336	  3347#	  3348	  3361	  3367#	  3368	  3383
	  3389#	  3390	  3405	  3411#	  3412	  3426	  3432#	  3433	  3447	  3458#	  3459	  3472	  3478#	  3479
	  3494	  3500#	  3501	  3516	  3522#	  3523	  3537	  3543#	  3544	  3558	  3569#	  3570	  3583	  3589#
	  3590	  3605	  3611#	  3612	  3627	  3633#	  3634	  3648	  3654#	  3655	  3669	  3699#	  3700	  3716
	  3730#	  3731	  3747	  3761#	  3762	  3778	  3792#	  3793	  3809	  3823#	  3824	  3840	  3854#	  3855     SEQ 0230
	  3871	  3885#	  3886	  3902	  4364#	  4365	  4395	  4401#	  4402	  4432	  4438#	  4439	  4469	  4475#
	  4476	  4506	  4512#	  4513	  4543	  4549#	  4550	  4580	  4586#	  4587	  4617	  4623#	  4624	  4654
	  4660#	  4661	  4691	  4697#	  4698	  4728	  4734#	  4735	  4765	  4771#	  4772	  4802	  4808#	  4809
	  4839	  4845#	  4846	  4876	  4882#	  4883	  4913	  4919#	  4920	  4950	  4956#	  4957	  4987	  4993#
	  4994	  5024	  5030#	  5031	  5061	  5067#	  5068	  5098	  5104#	  5105	  5135	  5648#	  5649	  5666
	  5684#	  5685	  5702	  5720#	  5721	  5738	  5756#	  5757	  5774	  5792#	  5793	  5810	  5828#	  5829
	  5846	  5864#	  5865	  5882	  6475#	  6476	  6491	  6515#	  6516	  6531	  6555#	  6556	  6571	  6595#
	  6596	  6611	  6635#	  6636	  6651	  6675#	  6676	  6691	  6715#	  6716	  6731	  6770#	  6771	  6790
	  6811#	  6812	  6831	  6852#	  6853	  6872	  6893#	  6894	  6913	  6934#	  6935	  6954	  6975#	  6976
	  6995	  7016#	  7017	  7036	  7057#	  7058	  7077	  7098#	  7099	  7118	  7139#	  7140	  7159	  7180#
	  7181	  7200	  7221#	  7222	  7241	  7262#	  7263	  7282	  7303#	  7304	  7323	  7344#	  7345	  7364
	  7385#	  7386	  7405	  7426#	  7427	  7446	  7467#	  7468	  7487	  7508#	  7509	  7528	  7549#	  7550
	  7569	  7590#	  7591	  7610	  7631#	  7632	  7651	  7672#	  7673	  7692	  7713#	  7714	  7733	  7754#
	  7755	  7774	  7795#	  7796	  7815	  7836#	  7837	  7856	  7877#	  7878	  7897	  7918#	  7919	  7938
	  7959#	  7960	  7979	  8000#	  8001	  8020	  8046#	  8047	  8061	  8075#	  8076	  8090	  8104#	  8105
	  8119	  8133#	  8134	  8148	  8162#	  8163	  8177	  8191#	  8192	  8206	  8220#	  8221	  8235	  8249#
	  8250	  8264	  8278#	  8279	  8293	  8307#	  8308	  8322	  8336#	  8337	  8351	  8365#	  8366	  8380
	  8394#	  8395	  8409	  8423#	  8424	  8438	  8452#	  8453	  8467	  8481#	  8482	  8496	  8510#	  8511
	  8525	  8539#	  8540	  8554	  8568#	  8569	  8583	  8596#	  8597	  8611	  8624#	  8625	  8639	  8652#
	  8653	  8667	  8735#	  8736	  8752	  8767#	  8768	  8784	  8799#	  8800	  8816	  8831#	  8832	  8848
	  8863#	  8864	  8880	  8895#	  8896	  8912	  8927#	  8928	  8944	  8959#	  8960	  8976	  8987#	  8988
	  9028
..0001	  1801#
..0002	  1831#
..0003	  1861#
..0004	  1891#
..0005	  1921#
..0006	  1951#
..0007	  1981#
..0010	  2029#
..0011	  2061#
..0012	  2093#
..0013	  2125#
..0014	  2157#
..0015	  2189#
..0016	  2221#
..0017	  2277#
..0020	  2319#
..0021	  2361#
..0022	  2403#
..0023	  2445#
..0024	  2487#
..0025	  2529#
..0026	  2573#
..0027	  2684#
..0030	  2795#
..0031	  2906#
..0032	  3017#
..0033	  3128#
..0034	  3239#
..0035	  3350#
..0036	  3461#
..0037	  3572#                                                                                                            SEQ 0231
..0040	  3702#
..0041	  3733#
..0042	  3764#
..0043	  3795#
..0044	  3826#
..0045	  3857#
..0046	  3888#
..0047	  3932#
..0050	  3953#
..0051	  3974#
..0052	  3995#
..0053	  4016#
..0054	  4038#
..0055	  4059#
..0056	  4090#
..0057	  4108#
..0060	  4126#
..0061	  4144#
..0062	  4162#
..0063	  4180#
..0064	  4198#
..0065	  4225#
..0066	  4234#
..0067	  4244#
..0070	  4253#
..0071	  4263#
..0072	  4272#
..0073	  4282#
..0074	  4291#
..0075	  4301#
..0076	  4310#
..0077	  4320#
..0100	  4329#
..0101	  4339#
..0102	  4348#
..0103	  4374#
..0104	  4411#
..0105	  4448#
..0106	  4485#
..0107	  4522#
..0110	  4559#
..0111	  4596#
..0112	  4633#
..0113	  4670#
..0114	  4707#
..0115	  4744#
..0116	  4781#
..0117	  4818#
..0120	  4855#
..0121	  4892#
..0122	  4929#
..0123	  4966#
..0124	  5003#                                                                                                            SEQ 0232
..0125	  5040#
..0126	  5077#
..0127	  5114#
..0130	  5166	  5179#
..0131	  5198	  5211#
..0132	  5234	  5247#
..0133	  5266	  5279#
..0134	  5302	  5315#
..0135	  5334	  5347#
..0136	  5370	  5383#
..0137	  5402	  5415#
..0140	  5438	  5451#
..0141	  5470	  5483#
..0142	  5506	  5519#
..0143	  5538	  5551#
..0144	  5574	  5587#
..0145	  5606	  5619#
..0146	  5651#
..0147	  5687#
..0150	  5723#
..0151	  5759#
..0152	  5795#
..0153	  5831#
..0154	  5867#
..0155	  6480	  6489#	  6496
..0156	  6520	  6529#	  6536
..0157	  6560	  6569#	  6576
..0160	  6600	  6609#	  6616
..0161	  6640	  6649#	  6656
..0162	  6680	  6689#	  6696
..0163	  6720	  6729#	  6736
..0164	  6773#
..0165	  6814#
..0166	  6855#
..0167	  6896#
..0170	  6937#
..0171	  6978#
..0172	  7019#
..0173	  7060#
..0174	  7101#
..0175	  7142#
..0176	  7183#
..0177	  7224#
..0200	  7265#
..0201	  7306#
..0202	  7347#
..0203	  7388#
..0204	  7429#
..0205	  7470#
..0206	  7511#
..0207	  7552#
..0210	  7593#
..0211	  7634#                                                                                                            SEQ 0233
..0212	  7675#
..0213	  7716#
..0214	  7757#
..0215	  7798#
..0216	  7839#
..0217	  7880#
..0220	  7921#
..0221	  7962#
..0222	  8003#
..0223	  8049#
..0224	  8052#
..0225	  8056#
..0226	  8078#
..0227	  8081#
..0230	  8085#
..0231	  8107#
..0232	  8110#
..0233	  8114#
..0234	  8136#
..0235	  8139#
..0236	  8143#
..0237	  8165#
..0240	  8168#
..0241	  8172#
..0242	  8194#
..0243	  8197#
..0244	  8201#
..0245	  8223#
..0246	  8226#
..0247	  8230#
..0250	  8252#
..0251	  8255#
..0252	  8259#
..0253	  8281#
..0254	  8284#
..0255	  8288#
..0256	  8310#
..0257	  8313#
..0260	  8317#
..0261	  8339#
..0262	  8342#
..0263	  8346#
..0264	  8368#
..0265	  8371#
..0266	  8375#
..0267	  8397#
..0270	  8400#
..0271	  8404#
..0272	  8426#
..0273	  8429#
..0274	  8433#
..0275	  8455#
..0276	  8458#                                                                                                            SEQ 0234
..0277	  8462#
..0300	  8484#
..0301	  8487#
..0302	  8491#
..0303	  8513#
..0304	  8516#
..0305	  8520#
..0306	  8542#
..0307	  8545#
..0310	  8549#
..0311	  8571#
..0312	  8574#
..0313	  8578#
..0314	  8599#
..0315	  8602#
..0316	  8606#
..0317	  8627#
..0320	  8630#
..0321	  8634#
..0322	  8655#
..0323	  8658#
..0324	  8662#
..0325	  8739	  8745#
..0326	  8741	  8743#
..0327	  8771	  8777#
..0330	  8773	  8775#
..0331	  8803	  8809#
..0332	  8805	  8807#
..0333	  8835	  8841#
..0334	  8837	  8839#
..0335	  8867	  8873#
..0336	  8869	  8871#
..0337	  8899	  8905#
..0340	  8901	  8903#
..0341	  8931	  8937#
..0342	  8933	  8935#
..0343	  8963	  8969#
..0344	  8965	  8967#
.JB41	   333#
.JBAPR	   333#
.JBCNI	   333#
.JBDDT	   333#
.JBFF	   333#
.JBOPC	   333#
.JBREL	   333#
.JBREN	   333#
.JBSA	   333#
.JBSYM	   333#
.JBTPC	   333#
.JBUSY	   333#
.JBUUO	   333#
.JBVER	   333#
                                                                                                                           SEQ 0235
BLURB	   829#	  1663	  1779	  2002	  2243	  2552	  3676	  5898
BLURB1	   835#	  2263	  2305	  2347	  2389	  2431	  2473	  2515                                                     SEQ 0236
CFLUSH	   251#
CINVAL	   250#
CLKWT	  1054#	  4224	  4243	  4262	  4281	  4300	  4319	  4338
CLOKOP	   245#
CLRAP1	   845#	  3919	  3937	  3958	  3979	  4000	  4021	  4043	  4217	  6483	  6523	  6563	  6603	  6643
	  6683	  6723
CLRAPR	   844#	  1802	  1832	  1862	  1892	  1922	  1952	  1982	  2030	  2062	  2094	  2126	  2158	  2190
	  2222	  2278	  2320	  2362	  2404	  2446	  2488	  2530	  2574	  2594	  2616	  2638	  2659	  2685
	  2705	  2727	  2749	  2770	  2796	  2816	  2838	  2860	  2881	  2907	  2927	  2949	  2971	  2992
	  3018	  3038	  3060	  3082	  3103	  3129	  3149	  3171	  3193	  3214	  3240	  3260	  3282	  3304
	  3325	  3351	  3371	  3393	  3415	  3436	  3462	  3482	  3504	  3526	  3547	  3573	  3593	  3615
	  3637	  3658	  3703	  3734	  3765	  3796	  3827	  3858	  3889	  4073	  4078	  4096	  4114	  4132
	  4150	  4168	  4186	  4205	  4354	  4379	  4416	  4453	  4490	  4527	  4564	  4601	  4638	  4675
	  4712	  4749	  4786	  4823	  4860	  4897	  4934	  4971	  5008	  5045	  5082	  5119	  5140	  5161
	  5180	  5193	  5212	  5229	  5248	  5261	  5280	  5297	  5316	  5329	  5348	  5365	  5384	  5397
	  5416	  5433	  5452	  5465	  5484	  5501	  5520	  5533	  5552	  5569	  5588	  5601	  5620	  5671
	  5707	  5743	  5779	  5815	  5851	  5887	  5905	  5949	  5972	  5995	  6018	  6041	  6064	  6087
	  6108	  6119	  6144	  6162	  6180	  6198	  6216	  6234	  6252	  6270	  6288	  6306	  6324	  6342
	  6360	  6378	  6396	  6414	  6432	  6450	  6503	  6543	  6583	  6623	  6663	  6703	  6743	  8679
	  8695	  8711	  8995	  9036	  9052
CLRBT1	  1042#	  4216	  6482	  6522	  6562	  6602	  6642	  6682	  6722
CLRBTH	  1038#	  1801	  1831	  1861	  1891	  1921	  1951	  1981	  2029	  2061	  2093	  2125	  2157	  2189
	  2221	  2277	  2319	  2361	  2403	  2445	  2487	  2529	  2573	  2593	  2615	  2637	  2658	  2684
	  2704	  2726	  2748	  2769	  2795	  2815	  2837	  2859	  2880	  2906	  2926	  2948	  2970	  2991
	  3017	  3037	  3059	  3081	  3102	  3128	  3148	  3170	  3192	  3213	  3239	  3259	  3281	  3303
	  3324	  3350	  3370	  3392	  3414	  3435	  3461	  3481	  3503	  3525	  3546	  3572	  3592	  3614
	  3636	  3657	  3702	  3733	  3764	  3795	  3826	  3857	  3888	  4072	  4353	  4378	  4415	  4452
	  4489	  4526	  4563	  4600	  4637	  4674	  4711	  4748	  4785	  4822	  4859	  4896	  4933	  4970
	  5007	  5044	  5081	  5118	  5139	  5160	  5179	  5192	  5211	  5228	  5247	  5260	  5279	  5296
	  5315	  5328	  5347	  5364	  5383	  5396	  5415	  5432	  5451	  5464	  5483	  5500	  5519	  5532
	  5551	  5568	  5587	  5600	  5619	  5670	  5706	  5742	  5778	  5814	  5850	  5886	  5904	  5948
	  5971	  5994	  6017	  6040	  6063	  6086	  6107	  6118	  6143	  6161	  6179	  6197	  6215	  6233
	  6251	  6269	  6287	  6305	  6323	  6341	  6359	  6377	  6395	  6413	  6431	  6449	  6502	  6542
	  6582	  6622	  6662	  6702	  6742	  8678	  8694	  8710	  8994	  9035	  9051
CLRPI	   846#	  1803	  1833	  1863	  1893	  1923	  1953	  1983	  2031	  2063	  2095	  2127	  2159	  2191
	  2223	  2279	  2321	  2363	  2405	  2447	  2489	  2531	  2575	  2595	  2617	  2639	  2660	  2686
	  2706	  2728	  2750	  2771	  2797	  2817	  2839	  2861	  2882	  2908	  2928	  2950	  2972	  2993
	  3019	  3039	  3061	  3083	  3104	  3130	  3150	  3172	  3194	  3215	  3241	  3261	  3283	  3305
	  3326	  3352	  3372	  3394	  3416	  3437	  3463	  3483	  3505	  3527	  3548	  3574	  3594	  3616
	  3638	  3659	  3704	  3735	  3766	  3797	  3828	  3859	  3890	  3918	  3936	  3957	  3978	  3999
	  4020	  4042	  4074	  4077	  4095	  4113	  4131	  4149	  4167	  4185	  4204	  4218	  4355	  4380
	  4417	  4454	  4491	  4528	  4565	  4602	  4639	  4676	  4713	  4750	  4787	  4824	  4861	  4898
	  4935	  4972	  5009	  5046	  5083	  5120	  5141	  5162	  5181	  5194	  5213	  5230	  5249	  5262
	  5281	  5298	  5317	  5330	  5349	  5366	  5385	  5398	  5417	  5434	  5453	  5466	  5485	  5502
	  5521	  5534	  5553	  5570	  5589	  5602	  5621	  5672	  5708	  5744	  5780	  5816	  5852	  5888
	  5906	  5950	  5973	  5996	  6019	  6042	  6065	  6088	  6109	  6120	  6145	  6163	  6181	  6199
	  6217	  6235	  6253	  6271	  6289	  6307	  6325	  6343	  6361	  6379	  6397	  6415	  6433	  6451
	  6484	  6504	  6524	  6544	  6564	  6584	  6604	  6624	  6644	  6664	  6684	  6704	  6724	  6744
	  8680	  8696	  8712	  8996	  9037	  9053
CLRTRP	   827#	  4203
CWRTBI	   252#
DROPDV	   212#
ENDUUO	   258#	   415                                                                                                     SEQ 0237
EOPUUO	   259#	   417
ERLOOP	   303#
ERLP1	   304#
ERLP2	   305#
ERRHLT	   146#
ERROR	   312#
ERROR1	   323#
ERUUO	   302#
EXECUT	   983#
EXIT	   783
FATAL	   145#
FMUUO	  1127#	  8726	  8758	  8790	  8822	  8854	  8886	  8918	  8950
FRD36	   287#
FRD8	   288#
FREAD	   286#
FSELEC	   285#
GET	   129#
GO	   126#
HALT	   131#	   436	   719	   721	   722	   726	   740	   817	  1185	  1186	  1200	  1207	  1214	  1221
	  1228	  1235	  1245	  1253	  1263	  1271	  1282	  1290	  1303	  1311	  1324	  1334	  1342	  1353
	  1363	  1374	  1382	  1390	  1398	  1406	  1414	  1421	  1429	  1437	  1445	  1453	  1461	  1469
	  1480	  1488	  1498	  1506	  1517	  1525	  1536	  1543	  1558	  1565	  1573	  1586	  1592	  1601
	  1618	  1626	  1634	  1642	  1649	  1656	  1677	  1685	  1692	  1700	  1706	  1714	  1721	  1729
	  1736	  1744	  1751	  1759	  1766	  1774	  1810	  1816	  1840	  1846	  1870	  1876	  1900	  1906
	  1930	  1936	  1960	  1966	  1990	  1996	  2038	  2044	  2070	  2076	  2102	  2108	  2134	  2140
	  2166	  2172	  2198	  2204	  2230	  2236	  2288	  2294	  2330	  2336	  2372	  2378	  2414	  2420
	  2456	  2462	  2498	  2504	  2540	  2546	  2579	  2586	  2601	  2608	  2623	  2630	  2644	  2651
	  2666	  2672	  2690	  2697	  2712	  2719	  2734	  2741	  2755	  2762	  2777	  2783	  2801	  2808
	  2823	  2830	  2845	  2852	  2866	  2873	  2888	  2894	  2912	  2919	  2934	  2941	  2956	  2963
	  2977	  2984	  2999	  3005	  3023	  3030	  3045	  3052	  3067	  3074	  3088	  3095	  3110	  3116
	  3134	  3141	  3156	  3163	  3178	  3185	  3199	  3206	  3221	  3227	  3245	  3252	  3267	  3274
	  3289	  3296	  3310	  3317	  3332	  3338	  3356	  3363	  3378	  3385	  3400	  3407	  3421	  3428
	  3443	  3449	  3467	  3474	  3489	  3496	  3511	  3518	  3532	  3539	  3554	  3560	  3578	  3585
	  3600	  3607	  3622	  3629	  3643	  3650	  3665	  3671	  3712	  3718	  3743	  3749	  3774	  3780
	  3805	  3811	  3836	  3842	  3867	  3873	  3898	  3904	  4397	  4434	  4471	  4508	  4545	  4582
	  4619	  4656	  4693	  4730	  4767	  4804	  4841	  4878	  4915	  4952	  4989	  5026	  5063	  5100
	  5137	  5177	  5184	  5209	  5216	  5245	  5252	  5277	  5284	  5313	  5320	  5345	  5352	  5381
	  5388	  5413	  5420	  5449	  5456	  5481	  5488	  5517	  5524	  5549	  5556	  5585	  5592	  5617
	  5624	  5662	  5668	  5698	  5704	  5734	  5740	  5770	  5776	  5806	  5812	  5842	  5848	  5878
	  5884	  5918	  5962	  5985	  6008	  6031	  6054	  6077	  6100	  6114	  6125	  6151	  6155	  6169
	  6173	  6187	  6191	  6205	  6209	  6223	  6227	  6241	  6245	  6259	  6263	  6277	  6281	  6295
	  6299	  6313	  6317	  6331	  6335	  6349	  6353	  6367	  6371	  6385	  6389	  6403	  6407	  6421
	  6425	  6439	  6443	  6457	  6461	  6488	  6493	  6498	  6528	  6533	  6538	  6568	  6573	  6578
	  6608	  6613	  6618	  6648	  6653	  6658	  6688	  6693	  6698	  6728	  6733	  6738	  6776	  6780
	  6786	  6792	  6817	  6821	  6827	  6833	  6858	  6862	  6868	  6874	  6899	  6903	  6909	  6915
	  6940	  6944	  6950	  6956	  6981	  6985	  6991	  6997	  7022	  7026	  7032	  7038	  7063	  7067
	  7073	  7079	  7104	  7108	  7114	  7120	  7145	  7149	  7155	  7161	  7186	  7190	  7196	  7202
	  7227	  7231	  7237	  7243	  7268	  7272	  7278	  7284	  7309	  7313	  7319	  7325	  7350	  7354
	  7360	  7366	  7391	  7395	  7401	  7407	  7432	  7436	  7442	  7448	  7473	  7477	  7483	  7489
	  7514	  7518	  7524	  7530	  7555	  7559	  7565	  7571	  7596	  7600	  7606	  7612	  7637	  7641
	  7647	  7653	  7678	  7682	  7688	  7694	  7719	  7723	  7729	  7735	  7760	  7764	  7770	  7776
	  7801	  7805	  7811	  7817	  7842	  7846	  7852	  7858	  7883	  7887	  7893	  7899	  7924	  7928
	  7934	  7940	  7965	  7969	  7975	  7981	  8006	  8010	  8016	  8022	  8052	  8057	  8063	  8081     SEQ 0238
	  8086	  8092	  8110	  8115	  8121	  8139	  8144	  8150	  8168	  8173	  8179	  8197	  8202	  8208
	  8226	  8231	  8237	  8255	  8260	  8266	  8284	  8289	  8295	  8313	  8318	  8324	  8342	  8347
	  8353	  8371	  8376	  8382	  8400	  8405	  8411	  8429	  8434	  8440	  8458	  8463	  8469	  8487
	  8492	  8498	  8516	  8521	  8527	  8545	  8550	  8556	  8574	  8579	  8585	  8602	  8607	  8613
	  8630	  8635	  8641	  8658	  8663	  8669	  8685	  8689	  8701	  8705	  8717	  8721	  8743	  8748
	  8754	  8775	  8780	  8786	  8807	  8812	  8818	  8839	  8844	  8850	  8871	  8876	  8882	  8903
	  8908	  8914	  8935	  8940	  8946	  8967	  8972	  8978	  9012	  9013	  9014	  9015	  9018	  9023
	  9030	  9045	  9060	  9065	  9131	  9136	  9142	  9144	  9146	  9148	  9150	  9152	  9154	  9156
	  9162	  9163	  9164	  9165	  9166	  9167	  9168	  9169	  9170	  9172	  9174	  9175	  9334
HALTPI	   826	  1670	  2563	  3917	  3942	  3963	  3984	  4005	  4027	  4048	  4076	  4094	  4112	  4130
	  4148	  4166	  4184	  4202	  4219	  4238	  4257	  4276	  4295	  4314	  4333	  4352	  4381	  4418
	  4455	  4492	  4529	  4566	  4603	  4640	  4677	  4714	  4751	  4788	  4825	  4862	  4899	  4936
	  4973	  5010	  5047	  5084	  5121	  5163	  5195	  5231	  5263	  5299	  5331	  5367	  5399	  5435
	  5467	  5503	  5535	  5571	  5603
INDPI	  1149#	  6467	  6507	  6547	  6587	  6627	  6667	  6707
JEN	   133#	  5659	  5695	  5731	  5767	  5803	  5839	  5875	  6501	  6541	  6581	  6621	  6661	  6701
	  6741
JRSTF	   132#	  1580	  3934	  3955	  3976	  3997	  4018	  4040	  4061	  4092	  4110	  4128	  4146	  4164
	  4182	  4200	  4236	  4255	  4274	  4293	  4312	  4331	  4350	  4376	  4413	  4450	  4487	  4524
	  4561	  4598	  4635	  4672	  4709	  4746	  4783	  4820	  4857	  4894	  4931	  4968	  5005	  5042
	  5079	  5116	  9040	  9056	  9135
MAPADR	   268#
MAPCNK	   269#
MAPMEM	   265#
MAPPNT	   271#
MAPSET	   270#
MEMSEG	   267#
MEMZRO	   266#
MODPCP	   278#
MODPCU	   277#
MTROP	   246#
NAME	    11#	    12
PBELL	   221#
PCRL	   215#
PCRL2	   219#
PCRL2F	   220#
PCRLF	   216#
PFORCE	   223#
PGMINT	   139#
PIDIS	   928#	  5643	  5679	  5715	  5751	  5787	  5823	  5859
PIHCLR	   898#	  3694	  3725	  3756	  3787	  3818	  3849	  3880
PINO	   871#	  1792	  1822	  1852	  1882	  1912	  1942	  1972
PIONOF	   911#	  2258	  2300	  2342	  2384	  2426	  2468	  2510
PITEST	   945#	  2565	  2676	  2787	  2898	  3009	  3120	  3231	  3342	  3453	  3564
PIYES	   884#	  2019	  2051	  2083	  2115	  2147	  2179	  2211
PJRST	   130#
PMSG	   225#
PMSGF	   228#
PNT1	   181#
PNT11	   195#
PNT11F	   196#
PNT1F	   182#
PNT2	   183#                                                                                                            SEQ 0239
PNT2F	   184#
PNT3	   185#
PNT3F	   186#
PNT4	   187#
PNT4F	   188#
PNT5	   189#
PNT5F	   190#
PNT6	   191#
PNT6F	   192#
PNT7	   193#
PNT7F	   194#
PNTA	   167#
PNTADF	   198#
PNTADR	   197#
PNTAF	   168#
PNTAL	   169#
PNTALF	   170#
PNTCHF	   180#
PNTCHR	   179#
PNTCI	   177#
PNTCIF	   178#
PNTCW	   213#
PNTCWF	   214#
PNTDCF	   206#
PNTDEC	   205#
PNTDS	   207#
PNTDSF	   208#
PNTHW	   201#
PNTHWF	   202#
PNTMGN	   292#
PNTMSF	   174#
PNTMSG	   173#
PNTNM	   209#
PNTOCF	   204#
PNTOCS	   203#
PNTOCT	   199#
PNTOTF	   200#
PNTSIX	   210#
PNTSXF	   211#
PSIXL	   171#
PSIXLF	   172#
PSIXM	   175#
PSIXMF	   176#
PSKPA	  1081#	  5155	  5223	  5291	  5359	  5427	  5495	  5563
PSKPB	  1104#	  5187	  5255	  5323	  5391	  5459	  5527	  5595
PSP	   217#
PSPF	   218#
PUT	   128#
REPTUO	   306#
RTN	   127#	   423
S	    57#	    59	    63	    92	    94	   103	   106	   121	   122	   124	   135	   137	   141	   143
	   148	   152	   298	   300	   333	   338	   344	   371	   373	   391	   393	   411	   413	   442
	   444	   462	   464	   482	   484	   492	   494	   515	   520	   546	   548	   555	   557	   563     SEQ 0240
	   565	   571	   573	   577	   579	   584	   586	   590	   592	   596	   598	   604	   606	   609
	   611	   615	   617	   621	   623	   627	   629	   633	   635	   640	   642	   646	   648	   652
	   654	   656	   658
SIXBTZ	   234#
STOP	   990#	  1199	  1206	  1213	  1220	  1227	  1234	  1244	  1262	  1281	  1302	  1333	  1352	  1362
	  1373	  1381	  1389	  1397	  1405	  1413	  1420	  1428	  1436	  1444	  1452	  1460	  1479	  1497
	  1516	  1535	  1542	  1557	  1564	  1585	  1600	  1617	  1625	  1633	  1641	  1648	  1655	  1676
	  1684	  1691	  1699	  1705	  1713	  1720	  1728	  1735	  1743	  1750	  1758	  1765	  1773	  1809
	  1839	  1869	  1899	  1929	  1959	  1989	  2037	  2069	  2101	  2133	  2165	  2197	  2229	  2287
	  2329	  2371	  2413	  2455	  2497	  2539	  2578	  2600	  2622	  2643	  2665	  2689	  2711	  2733
	  2754	  2776	  2800	  2822	  2844	  2865	  2887	  2911	  2933	  2955	  2976	  2998	  3022	  3044
	  3066	  3087	  3109	  3133	  3155	  3177	  3198	  3220	  3244	  3266	  3288	  3309	  3331	  3355
	  3377	  3399	  3420	  3442	  3466	  3488	  3510	  3531	  3553	  3577	  3599	  3621	  3642	  3664
	  3711	  3742	  3773	  3804	  3835	  3866	  3897	  5176	  5183	  5208	  5215	  5244	  5251	  5276
	  5283	  5312	  5319	  5344	  5351	  5380	  5387	  5412	  5419	  5448	  5455	  5480	  5487	  5516
	  5523	  5548	  5555	  5584	  5591	  5616	  5623	  5661	  5697	  5733	  5769	  5805	  5841	  5877
	  5917	  5961	  5984	  6007	  6030	  6053	  6076	  6099	  6113	  6124	  6150	  6154	  6168	  6172
	  6186	  6190	  6204	  6208	  6222	  6226	  6240	  6244	  6258	  6262	  6276	  6280	  6294	  6298
	  6312	  6316	  6330	  6334	  6348	  6352	  6366	  6370	  6384	  6388	  6402	  6406	  6420	  6424
	  6438	  6442	  6456	  6460	  6497	  6537	  6577	  6617	  6657	  6697	  6737	  8688	  8704	  8720
	  8747	  8779	  8811	  8843	  8875	  8907	  8939	  8971	  9017	  9022	  9044	  9059
STOP1	   994#	  6785	  6826	  6867	  6908	  6949	  6990	  7031	  7072	  7113	  7154	  7195	  7236	  7277
	  7318	  7359	  7400	  7441	  7482	  7523	  7564	  7605	  7646	  7687	  7728	  7769	  7810	  7851
	  7892	  7933	  7974	  8015	  8056	  8085	  8114	  8143	  8172	  8201	  8230	  8259	  8288	  8317
	  8346	  8375	  8404	  8433	  8462	  8491	  8520	  8549	  8578	  8606	  8634	  8662
STOP2	   852#	  1252	  1270	  1289	  1310	  1323	  1341	  1468	  1487	  1505	  1524	  1572	  1591	  1815
	  1845	  1875	  1905	  1935	  1965	  1995	  2043	  2075	  2107	  2139	  2171	  2203	  2235	  2293
	  2335	  2377	  2419	  2461	  2503	  2545	  2585	  2607	  2629	  2650	  2671	  2696	  2718	  2740
	  2761	  2782	  2807	  2829	  2851	  2872	  2893	  2918	  2940	  2962	  2983	  3004	  3029	  3051
	  3073	  3094	  3115	  3140	  3162	  3184	  3205	  3226	  3251	  3273	  3295	  3316	  3337	  3362
	  3384	  3406	  3427	  3448	  3473	  3495	  3517	  3538	  3559	  3584	  3606	  3628	  3649	  3670
	  3717	  3748	  3779	  3810	  3841	  3872	  3903	  4396	  4433	  4470	  4507	  4544	  4581	  4618
	  4655	  4692	  4729	  4766	  4803	  4840	  4877	  4914	  4951	  4988	  5025	  5062	  5099	  5136
	  5667	  5703	  5739	  5775	  5811	  5847	  5883	  6492	  6532	  6572	  6612	  6652	  6692	  6732
	  6791	  6832	  6873	  6914	  6955	  6996	  7037	  7078	  7119	  7160	  7201	  7242	  7283	  7324
	  7365	  7406	  7447	  7488	  7529	  7570	  7611	  7652	  7693	  7734	  7775	  7816	  7857	  7898
	  7939	  7980	  8021	  8062	  8091	  8120	  8149	  8178	  8207	  8236	  8265	  8294	  8323	  8352
	  8381	  8410	  8439	  8468	  8497	  8526	  8555	  8584	  8612	  8640	  8668	  8753	  8785	  8817
	  8849	  8881	  8913	  8945	  8977	  9029
STUCK	  1050#	  3926	  3947	  3968	  3989	  4010	  4032	  4053	  4083	  4101	  4119	  4137	  4155	  4173
	  4191	  4228	  4247	  4266	  4285	  4304	  4323	  4342	  4386	  4423	  4460	  4497	  4534	  4571
	  4608	  4645	  4682	  4719	  4756	  4793	  4830	  4867	  4904	  4941	  4978	  5015	  5052	  5089
	  5126
SWITCH	   240#
TBOTH	   866#	  1248	  1266	  1285	  1306	  1319	  1337	  1464	  1483	  1501	  1520	  1568	  2581	  2603
	  2625	  2646	  2692	  2714	  2736	  2757	  2803	  2825	  2847	  2868	  2914	  2936	  2958	  2979
	  3025	  3047	  3069	  3090	  3136	  3158	  3180	  3201	  3247	  3269	  3291	  3312	  3358	  3380
	  3402	  3423	  3469	  3491	  3513	  3534	  3580	  3602	  3624	  3645	  4392	  4429	  4466	  4503
	  4540	  4577	  4614	  4651	  4688	  4725	  4762	  4799	  4836	  4873	  4910	  4947	  4984	  5021
	  5058	  5095
TGET	   861#	  1249	  1267	  1286	  1307	  1320	  1338	  1465	  1484	  1502	  1521	  1569	  1588	  1812
	  1842	  1872	  1902	  1932	  1962	  1992	  2040	  2072	  2104	  2136	  2168	  2200	  2232	  2290
	  2332	  2374	  2416	  2458	  2500	  2542	  2582	  2604	  2626	  2647	  2668	  2693	  2715	  2737     SEQ 0241
	  2758	  2779	  2804	  2826	  2848	  2869	  2890	  2915	  2937	  2959	  2980	  3001	  3026	  3048
	  3070	  3091	  3112	  3137	  3159	  3181	  3202	  3223	  3248	  3270	  3292	  3313	  3334	  3359
	  3381	  3403	  3424	  3445	  3470	  3492	  3514	  3535	  3556	  3581	  3603	  3625	  3646	  3667
	  3714	  3745	  3776	  3807	  3838	  3869	  3900	  4393	  4430	  4467	  4504	  4541	  4578	  4615
	  4652	  4689	  4726	  4763	  4800	  4837	  4874	  4911	  4948	  4985	  5022	  5059	  5096	  5133
	  5664	  5700	  5736	  5772	  5808	  5844	  5880	  6489	  6529	  6569	  6609	  6649	  6689	  6729
	  6788	  6829	  6870	  6911	  6952	  6993	  7034	  7075	  7116	  7157	  7198	  7239	  7280	  7321
	  7362	  7403	  7444	  7485	  7526	  7567	  7608	  7649	  7690	  7731	  7772	  7813	  7854	  7895
	  7936	  7977	  8018	  8059	  8088	  8117	  8146	  8175	  8204	  8233	  8262	  8291	  8320	  8349
	  8378	  8407	  8436	  8465	  8494	  8523	  8552	  8581	  8609	  8637	  8665	  8750	  8782	  8814
	  8846	  8878	  8910	  8942	  8974	  9026
TRAP	  1046#	  4079	  4097	  4115	  4133	  4151	  4169	  4187	  4220	  4239	  4258	  4277	  4296	  4315
	  4334
TRPCHK	  1060#	  3931	  3952	  3973	  3994	  4015	  4037	  4058	  4089	  4107	  4125	  4143	  4161	  4179
	  4197	  4233	  4252	  4271	  4290	  4309	  4328	  4347	  4373	  4410	  4447	  4484	  4521	  4558
	  4595	  4632	  4669	  4706	  4743	  4780	  4817	  4854	  4891	  4928	  4965	  5002	  5039	  5076
	  5113
TRPPI	   825#	  1785	  2009	  2250	  3685	  5907	  5951	  5974	  5997	  6020	  6043	  6066	  6089
TSET	   856#	  1238	  1256	  1274	  1293	  1314	  1327	  1345	  1472	  1491	  1509	  1528	  1576	  1797
	  1827	  1857	  1887	  1917	  1947	  1977	  2025	  2057	  2089	  2121	  2153	  2185	  2217	  2273
	  2315	  2357	  2399	  2441	  2483	  2525	  2569	  2589	  2611	  2633	  2654	  2680	  2700	  2722
	  2744	  2765	  2791	  2811	  2833	  2855	  2876	  2902	  2922	  2944	  2966	  2987	  3013	  3033
	  3055	  3077	  3098	  3124	  3144	  3166	  3188	  3209	  3235	  3255	  3277	  3299	  3320	  3346
	  3366	  3388	  3410	  3431	  3457	  3477	  3499	  3521	  3542	  3568	  3588	  3610	  3632	  3653
	  3698	  3729	  3760	  3791	  3822	  3853	  3884	  4363	  4400	  4437	  4474	  4511	  4548	  4585
	  4622	  4659	  4696	  4733	  4770	  4807	  4844	  4881	  4918	  4955	  4992	  5029	  5066	  5103
	  5647	  5683	  5719	  5755	  5791	  5827	  5863	  6474	  6514	  6554	  6594	  6634	  6674	  6714
	  6769	  6810	  6851	  6892	  6933	  6974	  7015	  7056	  7097	  7138	  7179	  7220	  7261	  7302
	  7343	  7384	  7425	  7466	  7507	  7548	  7589	  7630	  7671	  7712	  7753	  7794	  7835	  7876
	  7917	  7958	  7999	  8045	  8074	  8103	  8132	  8161	  8190	  8219	  8248	  8277	  8306	  8335
	  8364	  8393	  8422	  8451	  8480	  8509	  8538	  8567	  8595	  8623	  8651	  8734	  8766	  8798
	  8830	  8862	  8894	  8926	  8958	  8986
TTALTM	   161#
TTICHR	   154#
TTICLR	   164#
TTICNV	   159#
TTIDEC	   158#
TTINO	   156#
TTIOCT	   157#
TTIYES	   155#
TTLOOK	   160#
TTSIXB	   162#
TTYINP	   163#
WATINT	   848#	  1805	  1835	  1865	  1895	  1925	  1955	  1985	  2033	  2065	  2097	  2129	  2161	  2193
	  2225	  2283	  2325	  2367	  2409	  2451	  2493	  2535	  3706	  3737	  3768	  3799	  3830	  3861
	  3892	  3927	  3948	  3969	  3990	  4011	  4033	  4054	  4084	  4102	  4120	  4138	  4156	  4174
	  4192	  4229	  4248	  4267	  4286	  4305	  4324	  4343	  4387	  4424	  4461	  4498	  4535	  4572
	  4609	  4646	  4683	  4720	  4757	  4794	  4831	  4868	  4905	  4942	  4979	  5016	  5053	  5090
	  5127	  5173	  5205	  5241	  5273	  5309	  5341	  5377	  5409	  5445	  5477	  5513	  5545	  5581
	  5613	  5654	  5690	  5726	  5762	  5798	  5834	  5870	  5913	  5957	  5980	  6003	  6026	  6049
	  6072	  6095
XCHN2	  1066#	  4367	  4404	  4441	  4478	  4515	  4552	  4589	  4626	  4663	  4700	  4737	  4774	  4811
	  4848	  4885	  4922	  4959	  4996	  5033	  5070	  5107                                                     SEQ 0242
XUUO	   998#	  6763	  6804	  6845	  6886	  6927	  6968	  7009	  7050	  7091	  7132	  7173	  7214	  7255
	  7296	  7337	  7378	  7419	  7460	  7501	  7542	  7583	  7624	  7665	  7706	  7747	  7788	  7829
	  7870	  7911	  7952	  7993
XUUOA	  1021#	  8040	  8069	  8098	  8127	  8156	  8185	  8214	  8243	  8272	  8301	  8330	  8359	  8388
	  8417	  8446	  8475	  8504	  8533	  8562	  8590	  8618	  8646 